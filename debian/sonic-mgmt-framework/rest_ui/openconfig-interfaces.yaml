---
swagger: "2.0"
info:
  description: "Network management Open APIs for Sonic."
  version: "1.0.0"
  title: "Sonic Network Management APIs"
basePath: "/restconf/data"
tags:
- name: "openconfig-interfaces"
  description: "Operations for openconfig-interfaces"
- name: "openconfig-vlan"
  description: "Operations for openconfig-vlan"
- name: "openconfig-if-ip"
  description: "Operations for openconfig-if-ip"
- name: "openconfig-if-ethernet"
  description: "Operations for openconfig-if-ethernet"
- name: "openconfig-if-aggregate"
  description: "Operations for openconfig-if-aggregate"
schemes:
- "https"
- "http"
paths:
  /openconfig-interfaces:interfaces:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces\nTop level container\
        \ for interfaces, including configuration\nand state data."
      operationId: "get_openconfig_interfaces_interfaces"
      produces:
      - "application/yang-data+json"
      parameters: []
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_list_openconfig_interfaces_interfaces_interface\n\
        The list of named interfaces on the device."
      operationId: "post_list_openconfig_interfaces_interfaces_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_list_openconfig_interfaces_interfaces_interface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_interfaces_interfaces\nTop level container\
        \ for interfaces, including configuration\nand state data."
      operationId: "put_openconfig_interfaces_interfaces"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_interfaces_interfaces"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_interfaces_interfaces\nTop level\
        \ container for interfaces, including configuration\nand state data."
      operationId: "delete_openconfig_interfaces_interfaces"
      produces:
      - "application/yang-data+json"
      parameters: []
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_interfaces_interfaces\nTop level\
        \ container for interfaces, including configuration\nand state data."
      operationId: "patch_openconfig_interfaces_interfaces"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_interfaces_interfaces"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface\n\
        The list of named interfaces on the device."
      operationId: "get_openconfig_interfaces_interfaces_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_interfaces_interfaces_interface_config\n\
        Configurable items at the global, physical interface\nlevel"
      operationId: "post_openconfig_interfaces_interfaces_interface_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_interfaces_interfaces_interface_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_interfaces_interfaces_interface\n\
        The list of named interfaces on the device."
      operationId: "put_openconfig_interfaces_interfaces_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_interfaces_interfaces_interface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_interfaces_interfaces_interface\n\
        The list of named interfaces on the device."
      operationId: "delete_openconfig_interfaces_interfaces_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_interfaces_interfaces_interface\n\
        The list of named interfaces on the device."
      operationId: "patch_openconfig_interfaces_interfaces_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_interfaces_interfaces_interface"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_list_openconfig_interfaces_interfaces_interface\n\
        The list of named interfaces on the device."
      operationId: "get_list_openconfig_interfaces_interfaces_interface"
      produces:
      - "application/yang-data+json"
      parameters: []
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_list_openconfig_interfaces_interfaces_interface\n\
        The list of named interfaces on the device."
      operationId: "put_list_openconfig_interfaces_interfaces_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_list_openconfig_interfaces_interfaces_interface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_list_openconfig_interfaces_interfaces_interface\n\
        The list of named interfaces on the device."
      operationId: "delete_list_openconfig_interfaces_interfaces_interface"
      produces:
      - "application/yang-data+json"
      parameters: []
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_list_openconfig_interfaces_interfaces_interface\n\
        The list of named interfaces on the device."
      operationId: "patch_list_openconfig_interfaces_interfaces_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_list_openconfig_interfaces_interfaces_interface"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/config:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_config\n\
        Configurable items at the global, physical interface\nlevel"
      operationId: "get_openconfig_interfaces_interfaces_interface_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_interfaces_interfaces_interface_config_type\n\
        The type of the interface.\n\nWhen an interface entry is created, a server\
        \ MAY\ninitialize the type leaf with a valid value, e.g., if it\nis possible\
        \ to derive the type from the name of the\ninterface.\n\nIf a client tries\
        \ to set the type of an interface to a\nvalue that can never be used by the\
        \ system, e.g., if the\ntype is not supported or if the type does not match\
        \ the\nname of the interface, the server MUST reject the request.\nA NETCONF\
        \ server MUST reply with an rpc-error with the\nerror-tag 'invalid-value'\
        \ in this case."
      operationId: "post_openconfig_interfaces_interfaces_interface_config_type"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_interfaces_interfaces_interface_config_type"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_interfaces_interfaces_interface_config\n\
        Configurable items at the global, physical interface\nlevel"
      operationId: "put_openconfig_interfaces_interfaces_interface_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_interfaces_interfaces_interface_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_interfaces_interfaces_interface_config\n\
        Configurable items at the global, physical interface\nlevel"
      operationId: "patch_openconfig_interfaces_interfaces_interface_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_interfaces_interfaces_interface_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/config/type:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_config_type\n\
        The type of the interface.\n\nWhen an interface entry is created, a server\
        \ MAY\ninitialize the type leaf with a valid value, e.g., if it\nis possible\
        \ to derive the type from the name of the\ninterface.\n\nIf a client tries\
        \ to set the type of an interface to a\nvalue that can never be used by the\
        \ system, e.g., if the\ntype is not supported or if the type does not match\
        \ the\nname of the interface, the server MUST reject the request.\nA NETCONF\
        \ server MUST reply with an rpc-error with the\nerror-tag 'invalid-value'\
        \ in this case."
      operationId: "get_openconfig_interfaces_interfaces_interface_config_type"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_config_type"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_interfaces_interfaces_interface_config_type\n\
        The type of the interface.\n\nWhen an interface entry is created, a server\
        \ MAY\ninitialize the type leaf with a valid value, e.g., if it\nis possible\
        \ to derive the type from the name of the\ninterface.\n\nIf a client tries\
        \ to set the type of an interface to a\nvalue that can never be used by the\
        \ system, e.g., if the\ntype is not supported or if the type does not match\
        \ the\nname of the interface, the server MUST reject the request.\nA NETCONF\
        \ server MUST reply with an rpc-error with the\nerror-tag 'invalid-value'\
        \ in this case."
      operationId: "put_openconfig_interfaces_interfaces_interface_config_type"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_interfaces_interfaces_interface_config_type"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_interfaces_interfaces_interface_config_type\n\
        The type of the interface.\n\nWhen an interface entry is created, a server\
        \ MAY\ninitialize the type leaf with a valid value, e.g., if it\nis possible\
        \ to derive the type from the name of the\ninterface.\n\nIf a client tries\
        \ to set the type of an interface to a\nvalue that can never be used by the\
        \ system, e.g., if the\ntype is not supported or if the type does not match\
        \ the\nname of the interface, the server MUST reject the request.\nA NETCONF\
        \ server MUST reply with an rpc-error with the\nerror-tag 'invalid-value'\
        \ in this case."
      operationId: "delete_openconfig_interfaces_interfaces_interface_config_type"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_interfaces_interfaces_interface_config_type\n\
        The type of the interface.\n\nWhen an interface entry is created, a server\
        \ MAY\ninitialize the type leaf with a valid value, e.g., if it\nis possible\
        \ to derive the type from the name of the\ninterface.\n\nIf a client tries\
        \ to set the type of an interface to a\nvalue that can never be used by the\
        \ system, e.g., if the\ntype is not supported or if the type does not match\
        \ the\nname of the interface, the server MUST reject the request.\nA NETCONF\
        \ server MUST reply with an rpc-error with the\nerror-tag 'invalid-value'\
        \ in this case."
      operationId: "patch_openconfig_interfaces_interfaces_interface_config_type"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_interfaces_interfaces_interface_config_type"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/config/mtu:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_config_mtu\n\
        Set the max transmission unit size in octets\nfor the physical interface.\
        \  If this is not set, the mtu is\nset to the operational default -- e.g.,\
        \ 1514 bytes on an\nEthernet interface."
      operationId: "get_openconfig_interfaces_interfaces_interface_config_mtu"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_config_mtu"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_interfaces_interfaces_interface_config_mtu\n\
        Set the max transmission unit size in octets\nfor the physical interface.\
        \  If this is not set, the mtu is\nset to the operational default -- e.g.,\
        \ 1514 bytes on an\nEthernet interface."
      operationId: "put_openconfig_interfaces_interfaces_interface_config_mtu"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_interfaces_interfaces_interface_config_mtu"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_interfaces_interfaces_interface_config_mtu\n\
        Set the max transmission unit size in octets\nfor the physical interface.\
        \  If this is not set, the mtu is\nset to the operational default -- e.g.,\
        \ 1514 bytes on an\nEthernet interface."
      operationId: "delete_openconfig_interfaces_interfaces_interface_config_mtu"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_interfaces_interfaces_interface_config_mtu\n\
        Set the max transmission unit size in octets\nfor the physical interface.\
        \  If this is not set, the mtu is\nset to the operational default -- e.g.,\
        \ 1514 bytes on an\nEthernet interface."
      operationId: "patch_openconfig_interfaces_interfaces_interface_config_mtu"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_interfaces_interfaces_interface_config_mtu"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/config/loopback-mode:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_config_loopback_mode\n\
        When set to true, the interface is logically looped back,\nsuch that packets\
        \ that are forwarded via the interface\nare received on the same interface."
      operationId: "get_openconfig_interfaces_interfaces_interface_config_loopback_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_config_loopback_mode"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_interfaces_interfaces_interface_config_loopback_mode\n\
        When set to true, the interface is logically looped back,\nsuch that packets\
        \ that are forwarded via the interface\nare received on the same interface."
      operationId: "put_openconfig_interfaces_interfaces_interface_config_loopback_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_interfaces_interfaces_interface_config_loopback_mode"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_interfaces_interfaces_interface_config_loopback_mode\n\
        When set to true, the interface is logically looped back,\nsuch that packets\
        \ that are forwarded via the interface\nare received on the same interface."
      operationId: "delete_openconfig_interfaces_interfaces_interface_config_loopback_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_interfaces_interfaces_interface_config_loopback_mode\n\
        When set to true, the interface is logically looped back,\nsuch that packets\
        \ that are forwarded via the interface\nare received on the same interface."
      operationId: "patch_openconfig_interfaces_interfaces_interface_config_loopback_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_interfaces_interfaces_interface_config_loopback_mode"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/config/description:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_config_description\n\
        A textual description of the interface.\n\nA server implementation MAY map\
        \ this leaf to the ifAlias\nMIB object.  Such an implementation needs to use\
        \ some\nmechanism to handle the differences in size and characters\nallowed\
        \ between this leaf and ifAlias.  The definition of\nsuch a mechanism is outside\
        \ the scope of this document.\n\nSince ifAlias is defined to be stored in\
        \ non-volatile\nstorage, the MIB implementation MUST map ifAlias to the\n\
        value of 'description' in the persistently stored\ndatastore.\n\nSpecifically,\
        \ if the device supports ':startup', when\nifAlias is read the device MUST\
        \ return the value of\n'description' in the 'startup' datastore, and when\
        \ it is\nwritten, it MUST be written to the 'running' and 'startup'\ndatastores.\
        \  Note that it is up to the implementation to\n\ndecide whether to modify\
        \ this single leaf in 'startup' or\nperform an implicit copy-config from 'running'\
        \ to\n'startup'.\n\nIf the device does not support ':startup', ifAlias MUST\n\
        be mapped to the 'description' leaf in the 'running'\ndatastore."
      operationId: "get_openconfig_interfaces_interfaces_interface_config_description"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_config_description"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_interfaces_interfaces_interface_config_description\n\
        A textual description of the interface.\n\nA server implementation MAY map\
        \ this leaf to the ifAlias\nMIB object.  Such an implementation needs to use\
        \ some\nmechanism to handle the differences in size and characters\nallowed\
        \ between this leaf and ifAlias.  The definition of\nsuch a mechanism is outside\
        \ the scope of this document.\n\nSince ifAlias is defined to be stored in\
        \ non-volatile\nstorage, the MIB implementation MUST map ifAlias to the\n\
        value of 'description' in the persistently stored\ndatastore.\n\nSpecifically,\
        \ if the device supports ':startup', when\nifAlias is read the device MUST\
        \ return the value of\n'description' in the 'startup' datastore, and when\
        \ it is\nwritten, it MUST be written to the 'running' and 'startup'\ndatastores.\
        \  Note that it is up to the implementation to\n\ndecide whether to modify\
        \ this single leaf in 'startup' or\nperform an implicit copy-config from 'running'\
        \ to\n'startup'.\n\nIf the device does not support ':startup', ifAlias MUST\n\
        be mapped to the 'description' leaf in the 'running'\ndatastore."
      operationId: "put_openconfig_interfaces_interfaces_interface_config_description"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_interfaces_interfaces_interface_config_description"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_interfaces_interfaces_interface_config_description\n\
        A textual description of the interface.\n\nA server implementation MAY map\
        \ this leaf to the ifAlias\nMIB object.  Such an implementation needs to use\
        \ some\nmechanism to handle the differences in size and characters\nallowed\
        \ between this leaf and ifAlias.  The definition of\nsuch a mechanism is outside\
        \ the scope of this document.\n\nSince ifAlias is defined to be stored in\
        \ non-volatile\nstorage, the MIB implementation MUST map ifAlias to the\n\
        value of 'description' in the persistently stored\ndatastore.\n\nSpecifically,\
        \ if the device supports ':startup', when\nifAlias is read the device MUST\
        \ return the value of\n'description' in the 'startup' datastore, and when\
        \ it is\nwritten, it MUST be written to the 'running' and 'startup'\ndatastores.\
        \  Note that it is up to the implementation to\n\ndecide whether to modify\
        \ this single leaf in 'startup' or\nperform an implicit copy-config from 'running'\
        \ to\n'startup'.\n\nIf the device does not support ':startup', ifAlias MUST\n\
        be mapped to the 'description' leaf in the 'running'\ndatastore."
      operationId: "delete_openconfig_interfaces_interfaces_interface_config_description"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_interfaces_interfaces_interface_config_description\n\
        A textual description of the interface.\n\nA server implementation MAY map\
        \ this leaf to the ifAlias\nMIB object.  Such an implementation needs to use\
        \ some\nmechanism to handle the differences in size and characters\nallowed\
        \ between this leaf and ifAlias.  The definition of\nsuch a mechanism is outside\
        \ the scope of this document.\n\nSince ifAlias is defined to be stored in\
        \ non-volatile\nstorage, the MIB implementation MUST map ifAlias to the\n\
        value of 'description' in the persistently stored\ndatastore.\n\nSpecifically,\
        \ if the device supports ':startup', when\nifAlias is read the device MUST\
        \ return the value of\n'description' in the 'startup' datastore, and when\
        \ it is\nwritten, it MUST be written to the 'running' and 'startup'\ndatastores.\
        \  Note that it is up to the implementation to\n\ndecide whether to modify\
        \ this single leaf in 'startup' or\nperform an implicit copy-config from 'running'\
        \ to\n'startup'.\n\nIf the device does not support ':startup', ifAlias MUST\n\
        be mapped to the 'description' leaf in the 'running'\ndatastore."
      operationId: "patch_openconfig_interfaces_interfaces_interface_config_description"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_interfaces_interfaces_interface_config_description"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/config/enabled:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_config_enabled\n\
        This leaf contains the configured, desired state of the\ninterface.\n\nSystems\
        \ that implement the IF-MIB use the value of this\nleaf in the 'running' datastore\
        \ to set\nIF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry\nhas been\
        \ initialized, as described in RFC 2863.\n\nChanges in this leaf in the 'running'\
        \ datastore are\nreflected in ifAdminStatus, but if ifAdminStatus is\nchanged\
        \ over SNMP, this leaf is not affected."
      operationId: "get_openconfig_interfaces_interfaces_interface_config_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_config_enabled"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_interfaces_interfaces_interface_config_enabled\n\
        This leaf contains the configured, desired state of the\ninterface.\n\nSystems\
        \ that implement the IF-MIB use the value of this\nleaf in the 'running' datastore\
        \ to set\nIF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry\nhas been\
        \ initialized, as described in RFC 2863.\n\nChanges in this leaf in the 'running'\
        \ datastore are\nreflected in ifAdminStatus, but if ifAdminStatus is\nchanged\
        \ over SNMP, this leaf is not affected."
      operationId: "put_openconfig_interfaces_interfaces_interface_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_interfaces_interfaces_interface_config_enabled"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_interfaces_interfaces_interface_config_enabled\n\
        This leaf contains the configured, desired state of the\ninterface.\n\nSystems\
        \ that implement the IF-MIB use the value of this\nleaf in the 'running' datastore\
        \ to set\nIF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry\nhas been\
        \ initialized, as described in RFC 2863.\n\nChanges in this leaf in the 'running'\
        \ datastore are\nreflected in ifAdminStatus, but if ifAdminStatus is\nchanged\
        \ over SNMP, this leaf is not affected."
      operationId: "delete_openconfig_interfaces_interfaces_interface_config_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_interfaces_interfaces_interface_config_enabled\n\
        This leaf contains the configured, desired state of the\ninterface.\n\nSystems\
        \ that implement the IF-MIB use the value of this\nleaf in the 'running' datastore\
        \ to set\nIF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry\nhas been\
        \ initialized, as described in RFC 2863.\n\nChanges in this leaf in the 'running'\
        \ datastore are\nreflected in ifAdminStatus, but if ifAdminStatus is\nchanged\
        \ over SNMP, this leaf is not affected."
      operationId: "patch_openconfig_interfaces_interfaces_interface_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_interfaces_interfaces_interface_config_enabled"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/config/openconfig-vlan:tpid:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_config_tpid\n\
        Optionally set the tag protocol identifier field (TPID) that\nis accepted\
        \ on the VLAN"
      operationId: "get_openconfig_vlan_interfaces_interface_config_tpid"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_config_tpid"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_vlan_interfaces_interface_config_tpid\n\
        Optionally set the tag protocol identifier field (TPID) that\nis accepted\
        \ on the VLAN"
      operationId: "put_openconfig_vlan_interfaces_interface_config_tpid"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_vlan_interfaces_interface_config_tpid"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_vlan_interfaces_interface_config_tpid\n\
        Optionally set the tag protocol identifier field (TPID) that\nis accepted\
        \ on the VLAN"
      operationId: "delete_openconfig_vlan_interfaces_interface_config_tpid"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_vlan_interfaces_interface_config_tpid\n\
        Optionally set the tag protocol identifier field (TPID) that\nis accepted\
        \ on the VLAN"
      operationId: "patch_openconfig_vlan_interfaces_interface_config_tpid"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_vlan_interfaces_interface_config_tpid"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state\n\
        Operational state data at the global interface level"
      operationId: "get_openconfig_interfaces_interfaces_interface_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/name:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_name\n\
        The name of the interface.\n\nA device MAY restrict the allowed values for\
        \ this leaf,\npossibly depending on the type of the interface.\nFor system-controlled\
        \ interfaces, this leaf is the\ndevice-specific name of the interface.  The\
        \ 'config false'\nlist interfaces/interface[name]/state contains the currently\n\
        existing interfaces on the device.\n\nIf a client tries to create configuration\
        \ for a\nsystem-controlled interface that is not present in the\ncorresponding\
        \ state list, the server MAY reject\nthe request if the implementation does\
        \ not support\npre-provisioning of interfaces or if the name refers to\nan\
        \ interface that can never exist in the system.  A\nNETCONF server MUST reply\
        \ with an rpc-error with the\nerror-tag 'invalid-value' in this case.\n\n\
        The IETF model in RFC 7223 provides YANG features for the\nfollowing (i.e.,\
        \ pre-provisioning and arbitrary-names),\nhowever they are omitted here:\n\
        \n If the device supports pre-provisioning of interface\n configuration, the\
        \ 'pre-provisioning' feature is\n advertised.\n\n If the device allows arbitrarily\
        \ named user-controlled\n interfaces, the 'arbitrary-names' feature is advertised.\n\
        \nWhen a configured user-controlled interface is created by\nthe system, it\
        \ is instantiated with the same name in the\n/interfaces/interface[name]/state\
        \ list."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_name"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_name"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/type:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_type\n\
        The type of the interface.\n\nWhen an interface entry is created, a server\
        \ MAY\ninitialize the type leaf with a valid value, e.g., if it\nis possible\
        \ to derive the type from the name of the\ninterface.\n\nIf a client tries\
        \ to set the type of an interface to a\nvalue that can never be used by the\
        \ system, e.g., if the\ntype is not supported or if the type does not match\
        \ the\nname of the interface, the server MUST reject the request.\nA NETCONF\
        \ server MUST reply with an rpc-error with the\nerror-tag 'invalid-value'\
        \ in this case."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_type"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_type"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/mtu:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_mtu\n\
        Set the max transmission unit size in octets\nfor the physical interface.\
        \  If this is not set, the mtu is\nset to the operational default -- e.g.,\
        \ 1514 bytes on an\nEthernet interface."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_mtu"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_mtu"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/loopback-mode:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_loopback_mode\n\
        When set to true, the interface is logically looped back,\nsuch that packets\
        \ that are forwarded via the interface\nare received on the same interface."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_loopback_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_loopback_mode"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/description:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_description\n\
        A textual description of the interface.\n\nA server implementation MAY map\
        \ this leaf to the ifAlias\nMIB object.  Such an implementation needs to use\
        \ some\nmechanism to handle the differences in size and characters\nallowed\
        \ between this leaf and ifAlias.  The definition of\nsuch a mechanism is outside\
        \ the scope of this document.\n\nSince ifAlias is defined to be stored in\
        \ non-volatile\nstorage, the MIB implementation MUST map ifAlias to the\n\
        value of 'description' in the persistently stored\ndatastore.\n\nSpecifically,\
        \ if the device supports ':startup', when\nifAlias is read the device MUST\
        \ return the value of\n'description' in the 'startup' datastore, and when\
        \ it is\nwritten, it MUST be written to the 'running' and 'startup'\ndatastores.\
        \  Note that it is up to the implementation to\n\ndecide whether to modify\
        \ this single leaf in 'startup' or\nperform an implicit copy-config from 'running'\
        \ to\n'startup'.\n\nIf the device does not support ':startup', ifAlias MUST\n\
        be mapped to the 'description' leaf in the 'running'\ndatastore."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_description"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_description"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/enabled:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_enabled\n\
        This leaf contains the configured, desired state of the\ninterface.\n\nSystems\
        \ that implement the IF-MIB use the value of this\nleaf in the 'running' datastore\
        \ to set\nIF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry\nhas been\
        \ initialized, as described in RFC 2863.\n\nChanges in this leaf in the 'running'\
        \ datastore are\nreflected in ifAdminStatus, but if ifAdminStatus is\nchanged\
        \ over SNMP, this leaf is not affected."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_enabled"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/ifindex:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_ifindex\n\
        System assigned number for each interface.  Corresponds to\nifIndex object\
        \ in SNMP Interface MIB"
      operationId: "get_openconfig_interfaces_interfaces_interface_state_ifindex"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_ifindex"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/admin-status:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_admin_status\n\
        The desired state of the interface.  In RFC 7223 this leaf\nhas the same read\
        \ semantics as ifAdminStatus.  Here, it\nreflects the administrative state\
        \ as set by enabling or\ndisabling the interface."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_admin_status"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_admin_status"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/oper-status:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_oper_status\n\
        The current operational state of the interface.\n\nThis leaf has the same\
        \ semantics as ifOperStatus."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_oper_status"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_oper_status"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/last-change:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_last_change\n\
        This timestamp indicates the absolute time of the last\nstate change of the\
        \ interface (e.g., up-to-down transition).\nThis is different than the SNMP\
        \ ifLastChange object in the\nstandard interface MIB in that it is not relative\
        \ to the\nsystem boot time (i.e,. sysUpTime).\n\nThe value is the timestamp\
        \ in nanoseconds relative to\nthe Unix Epoch (Jan 1, 1970 00:00:00 UTC)."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_last_change"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_last_change"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/logical:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_logical\n\
        When set to true, the interface is a logical interface\nwhich does not have\
        \ an associated physical port or\nchannel on the system."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_logical"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_logical"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/counters:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_counters\n\
        A collection of interface-related statistics objects."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_counters"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_counters"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/counters/in-octets:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_counters_in_octets\n\
        The total number of octets received on the interface,\nincluding framing characters.\n\
        \nDiscontinuities in the value of this counter can occur\nat re-initialization\
        \ of the management system, and at\nother times as indicated by the value\
        \ of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_counters_in_octets"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_counters_in_octets"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/counters/in-pkts:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_counters_in_pkts\n\
        The total number of packets received on the interface,\nincluding all unicast,\
        \ multicast, broadcast and bad packets\netc."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_counters_in_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_counters_in_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/counters/in-unicast-pkts:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_counters_in_unicast_pkts\n\
        The number of packets, delivered by this sub-layer to a\nhigher (sub-)layer,\
        \ that were not addressed to a\nmulticast or broadcast address at this sub-layer.\n\
        \nDiscontinuities in the value of this counter can occur\nat re-initialization\
        \ of the management system, and at\nother times as indicated by the value\
        \ of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_counters_in_unicast_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_counters_in_unicast_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/counters/in-broadcast-pkts:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_counters_in_broadcast_pkts\n\
        The number of packets, delivered by this sub-layer to a\nhigher (sub-)layer,\
        \ that were addressed to a broadcast\naddress at this sub-layer.\n\nDiscontinuities\
        \ in the value of this counter can occur\nat re-initialization of the management\
        \ system, and at\nother times as indicated by the value of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_counters_in_broadcast_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_counters_in_broadcast_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/counters/in-multicast-pkts:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_counters_in_multicast_pkts\n\
        The number of packets, delivered by this sub-layer to a\nhigher (sub-)layer,\
        \ that were addressed to a multicast\naddress at this sub-layer.  For a MAC-layer\
        \ protocol,\nthis includes both Group and Functional addresses.\n\nDiscontinuities\
        \ in the value of this counter can occur\nat re-initialization of the management\
        \ system, and at\nother times as indicated by the value of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_counters_in_multicast_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_counters_in_multicast_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/counters/in-discards:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_counters_in_discards\n\
        The number of inbound packets that were chosen to be\ndiscarded even though\
        \ no errors had been detected to\nprevent their being deliverable to a higher-layer\n\
        protocol.  One possible reason for discarding such a\npacket could be to free\
        \ up buffer space.\n\nDiscontinuities in the value of this counter can occur\n\
        at re-initialization of the management system, and at\nother times as indicated\
        \ by the value of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_counters_in_discards"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_counters_in_discards"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/counters/in-errors:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_counters_in_errors\n\
        For packet-oriented interfaces, the number of inbound\npackets that contained\
        \ errors preventing them from being\ndeliverable to a higher-layer protocol.\
        \  For character-\noriented or fixed-length interfaces, the number of\ninbound\
        \ transmission units that contained errors\npreventing them from being deliverable\
        \ to a higher-layer\nprotocol.\n\nDiscontinuities in the value of this counter\
        \ can occur\nat re-initialization of the management system, and at\nother\
        \ times as indicated by the value of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_counters_in_errors"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_counters_in_errors"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/counters/in-unknown-protos:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_counters_in_unknown_protos\n\
        For packet-oriented interfaces, the number of packets\nreceived via the interface\
        \ that were discarded because\nof an unknown or unsupported protocol.  For\n\
        character-oriented or fixed-length interfaces that\nsupport protocol multiplexing,\
        \ the number of\ntransmission units received via the interface that were\n\
        discarded because of an unknown or unsupported protocol.\nFor any interface\
        \ that does not support protocol\nmultiplexing, this counter is not present.\n\
        \nDiscontinuities in the value of this counter can occur\nat re-initialization\
        \ of the management system, and at\nother times as indicated by the value\
        \ of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_counters_in_unknown_protos"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_counters_in_unknown_protos"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/counters/in-fcs-errors:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_counters_in_fcs_errors\n\
        Number of received packets which had errors in the\nframe check sequence (FCS),\
        \ i.e., framing errors.\n\nDiscontinuities in the value of this counter can\
        \ occur\nwhen the device is re-initialization as indicated by the\nvalue of\
        \ 'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_counters_in_fcs_errors"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_counters_in_fcs_errors"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/counters/out-octets:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_counters_out_octets\n\
        The total number of octets transmitted out of the\ninterface, including framing\
        \ characters.\n\nDiscontinuities in the value of this counter can occur\n\
        at re-initialization of the management system, and at\nother times as indicated\
        \ by the value of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_counters_out_octets"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_counters_out_octets"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/counters/out-pkts:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_counters_out_pkts\n\
        The total number of packets transmitted out of the\ninterface, including all\
        \ unicast, multicast, broadcast,\nand bad packets etc."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_counters_out_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_counters_out_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/counters/out-unicast-pkts:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_counters_out_unicast_pkts\n\
        The total number of packets that higher-level protocols\nrequested be transmitted,\
        \ and that were not addressed\nto a multicast or broadcast address at this\
        \ sub-layer,\nincluding those that were discarded or not sent.\n\nDiscontinuities\
        \ in the value of this counter can occur\nat re-initialization of the management\
        \ system, and at\nother times as indicated by the value of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_counters_out_unicast_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_counters_out_unicast_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/counters/out-broadcast-pkts:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_counters_out_broadcast_pkts\n\
        The total number of packets that higher-level protocols\nrequested be transmitted,\
        \ and that were addressed to a\nbroadcast address at this sub-layer, including\
        \ those\nthat were discarded or not sent.\n\nDiscontinuities in the value\
        \ of this counter can occur\nat re-initialization of the management system,\
        \ and at\nother times as indicated by the value of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_counters_out_broadcast_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_counters_out_broadcast_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/counters/out-multicast-pkts:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_counters_out_multicast_pkts\n\
        The total number of packets that higher-level protocols\nrequested be transmitted,\
        \ and that were addressed to a\nmulticast address at this sub-layer, including\
        \ those\nthat were discarded or not sent.  For a MAC-layer\nprotocol, this\
        \ includes both Group and Functional\naddresses.\n\nDiscontinuities in the\
        \ value of this counter can occur\nat re-initialization of the management\
        \ system, and at\nother times as indicated by the value of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_counters_out_multicast_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_counters_out_multicast_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/counters/out-discards:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_counters_out_discards\n\
        The number of outbound packets that were chosen to be\ndiscarded even though\
        \ no errors had been detected to\nprevent their being transmitted.  One possible\
        \ reason\nfor discarding such a packet could be to free up buffer\nspace.\n\
        \nDiscontinuities in the value of this counter can occur\nat re-initialization\
        \ of the management system, and at\nother times as indicated by the value\
        \ of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_counters_out_discards"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_counters_out_discards"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/counters/out-errors:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_counters_out_errors\n\
        For packet-oriented interfaces, the number of outbound\npackets that could\
        \ not be transmitted because of errors.\nFor character-oriented or fixed-length\
        \ interfaces, the\nnumber of outbound transmission units that could not be\n\
        transmitted because of errors.\n\nDiscontinuities in the value of this counter\
        \ can occur\nat re-initialization of the management system, and at\nother\
        \ times as indicated by the value of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_counters_out_errors"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_counters_out_errors"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/counters/carrier-transitions:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_counters_carrier_transitions\n\
        Number of times the interface state has transitioned\nbetween up and down\
        \ since the time the device restarted\nor the last-clear time, whichever is\
        \ most recent."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_counters_carrier_transitions"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_counters_carrier_transitions"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/counters/last-clear:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_state_counters_last_clear\n\
        Timestamp of the last time the interface counters were\ncleared.\n\nThe value\
        \ is the timestamp in nanoseconds relative to\nthe Unix Epoch (Jan 1, 1970\
        \ 00:00:00 UTC)."
      operationId: "get_openconfig_interfaces_interfaces_interface_state_counters_last_clear"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_counters_last_clear"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/state/openconfig-vlan:tpid:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_state_tpid\n\
        Optionally set the tag protocol identifier field (TPID) that\nis accepted\
        \ on the VLAN"
      operationId: "get_openconfig_vlan_interfaces_interface_state_tpid"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_state_tpid"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/hold-time:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_hold_time\n\
        Top-level container for hold-time settings to enable\ndampening advertisements\
        \ of interface transitions."
      operationId: "get_openconfig_interfaces_interfaces_interface_hold_time"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_hold_time"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_interfaces_interfaces_interface_hold_time_config\n\
        Configuration data for interface hold-time settings."
      operationId: "post_openconfig_interfaces_interfaces_interface_hold_time_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_interfaces_interfaces_interface_hold_time_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_interfaces_interfaces_interface_hold_time\n\
        Top-level container for hold-time settings to enable\ndampening advertisements\
        \ of interface transitions."
      operationId: "put_openconfig_interfaces_interfaces_interface_hold_time"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_interfaces_interfaces_interface_hold_time"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_interfaces_interfaces_interface_hold_time\n\
        Top-level container for hold-time settings to enable\ndampening advertisements\
        \ of interface transitions."
      operationId: "delete_openconfig_interfaces_interfaces_interface_hold_time"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_interfaces_interfaces_interface_hold_time\n\
        Top-level container for hold-time settings to enable\ndampening advertisements\
        \ of interface transitions."
      operationId: "patch_openconfig_interfaces_interfaces_interface_hold_time"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_interfaces_interfaces_interface_hold_time"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/hold-time/config:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_hold_time_config\n\
        Configuration data for interface hold-time settings."
      operationId: "get_openconfig_interfaces_interfaces_interface_hold_time_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_hold_time_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_interfaces_interfaces_interface_hold_time_config_up\n\
        Dampens advertisement when the interface\ntransitions from down to up.  A\
        \ zero value means dampening\nis turned off, i.e., immediate notification."
      operationId: "post_openconfig_interfaces_interfaces_interface_hold_time_config_up"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_interfaces_interfaces_interface_hold_time_config_up"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_interfaces_interfaces_interface_hold_time_config\n\
        Configuration data for interface hold-time settings."
      operationId: "put_openconfig_interfaces_interfaces_interface_hold_time_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_interfaces_interfaces_interface_hold_time_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_interfaces_interfaces_interface_hold_time_config\n\
        Configuration data for interface hold-time settings."
      operationId: "delete_openconfig_interfaces_interfaces_interface_hold_time_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_interfaces_interfaces_interface_hold_time_config\n\
        Configuration data for interface hold-time settings."
      operationId: "patch_openconfig_interfaces_interfaces_interface_hold_time_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_interfaces_interfaces_interface_hold_time_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/hold-time/config/up:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_hold_time_config_up\n\
        Dampens advertisement when the interface\ntransitions from down to up.  A\
        \ zero value means dampening\nis turned off, i.e., immediate notification."
      operationId: "get_openconfig_interfaces_interfaces_interface_hold_time_config_up"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_hold_time_config_up"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_interfaces_interfaces_interface_hold_time_config_up\n\
        Dampens advertisement when the interface\ntransitions from down to up.  A\
        \ zero value means dampening\nis turned off, i.e., immediate notification."
      operationId: "put_openconfig_interfaces_interfaces_interface_hold_time_config_up"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_interfaces_interfaces_interface_hold_time_config_up"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_interfaces_interfaces_interface_hold_time_config_up\n\
        Dampens advertisement when the interface\ntransitions from down to up.  A\
        \ zero value means dampening\nis turned off, i.e., immediate notification."
      operationId: "delete_openconfig_interfaces_interfaces_interface_hold_time_config_up"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_interfaces_interfaces_interface_hold_time_config_up\n\
        Dampens advertisement when the interface\ntransitions from down to up.  A\
        \ zero value means dampening\nis turned off, i.e., immediate notification."
      operationId: "patch_openconfig_interfaces_interfaces_interface_hold_time_config_up"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_interfaces_interfaces_interface_hold_time_config_up"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/hold-time/config/down:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_hold_time_config_down\n\
        Dampens advertisement when the interface transitions from\nup to down.  A\
        \ zero value means dampening is turned off,\ni.e., immediate notification."
      operationId: "get_openconfig_interfaces_interfaces_interface_hold_time_config_down"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_hold_time_config_down"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_interfaces_interfaces_interface_hold_time_config_down\n\
        Dampens advertisement when the interface transitions from\nup to down.  A\
        \ zero value means dampening is turned off,\ni.e., immediate notification."
      operationId: "put_openconfig_interfaces_interfaces_interface_hold_time_config_down"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_interfaces_interfaces_interface_hold_time_config_down"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_interfaces_interfaces_interface_hold_time_config_down\n\
        Dampens advertisement when the interface transitions from\nup to down.  A\
        \ zero value means dampening is turned off,\ni.e., immediate notification."
      operationId: "delete_openconfig_interfaces_interfaces_interface_hold_time_config_down"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_interfaces_interfaces_interface_hold_time_config_down\n\
        Dampens advertisement when the interface transitions from\nup to down.  A\
        \ zero value means dampening is turned off,\ni.e., immediate notification."
      operationId: "patch_openconfig_interfaces_interfaces_interface_hold_time_config_down"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_interfaces_interfaces_interface_hold_time_config_down"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/hold-time/state:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_hold_time_state\n\
        Operational state data for interface hold-time."
      operationId: "get_openconfig_interfaces_interfaces_interface_hold_time_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_hold_time_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/hold-time/state/up:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_hold_time_state_up\n\
        Dampens advertisement when the interface\ntransitions from down to up.  A\
        \ zero value means dampening\nis turned off, i.e., immediate notification."
      operationId: "get_openconfig_interfaces_interfaces_interface_hold_time_state_up"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_hold_time_state_up"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/hold-time/state/down:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_hold_time_state_down\n\
        Dampens advertisement when the interface transitions from\nup to down.  A\
        \ zero value means dampening is turned off,\ni.e., immediate notification."
      operationId: "get_openconfig_interfaces_interfaces_interface_hold_time_state_down"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_hold_time_state_down"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces\n\
        Enclosing container for the list of subinterfaces associated\nwith a physical\
        \ interface"
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_list_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface\n\
        The list of subinterfaces (logical interfaces) associated\nwith a physical\
        \ interface"
      operationId: "post_list_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_list_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_interfaces_interfaces_interface_subinterfaces\n\
        Enclosing container for the list of subinterfaces associated\nwith a physical\
        \ interface"
      operationId: "put_openconfig_interfaces_interfaces_interface_subinterfaces"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_interfaces_interfaces_interface_subinterfaces"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_interfaces_interfaces_interface_subinterfaces\n\
        Enclosing container for the list of subinterfaces associated\nwith a physical\
        \ interface"
      operationId: "delete_openconfig_interfaces_interfaces_interface_subinterfaces"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_interfaces_interfaces_interface_subinterfaces\n\
        Enclosing container for the list of subinterfaces associated\nwith a physical\
        \ interface"
      operationId: "patch_openconfig_interfaces_interfaces_interface_subinterfaces"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_interfaces_interfaces_interface_subinterfaces"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface\n\
        The list of subinterfaces (logical interfaces) associated\nwith a physical\
        \ interface"
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config\n\
        Configurable items at the subinterface level"
      operationId: "post_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface\n\
        The list of subinterfaces (logical interfaces) associated\nwith a physical\
        \ interface"
      operationId: "put_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface\n\
        The list of subinterfaces (logical interfaces) associated\nwith a physical\
        \ interface"
      operationId: "delete_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface\n\
        The list of subinterfaces (logical interfaces) associated\nwith a physical\
        \ interface"
      operationId: "patch_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_list_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface\n\
        The list of subinterfaces (logical interfaces) associated\nwith a physical\
        \ interface"
      operationId: "get_list_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_list_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface\n\
        The list of subinterfaces (logical interfaces) associated\nwith a physical\
        \ interface"
      operationId: "put_list_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_list_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_list_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface\n\
        The list of subinterfaces (logical interfaces) associated\nwith a physical\
        \ interface"
      operationId: "delete_list_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_list_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface\n\
        The list of subinterfaces (logical interfaces) associated\nwith a physical\
        \ interface"
      operationId: "patch_list_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_list_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/config:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config\n\
        Configurable items at the subinterface level"
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_description\n\
        A textual description of the interface.\n\nA server implementation MAY map\
        \ this leaf to the ifAlias\nMIB object.  Such an implementation needs to use\
        \ some\nmechanism to handle the differences in size and characters\nallowed\
        \ between this leaf and ifAlias.  The definition of\nsuch a mechanism is outside\
        \ the scope of this document.\n\nSince ifAlias is defined to be stored in\
        \ non-volatile\nstorage, the MIB implementation MUST map ifAlias to the\n\
        value of 'description' in the persistently stored\ndatastore.\n\nSpecifically,\
        \ if the device supports ':startup', when\nifAlias is read the device MUST\
        \ return the value of\n'description' in the 'startup' datastore, and when\
        \ it is\nwritten, it MUST be written to the 'running' and 'startup'\ndatastores.\
        \  Note that it is up to the implementation to\n\ndecide whether to modify\
        \ this single leaf in 'startup' or\nperform an implicit copy-config from 'running'\
        \ to\n'startup'.\n\nIf the device does not support ':startup', ifAlias MUST\n\
        be mapped to the 'description' leaf in the 'running'\ndatastore."
      operationId: "post_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_description"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_description"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config\n\
        Configurable items at the subinterface level"
      operationId: "put_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config\n\
        Configurable items at the subinterface level"
      operationId: "patch_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/config/description:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_description\n\
        A textual description of the interface.\n\nA server implementation MAY map\
        \ this leaf to the ifAlias\nMIB object.  Such an implementation needs to use\
        \ some\nmechanism to handle the differences in size and characters\nallowed\
        \ between this leaf and ifAlias.  The definition of\nsuch a mechanism is outside\
        \ the scope of this document.\n\nSince ifAlias is defined to be stored in\
        \ non-volatile\nstorage, the MIB implementation MUST map ifAlias to the\n\
        value of 'description' in the persistently stored\ndatastore.\n\nSpecifically,\
        \ if the device supports ':startup', when\nifAlias is read the device MUST\
        \ return the value of\n'description' in the 'startup' datastore, and when\
        \ it is\nwritten, it MUST be written to the 'running' and 'startup'\ndatastores.\
        \  Note that it is up to the implementation to\n\ndecide whether to modify\
        \ this single leaf in 'startup' or\nperform an implicit copy-config from 'running'\
        \ to\n'startup'.\n\nIf the device does not support ':startup', ifAlias MUST\n\
        be mapped to the 'description' leaf in the 'running'\ndatastore."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_description"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_description"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_description\n\
        A textual description of the interface.\n\nA server implementation MAY map\
        \ this leaf to the ifAlias\nMIB object.  Such an implementation needs to use\
        \ some\nmechanism to handle the differences in size and characters\nallowed\
        \ between this leaf and ifAlias.  The definition of\nsuch a mechanism is outside\
        \ the scope of this document.\n\nSince ifAlias is defined to be stored in\
        \ non-volatile\nstorage, the MIB implementation MUST map ifAlias to the\n\
        value of 'description' in the persistently stored\ndatastore.\n\nSpecifically,\
        \ if the device supports ':startup', when\nifAlias is read the device MUST\
        \ return the value of\n'description' in the 'startup' datastore, and when\
        \ it is\nwritten, it MUST be written to the 'running' and 'startup'\ndatastores.\
        \  Note that it is up to the implementation to\n\ndecide whether to modify\
        \ this single leaf in 'startup' or\nperform an implicit copy-config from 'running'\
        \ to\n'startup'.\n\nIf the device does not support ':startup', ifAlias MUST\n\
        be mapped to the 'description' leaf in the 'running'\ndatastore."
      operationId: "put_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_description"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_description"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_description\n\
        A textual description of the interface.\n\nA server implementation MAY map\
        \ this leaf to the ifAlias\nMIB object.  Such an implementation needs to use\
        \ some\nmechanism to handle the differences in size and characters\nallowed\
        \ between this leaf and ifAlias.  The definition of\nsuch a mechanism is outside\
        \ the scope of this document.\n\nSince ifAlias is defined to be stored in\
        \ non-volatile\nstorage, the MIB implementation MUST map ifAlias to the\n\
        value of 'description' in the persistently stored\ndatastore.\n\nSpecifically,\
        \ if the device supports ':startup', when\nifAlias is read the device MUST\
        \ return the value of\n'description' in the 'startup' datastore, and when\
        \ it is\nwritten, it MUST be written to the 'running' and 'startup'\ndatastores.\
        \  Note that it is up to the implementation to\n\ndecide whether to modify\
        \ this single leaf in 'startup' or\nperform an implicit copy-config from 'running'\
        \ to\n'startup'.\n\nIf the device does not support ':startup', ifAlias MUST\n\
        be mapped to the 'description' leaf in the 'running'\ndatastore."
      operationId: "delete_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_description"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_description\n\
        A textual description of the interface.\n\nA server implementation MAY map\
        \ this leaf to the ifAlias\nMIB object.  Such an implementation needs to use\
        \ some\nmechanism to handle the differences in size and characters\nallowed\
        \ between this leaf and ifAlias.  The definition of\nsuch a mechanism is outside\
        \ the scope of this document.\n\nSince ifAlias is defined to be stored in\
        \ non-volatile\nstorage, the MIB implementation MUST map ifAlias to the\n\
        value of 'description' in the persistently stored\ndatastore.\n\nSpecifically,\
        \ if the device supports ':startup', when\nifAlias is read the device MUST\
        \ return the value of\n'description' in the 'startup' datastore, and when\
        \ it is\nwritten, it MUST be written to the 'running' and 'startup'\ndatastores.\
        \  Note that it is up to the implementation to\n\ndecide whether to modify\
        \ this single leaf in 'startup' or\nperform an implicit copy-config from 'running'\
        \ to\n'startup'.\n\nIf the device does not support ':startup', ifAlias MUST\n\
        be mapped to the 'description' leaf in the 'running'\ndatastore."
      operationId: "patch_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_description"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_description"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/config/enabled:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_enabled\n\
        This leaf contains the configured, desired state of the\ninterface.\n\nSystems\
        \ that implement the IF-MIB use the value of this\nleaf in the 'running' datastore\
        \ to set\nIF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry\nhas been\
        \ initialized, as described in RFC 2863.\n\nChanges in this leaf in the 'running'\
        \ datastore are\nreflected in ifAdminStatus, but if ifAdminStatus is\nchanged\
        \ over SNMP, this leaf is not affected."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_enabled"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_enabled\n\
        This leaf contains the configured, desired state of the\ninterface.\n\nSystems\
        \ that implement the IF-MIB use the value of this\nleaf in the 'running' datastore\
        \ to set\nIF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry\nhas been\
        \ initialized, as described in RFC 2863.\n\nChanges in this leaf in the 'running'\
        \ datastore are\nreflected in ifAdminStatus, but if ifAdminStatus is\nchanged\
        \ over SNMP, this leaf is not affected."
      operationId: "put_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_enabled"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_enabled\n\
        This leaf contains the configured, desired state of the\ninterface.\n\nSystems\
        \ that implement the IF-MIB use the value of this\nleaf in the 'running' datastore\
        \ to set\nIF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry\nhas been\
        \ initialized, as described in RFC 2863.\n\nChanges in this leaf in the 'running'\
        \ datastore are\nreflected in ifAdminStatus, but if ifAdminStatus is\nchanged\
        \ over SNMP, this leaf is not affected."
      operationId: "delete_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_enabled\n\
        This leaf contains the configured, desired state of the\ninterface.\n\nSystems\
        \ that implement the IF-MIB use the value of this\nleaf in the 'running' datastore\
        \ to set\nIF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry\nhas been\
        \ initialized, as described in RFC 2863.\n\nChanges in this leaf in the 'running'\
        \ datastore are\nreflected in ifAdminStatus, but if ifAdminStatus is\nchanged\
        \ over SNMP, this leaf is not affected."
      operationId: "patch_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_enabled"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state\n\
        Operational state data for logical interfaces"
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/index:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_index\n\
        The index of the subinterface, or logical interface number.\nOn systems with\
        \ no support for subinterfaces, or not using\nsubinterfaces, this value should\
        \ default to 0, i.e., the\ndefault subinterface."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_index"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_index"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/description:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_description\n\
        A textual description of the interface.\n\nA server implementation MAY map\
        \ this leaf to the ifAlias\nMIB object.  Such an implementation needs to use\
        \ some\nmechanism to handle the differences in size and characters\nallowed\
        \ between this leaf and ifAlias.  The definition of\nsuch a mechanism is outside\
        \ the scope of this document.\n\nSince ifAlias is defined to be stored in\
        \ non-volatile\nstorage, the MIB implementation MUST map ifAlias to the\n\
        value of 'description' in the persistently stored\ndatastore.\n\nSpecifically,\
        \ if the device supports ':startup', when\nifAlias is read the device MUST\
        \ return the value of\n'description' in the 'startup' datastore, and when\
        \ it is\nwritten, it MUST be written to the 'running' and 'startup'\ndatastores.\
        \  Note that it is up to the implementation to\n\ndecide whether to modify\
        \ this single leaf in 'startup' or\nperform an implicit copy-config from 'running'\
        \ to\n'startup'.\n\nIf the device does not support ':startup', ifAlias MUST\n\
        be mapped to the 'description' leaf in the 'running'\ndatastore."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_description"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_description"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/enabled:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_enabled\n\
        This leaf contains the configured, desired state of the\ninterface.\n\nSystems\
        \ that implement the IF-MIB use the value of this\nleaf in the 'running' datastore\
        \ to set\nIF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry\nhas been\
        \ initialized, as described in RFC 2863.\n\nChanges in this leaf in the 'running'\
        \ datastore are\nreflected in ifAdminStatus, but if ifAdminStatus is\nchanged\
        \ over SNMP, this leaf is not affected."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_enabled"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/name:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_name\n\
        The system-assigned name for the sub-interface.  This MAY\nbe a combination\
        \ of the base interface name and the\nsubinterface index, or some other convention\
        \ used by the\nsystem."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_name"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_name"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/ifindex:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_ifindex\n\
        System assigned number for each interface.  Corresponds to\nifIndex object\
        \ in SNMP Interface MIB"
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_ifindex"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_ifindex"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/admin-status:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_admin_status\n\
        The desired state of the interface.  In RFC 7223 this leaf\nhas the same read\
        \ semantics as ifAdminStatus.  Here, it\nreflects the administrative state\
        \ as set by enabling or\ndisabling the interface."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_admin_status"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_admin_status"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/oper-status:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_oper_status\n\
        The current operational state of the interface.\n\nThis leaf has the same\
        \ semantics as ifOperStatus."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_oper_status"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_oper_status"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/last-change:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_last_change\n\
        This timestamp indicates the absolute time of the last\nstate change of the\
        \ interface (e.g., up-to-down transition).\nThis is different than the SNMP\
        \ ifLastChange object in the\nstandard interface MIB in that it is not relative\
        \ to the\nsystem boot time (i.e,. sysUpTime).\n\nThe value is the timestamp\
        \ in nanoseconds relative to\nthe Unix Epoch (Jan 1, 1970 00:00:00 UTC)."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_last_change"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_last_change"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/logical:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_logical\n\
        When set to true, the interface is a logical interface\nwhich does not have\
        \ an associated physical port or\nchannel on the system."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_logical"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_logical"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/counters:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters\n\
        A collection of interface-related statistics objects."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/counters/in-octets:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_octets\n\
        The total number of octets received on the interface,\nincluding framing characters.\n\
        \nDiscontinuities in the value of this counter can occur\nat re-initialization\
        \ of the management system, and at\nother times as indicated by the value\
        \ of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_octets"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_octets"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/counters/in-pkts:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_pkts\n\
        The total number of packets received on the interface,\nincluding all unicast,\
        \ multicast, broadcast and bad packets\netc."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/counters/in-unicast-pkts:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_unicast_pkts\n\
        The number of packets, delivered by this sub-layer to a\nhigher (sub-)layer,\
        \ that were not addressed to a\nmulticast or broadcast address at this sub-layer.\n\
        \nDiscontinuities in the value of this counter can occur\nat re-initialization\
        \ of the management system, and at\nother times as indicated by the value\
        \ of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_unicast_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_unicast_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/counters/in-broadcast-pkts:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_broadcast_pkts\n\
        The number of packets, delivered by this sub-layer to a\nhigher (sub-)layer,\
        \ that were addressed to a broadcast\naddress at this sub-layer.\n\nDiscontinuities\
        \ in the value of this counter can occur\nat re-initialization of the management\
        \ system, and at\nother times as indicated by the value of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_broadcast_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_broadcast_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/counters/in-multicast-pkts:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_multicast_pkts\n\
        The number of packets, delivered by this sub-layer to a\nhigher (sub-)layer,\
        \ that were addressed to a multicast\naddress at this sub-layer.  For a MAC-layer\
        \ protocol,\nthis includes both Group and Functional addresses.\n\nDiscontinuities\
        \ in the value of this counter can occur\nat re-initialization of the management\
        \ system, and at\nother times as indicated by the value of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_multicast_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_multicast_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/counters/in-discards:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_discards\n\
        The number of inbound packets that were chosen to be\ndiscarded even though\
        \ no errors had been detected to\nprevent their being deliverable to a higher-layer\n\
        protocol.  One possible reason for discarding such a\npacket could be to free\
        \ up buffer space.\n\nDiscontinuities in the value of this counter can occur\n\
        at re-initialization of the management system, and at\nother times as indicated\
        \ by the value of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_discards"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_discards"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/counters/in-errors:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_errors\n\
        For packet-oriented interfaces, the number of inbound\npackets that contained\
        \ errors preventing them from being\ndeliverable to a higher-layer protocol.\
        \  For character-\noriented or fixed-length interfaces, the number of\ninbound\
        \ transmission units that contained errors\npreventing them from being deliverable\
        \ to a higher-layer\nprotocol.\n\nDiscontinuities in the value of this counter\
        \ can occur\nat re-initialization of the management system, and at\nother\
        \ times as indicated by the value of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_errors"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_errors"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/counters/in-unknown-protos:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_unknown_protos\n\
        For packet-oriented interfaces, the number of packets\nreceived via the interface\
        \ that were discarded because\nof an unknown or unsupported protocol.  For\n\
        character-oriented or fixed-length interfaces that\nsupport protocol multiplexing,\
        \ the number of\ntransmission units received via the interface that were\n\
        discarded because of an unknown or unsupported protocol.\nFor any interface\
        \ that does not support protocol\nmultiplexing, this counter is not present.\n\
        \nDiscontinuities in the value of this counter can occur\nat re-initialization\
        \ of the management system, and at\nother times as indicated by the value\
        \ of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_unknown_protos"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_unknown_protos"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/counters/in-fcs-errors:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_fcs_errors\n\
        Number of received packets which had errors in the\nframe check sequence (FCS),\
        \ i.e., framing errors.\n\nDiscontinuities in the value of this counter can\
        \ occur\nwhen the device is re-initialization as indicated by the\nvalue of\
        \ 'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_fcs_errors"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_fcs_errors"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/counters/out-octets:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_octets\n\
        The total number of octets transmitted out of the\ninterface, including framing\
        \ characters.\n\nDiscontinuities in the value of this counter can occur\n\
        at re-initialization of the management system, and at\nother times as indicated\
        \ by the value of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_octets"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_octets"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/counters/out-pkts:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_pkts\n\
        The total number of packets transmitted out of the\ninterface, including all\
        \ unicast, multicast, broadcast,\nand bad packets etc."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/counters/out-unicast-pkts:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_unicast_pkts\n\
        The total number of packets that higher-level protocols\nrequested be transmitted,\
        \ and that were not addressed\nto a multicast or broadcast address at this\
        \ sub-layer,\nincluding those that were discarded or not sent.\n\nDiscontinuities\
        \ in the value of this counter can occur\nat re-initialization of the management\
        \ system, and at\nother times as indicated by the value of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_unicast_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_unicast_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/counters/out-broadcast-pkts:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_broadcast_pkts\n\
        The total number of packets that higher-level protocols\nrequested be transmitted,\
        \ and that were addressed to a\nbroadcast address at this sub-layer, including\
        \ those\nthat were discarded or not sent.\n\nDiscontinuities in the value\
        \ of this counter can occur\nat re-initialization of the management system,\
        \ and at\nother times as indicated by the value of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_broadcast_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_broadcast_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/counters/out-multicast-pkts:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_multicast_pkts\n\
        The total number of packets that higher-level protocols\nrequested be transmitted,\
        \ and that were addressed to a\nmulticast address at this sub-layer, including\
        \ those\nthat were discarded or not sent.  For a MAC-layer\nprotocol, this\
        \ includes both Group and Functional\naddresses.\n\nDiscontinuities in the\
        \ value of this counter can occur\nat re-initialization of the management\
        \ system, and at\nother times as indicated by the value of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_multicast_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_multicast_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/counters/out-discards:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_discards\n\
        The number of outbound packets that were chosen to be\ndiscarded even though\
        \ no errors had been detected to\nprevent their being transmitted.  One possible\
        \ reason\nfor discarding such a packet could be to free up buffer\nspace.\n\
        \nDiscontinuities in the value of this counter can occur\nat re-initialization\
        \ of the management system, and at\nother times as indicated by the value\
        \ of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_discards"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_discards"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/counters/out-errors:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_errors\n\
        For packet-oriented interfaces, the number of outbound\npackets that could\
        \ not be transmitted because of errors.\nFor character-oriented or fixed-length\
        \ interfaces, the\nnumber of outbound transmission units that could not be\n\
        transmitted because of errors.\n\nDiscontinuities in the value of this counter\
        \ can occur\nat re-initialization of the management system, and at\nother\
        \ times as indicated by the value of\n'last-clear'."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_errors"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_errors"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/counters/carrier-transitions:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_carrier_transitions\n\
        Number of times the interface state has transitioned\nbetween up and down\
        \ since the time the device restarted\nor the last-clear time, whichever is\
        \ most recent."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_carrier_transitions"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_carrier_transitions"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/state/counters/last-clear:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_last_clear\n\
        Timestamp of the last time the interface counters were\ncleared.\n\nThe value\
        \ is the timestamp in nanoseconds relative to\nthe Unix Epoch (Jan 1, 1970\
        \ 00:00:00 UTC)."
      operationId: "get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_last_clear"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_last_clear"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-vlan:vlan:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan\n\
        Enclosing container for VLAN interface-specific\ndata on subinterfaces"
      operationId: "get_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config\n\
        Configuration parameters for VLANs"
      operationId: "post_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan\n\
        Enclosing container for VLAN interface-specific\ndata on subinterfaces"
      operationId: "put_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan\n\
        Enclosing container for VLAN interface-specific\ndata on subinterfaces"
      operationId: "delete_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan\n\
        Enclosing container for VLAN interface-specific\ndata on subinterfaces"
      operationId: "patch_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-vlan:vlan/config:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config\n\
        Configuration parameters for VLANs"
      operationId: "get_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config_vlan_id\n\
        VLAN id for the subinterface -- specified inline for the\ncase of a local\
        \ VLAN.  The id is scoped to the\nsubinterface, and could be repeated on different\n\
        subinterfaces."
      operationId: "post_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config_vlan_id"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config_vlan_id"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config\n\
        Configuration parameters for VLANs"
      operationId: "put_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config\n\
        Configuration parameters for VLANs"
      operationId: "delete_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config\n\
        Configuration parameters for VLANs"
      operationId: "patch_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-vlan:vlan/config/vlan-id:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config_vlan_id\n\
        VLAN id for the subinterface -- specified inline for the\ncase of a local\
        \ VLAN.  The id is scoped to the\nsubinterface, and could be repeated on different\n\
        subinterfaces."
      operationId: "get_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config_vlan_id"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config_vlan_id"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config_vlan_id\n\
        VLAN id for the subinterface -- specified inline for the\ncase of a local\
        \ VLAN.  The id is scoped to the\nsubinterface, and could be repeated on different\n\
        subinterfaces."
      operationId: "put_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config_vlan_id"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config_vlan_id"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config_vlan_id\n\
        VLAN id for the subinterface -- specified inline for the\ncase of a local\
        \ VLAN.  The id is scoped to the\nsubinterface, and could be repeated on different\n\
        subinterfaces."
      operationId: "delete_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config_vlan_id"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config_vlan_id\n\
        VLAN id for the subinterface -- specified inline for the\ncase of a local\
        \ VLAN.  The id is scoped to the\nsubinterface, and could be repeated on different\n\
        subinterfaces."
      operationId: "patch_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config_vlan_id"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config_vlan_id"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-vlan:vlan/state:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_state\n\
        State variables for VLANs"
      operationId: "get_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-vlan:vlan/state/vlan-id:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_state_vlan_id\n\
        VLAN id for the subinterface -- specified inline for the\ncase of a local\
        \ VLAN.  The id is scoped to the\nsubinterface, and could be repeated on different\n\
        subinterfaces."
      operationId: "get_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_state_vlan_id"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_state_vlan_id"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4\n\
        Parameters for the IPv4 address family."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses\n\
        Enclosing container for address list"
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4\n\
        Parameters for the IPv4 address family."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4\n\
        Parameters for the IPv4 address family."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4\n\
        Parameters for the IPv4 address family."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses\n\
        Enclosing container for address list"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address\n\
        The list of configured IPv4 addresses on the interface."
      operationId: "post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses\n\
        Enclosing container for address list"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses\n\
        Enclosing container for address list"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses\n\
        Enclosing container for address list"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address\n\
        The list of configured IPv4 addresses on the interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config\n\
        Configuration data for each configured IPv4\naddress on the interface"
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address\n\
        The list of configured IPv4 addresses on the interface."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address\n\
        The list of configured IPv4 addresses on the interface."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address\n\
        The list of configured IPv4 addresses on the interface."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address\n\
        The list of configured IPv4 addresses on the interface."
      operationId: "get_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address\n\
        The list of configured IPv4 addresses on the interface."
      operationId: "put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address\n\
        The list of configured IPv4 addresses on the interface."
      operationId: "delete_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address\n\
        The list of configured IPv4 addresses on the interface."
      operationId: "patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/config
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config\n\
        Configuration data for each configured IPv4\naddress on the interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config_prefix_length\n\
        The length of the subnet prefix."
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config_prefix_length"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config_prefix_length"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config\n\
        Configuration data for each configured IPv4\naddress on the interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config\n\
        Configuration data for each configured IPv4\naddress on the interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/config/prefix-length
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config_prefix_length\n\
        The length of the subnet prefix."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config_prefix_length"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config_prefix_length"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config_prefix_length\n\
        The length of the subnet prefix."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config_prefix_length"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config_prefix_length"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config_prefix_length\n\
        The length of the subnet prefix."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config_prefix_length"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config_prefix_length\n\
        The length of the subnet prefix."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config_prefix_length"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config_prefix_length"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_state\n\
        Operational state data for each IPv4 address\nconfigured on the interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/state/ip
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_state_ip\n\
        The IPv4 address on the interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_state_ip"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_state_ip"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/state/prefix-length
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_state_prefix_length\n\
        The length of the subnet prefix."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_state_prefix_length"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_state_prefix_length"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/state/origin
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_state_origin\n\
        The origin of this address, e.g., statically configured,\nassigned by DHCP,\
        \ etc.."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_state_origin"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_state_origin"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp\n\
        Enclosing container for VRRP groups handled by this\nIP interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp\n\
        Enclosing container for VRRP groups handled by this\nIP interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp\n\
        Enclosing container for VRRP groups handled by this\nIP interface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp\n\
        Enclosing container for VRRP groups handled by this\nIP interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config\n\
        Configuration data for the VRRP group"
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "get_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "delete_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config\n\
        Configuration data for the VRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config\n\
        Configuration data for the VRRP group"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config\n\
        Configuration data for the VRRP group"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/virtual-address
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/virtual-address={virtual-address}
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_llist_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "get_llist_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - name: "virtual-address"
        in: "path"
        description: "Configure one or more virtual addresses for the\nVRRP group"
        required: true
        type: "string"
        x-exportParamName: "VirtualAddress"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: del_llist_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "del_llist_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - name: "virtual-address"
        in: "path"
        description: "Configure one or more virtual addresses for the\nVRRP group"
        required: true
        type: "string"
        x-exportParamName: "VirtualAddress"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/priority
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_priority\n\
        Specifies the sending VRRP interface's priority\nfor the virtual router. \
        \ Higher values equal higher\npriority"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_priority"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_priority"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_priority\n\
        Specifies the sending VRRP interface's priority\nfor the virtual router. \
        \ Higher values equal higher\npriority"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_priority"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_priority"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_priority\n\
        Specifies the sending VRRP interface's priority\nfor the virtual router. \
        \ Higher values equal higher\npriority"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_priority"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_priority\n\
        Specifies the sending VRRP interface's priority\nfor the virtual router. \
        \ Higher values equal higher\npriority"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_priority"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_priority"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/preempt
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt\n\
        When set to true, enables preemption by a higher\npriority backup router of\
        \ a lower priority master router"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt\n\
        When set to true, enables preemption by a higher\npriority backup router of\
        \ a lower priority master router"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt\n\
        When set to true, enables preemption by a higher\npriority backup router of\
        \ a lower priority master router"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt\n\
        When set to true, enables preemption by a higher\npriority backup router of\
        \ a lower priority master router"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/preempt-delay
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay\n\
        Set the delay the higher priority router waits\nbefore preempting"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay\n\
        Set the delay the higher priority router waits\nbefore preempting"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay\n\
        Set the delay the higher priority router waits\nbefore preempting"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay\n\
        Set the delay the higher priority router waits\nbefore preempting"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/accept-mode
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode\n\
        Configure whether packets destined for\nvirtual addresses are accepted even\
        \ when the virtual\naddress is not owned by the router interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode\n\
        Configure whether packets destined for\nvirtual addresses are accepted even\
        \ when the virtual\naddress is not owned by the router interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode\n\
        Configure whether packets destined for\nvirtual addresses are accepted even\
        \ when the virtual\naddress is not owned by the router interface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode\n\
        Configure whether packets destined for\nvirtual addresses are accepted even\
        \ when the virtual\naddress is not owned by the router interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/advertisement-interval
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval\n\
        Sets the interval between successive VRRP\nadvertisements -- RFC 5798 defines\
        \ this as a 12-bit\nvalue expressed as 0.1 seconds, with default 100, i.e.,\n\
        1 second.  Several implementation express this in units of\nseconds"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval\n\
        Sets the interval between successive VRRP\nadvertisements -- RFC 5798 defines\
        \ this as a 12-bit\nvalue expressed as 0.1 seconds, with default 100, i.e.,\n\
        1 second.  Several implementation express this in units of\nseconds"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval\n\
        Sets the interval between successive VRRP\nadvertisements -- RFC 5798 defines\
        \ this as a 12-bit\nvalue expressed as 0.1 seconds, with default 100, i.e.,\n\
        1 second.  Several implementation express this in units of\nseconds"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval\n\
        Sets the interval between successive VRRP\nadvertisements -- RFC 5798 defines\
        \ this as a 12-bit\nvalue expressed as 0.1 seconds, with default 100, i.e.,\n\
        1 second.  Several implementation express this in units of\nseconds"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state\n\
        Operational state data for the VRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/virtual-router-id
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_virtual_router_id\n\
        Set the virtual router id for use by the VRRP group.  This\nusually also determines\
        \ the virtual MAC address that is\ngenerated for the VRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_virtual_router_id"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_virtual_router_id"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/virtual-address
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_virtual_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_virtual_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/priority
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_priority\n\
        Specifies the sending VRRP interface's priority\nfor the virtual router. \
        \ Higher values equal higher\npriority"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_priority"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_priority"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/preempt
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_preempt\n\
        When set to true, enables preemption by a higher\npriority backup router of\
        \ a lower priority master router"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_preempt"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_preempt"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/preempt-delay
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_preempt_delay\n\
        Set the delay the higher priority router waits\nbefore preempting"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_preempt_delay"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_preempt_delay"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/accept-mode
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_accept_mode\n\
        Configure whether packets destined for\nvirtual addresses are accepted even\
        \ when the virtual\naddress is not owned by the router interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_accept_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_accept_mode"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/advertisement-interval
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_advertisement_interval\n\
        Sets the interval between successive VRRP\nadvertisements -- RFC 5798 defines\
        \ this as a 12-bit\nvalue expressed as 0.1 seconds, with default 100, i.e.,\n\
        1 second.  Several implementation express this in units of\nseconds"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_advertisement_interval"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_advertisement_interval"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/current-priority
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_current_priority\n\
        Operational value of the priority for the\ninterface in the VRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_current_priority"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_current_priority"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking\n\
        Top-level container for VRRP interface tracking"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config\n\
        Configuration data for VRRP interface tracking"
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking\n\
        Top-level container for VRRP interface tracking"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking\n\
        Top-level container for VRRP interface tracking"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking\n\
        Top-level container for VRRP interface tracking"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/config
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config\n\
        Configuration data for VRRP interface tracking"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config\n\
        Configuration data for VRRP interface tracking"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config\n\
        Configuration data for VRRP interface tracking"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config\n\
        Configuration data for VRRP interface tracking"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/config/track-interface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/config/track-interface={track-interface}
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_llist_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "get_llist_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - name: "track-interface"
        in: "path"
        description: "Sets a list of one or more interfaces that should\nbe tracked\
          \ for up/down events to dynamically change the\npriority state of the VRRP\
          \ group, and potentially\nchange the mastership if the tracked interface\
          \ going\ndown lowers the priority sufficiently.  Any of the tracked\ninterfaces\
          \ going down will cause the priority to be lowered.\nSome implementations\
          \ may only support a single\ntracked interface."
        required: true
        type: "string"
        x-exportParamName: "TrackInterface"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: del_llist_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "del_llist_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - name: "track-interface"
        in: "path"
        description: "Sets a list of one or more interfaces that should\nbe tracked\
          \ for up/down events to dynamically change the\npriority state of the VRRP\
          \ group, and potentially\nchange the mastership if the tracked interface\
          \ going\ndown lowers the priority sufficiently.  Any of the tracked\ninterfaces\
          \ going down will cause the priority to be lowered.\nSome implementations\
          \ may only support a single\ntracked interface."
        required: true
        type: "string"
        x-exportParamName: "TrackInterface"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/config/priority-decrement
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement\n\
        Set the value to subtract from priority when\nthe tracked interface goes down"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement\n\
        Set the value to subtract from priority when\nthe tracked interface goes down"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement\n\
        Set the value to subtract from priority when\nthe tracked interface goes down"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement\n\
        Set the value to subtract from priority when\nthe tracked interface goes down"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state\n\
        Operational state data for VRRP interface tracking"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/state/track-interface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state_track_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state_track_interface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/state/priority-decrement
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state_priority_decrement\n\
        Set the value to subtract from priority when\nthe tracked interface goes down"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state_priority_decrement"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state_priority_decrement"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/proxy-arp:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp\n\
        Configuration and operational state parameters\nrelating to proxy ARP. This\
        \ functionality allows a\nsystem to respond to ARP requests that are not\n\
        explicitly destined to the local system."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config\n\
        Configuration parameters for proxy ARP"
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp\n\
        Configuration and operational state parameters\nrelating to proxy ARP. This\
        \ functionality allows a\nsystem to respond to ARP requests that are not\n\
        explicitly destined to the local system."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp\n\
        Configuration and operational state parameters\nrelating to proxy ARP. This\
        \ functionality allows a\nsystem to respond to ARP requests that are not\n\
        explicitly destined to the local system."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp\n\
        Configuration and operational state parameters\nrelating to proxy ARP. This\
        \ functionality allows a\nsystem to respond to ARP requests that are not\n\
        explicitly destined to the local system."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/proxy-arp/config:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config\n\
        Configuration parameters for proxy ARP"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config_mode\n\
        When set to a value other than DISABLE, the local system should\nrespond to\
        \ ARP requests that are for target addresses other than\nthose that are configured\
        \ on the local subinterface using its own\nMAC address as the target hardware\
        \ address. If the REMOTE_ONLY\nvalue is specified, replies are only sent when\
        \ the target address\nfalls outside the locally configured subnets on the\
        \ interface,\nwhereas with the ALL value, all requests, regardless of their\n\
        target address are replied to."
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config_mode"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config\n\
        Configuration parameters for proxy ARP"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config\n\
        Configuration parameters for proxy ARP"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config\n\
        Configuration parameters for proxy ARP"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/proxy-arp/config/mode
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config_mode\n\
        When set to a value other than DISABLE, the local system should\nrespond to\
        \ ARP requests that are for target addresses other than\nthose that are configured\
        \ on the local subinterface using its own\nMAC address as the target hardware\
        \ address. If the REMOTE_ONLY\nvalue is specified, replies are only sent when\
        \ the target address\nfalls outside the locally configured subnets on the\
        \ interface,\nwhereas with the ALL value, all requests, regardless of their\n\
        target address are replied to."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config_mode"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config_mode\n\
        When set to a value other than DISABLE, the local system should\nrespond to\
        \ ARP requests that are for target addresses other than\nthose that are configured\
        \ on the local subinterface using its own\nMAC address as the target hardware\
        \ address. If the REMOTE_ONLY\nvalue is specified, replies are only sent when\
        \ the target address\nfalls outside the locally configured subnets on the\
        \ interface,\nwhereas with the ALL value, all requests, regardless of their\n\
        target address are replied to."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config_mode"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config_mode\n\
        When set to a value other than DISABLE, the local system should\nrespond to\
        \ ARP requests that are for target addresses other than\nthose that are configured\
        \ on the local subinterface using its own\nMAC address as the target hardware\
        \ address. If the REMOTE_ONLY\nvalue is specified, replies are only sent when\
        \ the target address\nfalls outside the locally configured subnets on the\
        \ interface,\nwhereas with the ALL value, all requests, regardless of their\n\
        target address are replied to."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config_mode\n\
        When set to a value other than DISABLE, the local system should\nrespond to\
        \ ARP requests that are for target addresses other than\nthose that are configured\
        \ on the local subinterface using its own\nMAC address as the target hardware\
        \ address. If the REMOTE_ONLY\nvalue is specified, replies are only sent when\
        \ the target address\nfalls outside the locally configured subnets on the\
        \ interface,\nwhereas with the ALL value, all requests, regardless of their\n\
        target address are replied to."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config_mode"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/proxy-arp/state:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_state\n\
        Operational state parameters for proxy ARP"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/proxy-arp/state/mode
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_state_mode\n\
        When set to a value other than DISABLE, the local system should\nrespond to\
        \ ARP requests that are for target addresses other than\nthose that are configured\
        \ on the local subinterface using its own\nMAC address as the target hardware\
        \ address. If the REMOTE_ONLY\nvalue is specified, replies are only sent when\
        \ the target address\nfalls outside the locally configured subnets on the\
        \ interface,\nwhereas with the ALL value, all requests, regardless of their\n\
        target address are replied to."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_state_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_state_mode"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/neighbors:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors\n\
        Enclosing container for neighbor list"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor\n\
        A list of mappings from IPv4 addresses to\nlink-layer addresses.\n\nEntries\
        \ in this list are used as static entries in the\nARP Cache."
      operationId: "post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors\n\
        Enclosing container for neighbor list"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors\n\
        Enclosing container for neighbor list"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors\n\
        Enclosing container for neighbor list"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/neighbors/neighbor={ip}
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor\n\
        A list of mappings from IPv4 addresses to\nlink-layer addresses.\n\nEntries\
        \ in this list are used as static entries in the\nARP Cache."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config\n\
        Configuration data for each configured IPv4\naddress on the interface"
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor\n\
        A list of mappings from IPv4 addresses to\nlink-layer addresses.\n\nEntries\
        \ in this list are used as static entries in the\nARP Cache."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor\n\
        A list of mappings from IPv4 addresses to\nlink-layer addresses.\n\nEntries\
        \ in this list are used as static entries in the\nARP Cache."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor\n\
        A list of mappings from IPv4 addresses to\nlink-layer addresses.\n\nEntries\
        \ in this list are used as static entries in the\nARP Cache."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/neighbors/neighbor:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor\n\
        A list of mappings from IPv4 addresses to\nlink-layer addresses.\n\nEntries\
        \ in this list are used as static entries in the\nARP Cache."
      operationId: "get_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor\n\
        A list of mappings from IPv4 addresses to\nlink-layer addresses.\n\nEntries\
        \ in this list are used as static entries in the\nARP Cache."
      operationId: "put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor\n\
        A list of mappings from IPv4 addresses to\nlink-layer addresses.\n\nEntries\
        \ in this list are used as static entries in the\nARP Cache."
      operationId: "delete_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor\n\
        A list of mappings from IPv4 addresses to\nlink-layer addresses.\n\nEntries\
        \ in this list are used as static entries in the\nARP Cache."
      operationId: "patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/neighbors/neighbor={ip}/config
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config\n\
        Configuration data for each configured IPv4\naddress on the interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config_link_layer_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config_link_layer_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config\n\
        Configuration data for each configured IPv4\naddress on the interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config\n\
        Configuration data for each configured IPv4\naddress on the interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/neighbors/neighbor={ip}/config/link-layer-address
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config_link_layer_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config_link_layer_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config_link_layer_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config_link_layer_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config_link_layer_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config_link_layer_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config_link_layer_address"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/neighbors/neighbor={ip}/state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_state\n\
        Operational state data for each IPv4 address\nconfigured on the interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/neighbors/neighbor={ip}/state/ip
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_state_ip\n\
        The IPv4 address of the neighbor node."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_state_ip"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_state_ip"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/neighbors/neighbor={ip}/state/link-layer-address
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_state_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_state_link_layer_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_state_link_layer_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/neighbors/neighbor={ip}/state/origin
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_state_origin\n\
        The origin of this neighbor entry, static or dynamic."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_state_origin"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_state_origin"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/unnumbered:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered\n\
        Top-level container for setting unnumbered interfaces.\nIncludes reference\
        \ the interface that provides the\naddress information"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config\n\
        Configuration data for unnumbered interface"
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered\n\
        Top-level container for setting unnumbered interfaces.\nIncludes reference\
        \ the interface that provides the\naddress information"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered\n\
        Top-level container for setting unnumbered interfaces.\nIncludes reference\
        \ the interface that provides the\naddress information"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered\n\
        Top-level container for setting unnumbered interfaces.\nIncludes reference\
        \ the interface that provides the\naddress information"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/unnumbered/config:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config\n\
        Configuration data for unnumbered interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config_enabled"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config\n\
        Configuration data for unnumbered interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config\n\
        Configuration data for unnumbered interface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config\n\
        Configuration data for unnumbered interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/unnumbered/config/enabled
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config_enabled"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config_enabled"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config_enabled"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/unnumbered/state:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_state\n\
        Operational state data for unnumbered interfaces"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/unnumbered/state/enabled
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_state_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_state_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_state_enabled"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/unnumbered/interface-ref
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref\n\
        Reference to an interface or subinterface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config\n\
        Configured reference to interface / subinterface"
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref\n\
        Reference to an interface or subinterface"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref\n\
        Reference to an interface or subinterface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref\n\
        Reference to an interface or subinterface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/unnumbered/interface-ref/config
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config\n\
        Configured reference to interface / subinterface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_interface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config\n\
        Configured reference to interface / subinterface"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config\n\
        Configured reference to interface / subinterface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config\n\
        Configured reference to interface / subinterface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/unnumbered/interface-ref/config/interface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_interface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_interface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_interface"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/unnumbered/interface-ref/config/subinterface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_subinterface\n\
        Reference to a subinterface -- this requires the base\ninterface to be specified\
        \ using the interface leaf in\nthis container.  If only a reference to a base\
        \ interface\nis requuired, this leaf should not be set."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_subinterface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_subinterface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_subinterface\n\
        Reference to a subinterface -- this requires the base\ninterface to be specified\
        \ using the interface leaf in\nthis container.  If only a reference to a base\
        \ interface\nis requuired, this leaf should not be set."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_subinterface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_subinterface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_subinterface\n\
        Reference to a subinterface -- this requires the base\ninterface to be specified\
        \ using the interface leaf in\nthis container.  If only a reference to a base\
        \ interface\nis requuired, this leaf should not be set."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_subinterface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_subinterface\n\
        Reference to a subinterface -- this requires the base\ninterface to be specified\
        \ using the interface leaf in\nthis container.  If only a reference to a base\
        \ interface\nis requuired, this leaf should not be set."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_subinterface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_subinterface"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/unnumbered/interface-ref/state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_state\n\
        Operational state for interface-ref"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/unnumbered/interface-ref/state/interface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_state_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_state_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_state_interface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/unnumbered/interface-ref/state/subinterface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_state_subinterface\n\
        Reference to a subinterface -- this requires the base\ninterface to be specified\
        \ using the interface leaf in\nthis container.  If only a reference to a base\
        \ interface\nis requuired, this leaf should not be set."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_state_subinterface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_state_subinterface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/config:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config\n\
        Top-level IPv4 configuration data for the interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_enabled\n\
        Controls whether IPv4 is enabled or disabled on this\ninterface.  When IPv4\
        \ is enabled, this interface is\nconnected to an IPv4 stack, and the interface\
        \ can send\nand receive IPv4 packets."
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_enabled"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config\n\
        Top-level IPv4 configuration data for the interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config\n\
        Top-level IPv4 configuration data for the interface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config\n\
        Top-level IPv4 configuration data for the interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/config/enabled:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_enabled\n\
        Controls whether IPv4 is enabled or disabled on this\ninterface.  When IPv4\
        \ is enabled, this interface is\nconnected to an IPv4 stack, and the interface\
        \ can send\nand receive IPv4 packets."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_enabled"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_enabled\n\
        Controls whether IPv4 is enabled or disabled on this\ninterface.  When IPv4\
        \ is enabled, this interface is\nconnected to an IPv4 stack, and the interface\
        \ can send\nand receive IPv4 packets."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_enabled"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_enabled\n\
        Controls whether IPv4 is enabled or disabled on this\ninterface.  When IPv4\
        \ is enabled, this interface is\nconnected to an IPv4 stack, and the interface\
        \ can send\nand receive IPv4 packets."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_enabled\n\
        Controls whether IPv4 is enabled or disabled on this\ninterface.  When IPv4\
        \ is enabled, this interface is\nconnected to an IPv4 stack, and the interface\
        \ can send\nand receive IPv4 packets."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_enabled"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/config/mtu:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_mtu\n\
        The size, in octets, of the largest IPv4 packet that the\ninterface will send\
        \ and receive.\n\nThe server may restrict the allowed values for this leaf,\n\
        depending on the interface's type.\n\nIf this leaf is not configured, the\
        \ operationally used MTU\ndepends on the interface's type."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_mtu"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_mtu"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_mtu\n\
        The size, in octets, of the largest IPv4 packet that the\ninterface will send\
        \ and receive.\n\nThe server may restrict the allowed values for this leaf,\n\
        depending on the interface's type.\n\nIf this leaf is not configured, the\
        \ operationally used MTU\ndepends on the interface's type."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_mtu"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_mtu"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_mtu\n\
        The size, in octets, of the largest IPv4 packet that the\ninterface will send\
        \ and receive.\n\nThe server may restrict the allowed values for this leaf,\n\
        depending on the interface's type.\n\nIf this leaf is not configured, the\
        \ operationally used MTU\ndepends on the interface's type."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_mtu"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_mtu\n\
        The size, in octets, of the largest IPv4 packet that the\ninterface will send\
        \ and receive.\n\nThe server may restrict the allowed values for this leaf,\n\
        depending on the interface's type.\n\nIf this leaf is not configured, the\
        \ operationally used MTU\ndepends on the interface's type."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_mtu"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_mtu"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/config/dhcp-client:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_dhcp_client\n\
        Enables a DHCP client on the interface in order to request\nan address"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_dhcp_client"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_dhcp_client"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_dhcp_client\n\
        Enables a DHCP client on the interface in order to request\nan address"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_dhcp_client"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_dhcp_client"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_dhcp_client\n\
        Enables a DHCP client on the interface in order to request\nan address"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_dhcp_client"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_dhcp_client\n\
        Enables a DHCP client on the interface in order to request\nan address"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_dhcp_client"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_dhcp_client"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/state:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state\n\
        Top level IPv4 operational state data"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/state/enabled:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_enabled\n\
        Controls whether IPv4 is enabled or disabled on this\ninterface.  When IPv4\
        \ is enabled, this interface is\nconnected to an IPv4 stack, and the interface\
        \ can send\nand receive IPv4 packets."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_enabled"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/state/mtu:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_mtu\n\
        The size, in octets, of the largest IPv4 packet that the\ninterface will send\
        \ and receive.\n\nThe server may restrict the allowed values for this leaf,\n\
        depending on the interface's type.\n\nIf this leaf is not configured, the\
        \ operationally used MTU\ndepends on the interface's type."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_mtu"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_mtu"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/state/dhcp-client:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_dhcp_client\n\
        Enables a DHCP client on the interface in order to request\nan address"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_dhcp_client"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_dhcp_client"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/state/counters:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters\n\
        Packet and byte counters for IP transmission and\nreception for the address\
        \ family."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/state/counters/in-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_pkts\n\
        The total number of IP packets received for the specified\naddress family,\
        \ including those received in error"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/state/counters/in-octets
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_octets\n\
        The total number of octets received in input IP packets\nfor the specified\
        \ address family, including those received\nin error."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_octets"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_octets"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/state/counters/in-error-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_error_pkts\n\
        Number of IP packets discarded due to errors for the\nspecified address family,\
        \ including errors in the IP\nheader, no route found to the IP destination,\
        \ invalid\naddress, unknown protocol, etc."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_error_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_error_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/state/counters/in-forwarded-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_forwarded_pkts\n\
        The number of input packets for which the device was not\ntheir final IP destination\
        \ and for which the device\nattempted to find a route to forward them to that\
        \ final\ndestination."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_forwarded_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_forwarded_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/state/counters/in-forwarded-octets
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_forwarded_octets\n\
        The number of octets received in input IP packets\nfor the specified address\
        \ family for which the device was\nnot their final IP destination and for\
        \ which the\ndevice attempted to find a route to forward them to that\nfinal\
        \ destination."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_forwarded_octets"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_forwarded_octets"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/state/counters/in-discarded-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_discarded_pkts\n\
        The number of input IP packets for the\nspecified address family, for which\
        \ no problems were\nencountered to prevent their continued processing, but\n\
        were discarded (e.g., for lack of buffer space)."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_discarded_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_discarded_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/state/counters/out-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_pkts\n\
        The total number of IP packets for the\nspecified address family that the\
        \ device supplied\nto the lower layers for transmission.  This includes\n\
        packets generated locally and those forwarded by the\ndevice."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/state/counters/out-octets
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_octets\n\
        The total number of octets in IP packets for the\nspecified address family\
        \ that the device\nsupplied to the lower layers for transmission.  This\n\
        includes packets generated locally and those forwarded by\nthe device."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_octets"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_octets"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/state/counters/out-error-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_error_pkts\n\
        Number of IP packets for the specified address family\nlocally generated and\
        \ discarded due to errors, including\nno route found to the IP destination."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_error_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_error_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/state/counters/out-forwarded-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_forwarded_pkts\n\
        The number of packets for which this entity was not their\nfinal IP destination\
        \ and for which it was successful in\nfinding a path to their final destination."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_forwarded_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_forwarded_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/state/counters/out-forwarded-octets
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_forwarded_octets\n\
        The number of octets in packets for which this entity was\nnot their final\
        \ IP destination and for which it was\nsuccessful in finding a path to their\
        \ final destination."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_forwarded_octets"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_forwarded_octets"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv4/state/counters/out-discarded-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_discarded_pkts\n\
        The number of output IP packets for the\nspecified address family for which\
        \ no problem was\nencountered to prevent their transmission to their\ndestination,\
        \ but were discarded (e.g., for lack of\nbuffer space)."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_discarded_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_discarded_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6\n\
        Parameters for the IPv6 address family."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses\n\
        Enclosing container for address list"
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6\n\
        Parameters for the IPv6 address family."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6\n\
        Parameters for the IPv6 address family."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6\n\
        Parameters for the IPv6 address family."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses\n\
        Enclosing container for address list"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address\n\
        The list of configured IPv6 addresses on the interface."
      operationId: "post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses\n\
        Enclosing container for address list"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses\n\
        Enclosing container for address list"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses\n\
        Enclosing container for address list"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address\n\
        The list of configured IPv6 addresses on the interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config\n\
        Configuration data for each IPv6 address on\nthe interface"
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address\n\
        The list of configured IPv6 addresses on the interface."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address\n\
        The list of configured IPv6 addresses on the interface."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address\n\
        The list of configured IPv6 addresses on the interface."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address\n\
        The list of configured IPv6 addresses on the interface."
      operationId: "get_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address\n\
        The list of configured IPv6 addresses on the interface."
      operationId: "put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address\n\
        The list of configured IPv6 addresses on the interface."
      operationId: "delete_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address\n\
        The list of configured IPv6 addresses on the interface."
      operationId: "patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/config
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config\n\
        Configuration data for each IPv6 address on\nthe interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config_prefix_length\n\
        The length of the subnet prefix."
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config_prefix_length"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config_prefix_length"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config\n\
        Configuration data for each IPv6 address on\nthe interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config\n\
        Configuration data for each IPv6 address on\nthe interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/config/prefix-length
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config_prefix_length\n\
        The length of the subnet prefix."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config_prefix_length"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config_prefix_length"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config_prefix_length\n\
        The length of the subnet prefix."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config_prefix_length"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config_prefix_length"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config_prefix_length\n\
        The length of the subnet prefix."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config_prefix_length"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config_prefix_length\n\
        The length of the subnet prefix."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config_prefix_length"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config_prefix_length"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_state\n\
        State data for each IPv6 address on the\ninterface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/state/ip
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_state_ip\n\
        The IPv6 address on the interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_state_ip"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_state_ip"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/state/prefix-length
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_state_prefix_length\n\
        The length of the subnet prefix."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_state_prefix_length"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_state_prefix_length"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/state/origin
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_state_origin\n\
        The origin of this address, e.g., static, dhcp, etc."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_state_origin"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_state_origin"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/state/status
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_state_status\n\
        The status of an address.  Most of the states correspond\nto states from the\
        \ IPv6 Stateless Address\nAutoconfiguration protocol."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_state_status"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_state_status"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp\n\
        Enclosing container for VRRP groups handled by this\nIP interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp\n\
        Enclosing container for VRRP groups handled by this\nIP interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp\n\
        Enclosing container for VRRP groups handled by this\nIP interface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp\n\
        Enclosing container for VRRP groups handled by this\nIP interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config\n\
        Configuration data for the VRRP group"
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "get_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "delete_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config\n\
        Configuration data for the VRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config\n\
        Configuration data for the VRRP group"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config\n\
        Configuration data for the VRRP group"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/virtual-address
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/virtual-address={virtual-address}
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_llist_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "get_llist_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - name: "virtual-address"
        in: "path"
        description: "Configure one or more virtual addresses for the\nVRRP group"
        required: true
        type: "string"
        x-exportParamName: "VirtualAddress"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: del_llist_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "del_llist_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - name: "virtual-address"
        in: "path"
        description: "Configure one or more virtual addresses for the\nVRRP group"
        required: true
        type: "string"
        x-exportParamName: "VirtualAddress"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/priority
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_priority\n\
        Specifies the sending VRRP interface's priority\nfor the virtual router. \
        \ Higher values equal higher\npriority"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_priority"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_priority"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_priority\n\
        Specifies the sending VRRP interface's priority\nfor the virtual router. \
        \ Higher values equal higher\npriority"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_priority"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_priority"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_priority\n\
        Specifies the sending VRRP interface's priority\nfor the virtual router. \
        \ Higher values equal higher\npriority"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_priority"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_priority\n\
        Specifies the sending VRRP interface's priority\nfor the virtual router. \
        \ Higher values equal higher\npriority"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_priority"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_priority"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/preempt
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt\n\
        When set to true, enables preemption by a higher\npriority backup router of\
        \ a lower priority master router"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt\n\
        When set to true, enables preemption by a higher\npriority backup router of\
        \ a lower priority master router"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt\n\
        When set to true, enables preemption by a higher\npriority backup router of\
        \ a lower priority master router"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt\n\
        When set to true, enables preemption by a higher\npriority backup router of\
        \ a lower priority master router"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/preempt-delay
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay\n\
        Set the delay the higher priority router waits\nbefore preempting"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay\n\
        Set the delay the higher priority router waits\nbefore preempting"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay\n\
        Set the delay the higher priority router waits\nbefore preempting"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay\n\
        Set the delay the higher priority router waits\nbefore preempting"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/accept-mode
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode\n\
        Configure whether packets destined for\nvirtual addresses are accepted even\
        \ when the virtual\naddress is not owned by the router interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode\n\
        Configure whether packets destined for\nvirtual addresses are accepted even\
        \ when the virtual\naddress is not owned by the router interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode\n\
        Configure whether packets destined for\nvirtual addresses are accepted even\
        \ when the virtual\naddress is not owned by the router interface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode\n\
        Configure whether packets destined for\nvirtual addresses are accepted even\
        \ when the virtual\naddress is not owned by the router interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/advertisement-interval
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval\n\
        Sets the interval between successive VRRP\nadvertisements -- RFC 5798 defines\
        \ this as a 12-bit\nvalue expressed as 0.1 seconds, with default 100, i.e.,\n\
        1 second.  Several implementation express this in units of\nseconds"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval\n\
        Sets the interval between successive VRRP\nadvertisements -- RFC 5798 defines\
        \ this as a 12-bit\nvalue expressed as 0.1 seconds, with default 100, i.e.,\n\
        1 second.  Several implementation express this in units of\nseconds"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval\n\
        Sets the interval between successive VRRP\nadvertisements -- RFC 5798 defines\
        \ this as a 12-bit\nvalue expressed as 0.1 seconds, with default 100, i.e.,\n\
        1 second.  Several implementation express this in units of\nseconds"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval\n\
        Sets the interval between successive VRRP\nadvertisements -- RFC 5798 defines\
        \ this as a 12-bit\nvalue expressed as 0.1 seconds, with default 100, i.e.,\n\
        1 second.  Several implementation express this in units of\nseconds"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/virtual-link-local
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local\n\
        For VRRP on IPv6 interfaces, sets the virtual link local\naddress"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local\n\
        For VRRP on IPv6 interfaces, sets the virtual link local\naddress"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local\n\
        For VRRP on IPv6 interfaces, sets the virtual link local\naddress"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local\n\
        For VRRP on IPv6 interfaces, sets the virtual link local\naddress"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state\n\
        Operational state data for the VRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/virtual-router-id
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_router_id\n\
        Set the virtual router id for use by the VRRP group.  This\nusually also determines\
        \ the virtual MAC address that is\ngenerated for the VRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_router_id"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_router_id"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/virtual-address
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/priority
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_priority\n\
        Specifies the sending VRRP interface's priority\nfor the virtual router. \
        \ Higher values equal higher\npriority"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_priority"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_priority"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/preempt
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_preempt\n\
        When set to true, enables preemption by a higher\npriority backup router of\
        \ a lower priority master router"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_preempt"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_preempt"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/preempt-delay
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_preempt_delay\n\
        Set the delay the higher priority router waits\nbefore preempting"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_preempt_delay"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_preempt_delay"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/accept-mode
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_accept_mode\n\
        Configure whether packets destined for\nvirtual addresses are accepted even\
        \ when the virtual\naddress is not owned by the router interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_accept_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_accept_mode"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/advertisement-interval
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_advertisement_interval\n\
        Sets the interval between successive VRRP\nadvertisements -- RFC 5798 defines\
        \ this as a 12-bit\nvalue expressed as 0.1 seconds, with default 100, i.e.,\n\
        1 second.  Several implementation express this in units of\nseconds"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_advertisement_interval"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_advertisement_interval"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/current-priority
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_current_priority\n\
        Operational value of the priority for the\ninterface in the VRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_current_priority"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_current_priority"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/virtual-link-local
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_link_local\n\
        For VRRP on IPv6 interfaces, sets the virtual link local\naddress"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_link_local"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_link_local"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking\n\
        Top-level container for VRRP interface tracking"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config\n\
        Configuration data for VRRP interface tracking"
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking\n\
        Top-level container for VRRP interface tracking"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking\n\
        Top-level container for VRRP interface tracking"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking\n\
        Top-level container for VRRP interface tracking"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/config
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config\n\
        Configuration data for VRRP interface tracking"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config\n\
        Configuration data for VRRP interface tracking"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config\n\
        Configuration data for VRRP interface tracking"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config\n\
        Configuration data for VRRP interface tracking"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/config/track-interface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/config/track-interface={track-interface}
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_llist_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "get_llist_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - name: "track-interface"
        in: "path"
        description: "Sets a list of one or more interfaces that should\nbe tracked\
          \ for up/down events to dynamically change the\npriority state of the VRRP\
          \ group, and potentially\nchange the mastership if the tracked interface\
          \ going\ndown lowers the priority sufficiently.  Any of the tracked\ninterfaces\
          \ going down will cause the priority to be lowered.\nSome implementations\
          \ may only support a single\ntracked interface."
        required: true
        type: "string"
        x-exportParamName: "TrackInterface"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: del_llist_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "del_llist_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - name: "track-interface"
        in: "path"
        description: "Sets a list of one or more interfaces that should\nbe tracked\
          \ for up/down events to dynamically change the\npriority state of the VRRP\
          \ group, and potentially\nchange the mastership if the tracked interface\
          \ going\ndown lowers the priority sufficiently.  Any of the tracked\ninterfaces\
          \ going down will cause the priority to be lowered.\nSome implementations\
          \ may only support a single\ntracked interface."
        required: true
        type: "string"
        x-exportParamName: "TrackInterface"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/config/priority-decrement
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement\n\
        Set the value to subtract from priority when\nthe tracked interface goes down"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement\n\
        Set the value to subtract from priority when\nthe tracked interface goes down"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement\n\
        Set the value to subtract from priority when\nthe tracked interface goes down"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement\n\
        Set the value to subtract from priority when\nthe tracked interface goes down"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state\n\
        Operational state data for VRRP interface tracking"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/state/track-interface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state_track_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state_track_interface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/state/priority-decrement
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state_priority_decrement\n\
        Set the value to subtract from priority when\nthe tracked interface goes down"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state_priority_decrement"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state_priority_decrement"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/router-advertisement
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement\n\
        Configuration and operational state parameters relating to\nrouter advertisements."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config\n\
        Configuration parameters relating to router advertisements\nfor IPv6."
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement\n\
        Configuration and operational state parameters relating to\nrouter advertisements."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement\n\
        Configuration and operational state parameters relating to\nrouter advertisements."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement\n\
        Configuration and operational state parameters relating to\nrouter advertisements."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/router-advertisement/config
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config\n\
        Configuration parameters relating to router advertisements\nfor IPv6."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_interval\n\
        The interval between periodic router advertisement neighbor\ndiscovery messages\
        \ sent on this interface expressed in\nseconds."
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_interval"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_interval"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config\n\
        Configuration parameters relating to router advertisements\nfor IPv6."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config\n\
        Configuration parameters relating to router advertisements\nfor IPv6."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config\n\
        Configuration parameters relating to router advertisements\nfor IPv6."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/router-advertisement/config/interval
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_interval\n\
        The interval between periodic router advertisement neighbor\ndiscovery messages\
        \ sent on this interface expressed in\nseconds."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_interval"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_interval"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_interval\n\
        The interval between periodic router advertisement neighbor\ndiscovery messages\
        \ sent on this interface expressed in\nseconds."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_interval"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_interval"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_interval\n\
        The interval between periodic router advertisement neighbor\ndiscovery messages\
        \ sent on this interface expressed in\nseconds."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_interval"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_interval\n\
        The interval between periodic router advertisement neighbor\ndiscovery messages\
        \ sent on this interface expressed in\nseconds."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_interval"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_interval"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/router-advertisement/config/lifetime
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_lifetime\n\
        The lifetime advertised in the router advertisement neighbor\ndiscovery message\
        \ on this interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_lifetime"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_lifetime"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_lifetime\n\
        The lifetime advertised in the router advertisement neighbor\ndiscovery message\
        \ on this interface."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_lifetime"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_lifetime"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_lifetime\n\
        The lifetime advertised in the router advertisement neighbor\ndiscovery message\
        \ on this interface."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_lifetime"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_lifetime\n\
        The lifetime advertised in the router advertisement neighbor\ndiscovery message\
        \ on this interface."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_lifetime"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_lifetime"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/router-advertisement/config/suppress
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_suppress\n\
        When set to true, router advertisement neighbor discovery\nmessages are not\
        \ transmitted on this interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_suppress"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_suppress"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_suppress\n\
        When set to true, router advertisement neighbor discovery\nmessages are not\
        \ transmitted on this interface."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_suppress"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_suppress"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_suppress\n\
        When set to true, router advertisement neighbor discovery\nmessages are not\
        \ transmitted on this interface."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_suppress"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_suppress\n\
        When set to true, router advertisement neighbor discovery\nmessages are not\
        \ transmitted on this interface."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_suppress"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_suppress"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/router-advertisement/state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_state\n\
        Operational state parameters relating to router\nadvertisements for IPv6."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/router-advertisement/state/interval
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_state_interval\n\
        The interval between periodic router advertisement neighbor\ndiscovery messages\
        \ sent on this interface expressed in\nseconds."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_state_interval"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_state_interval"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/router-advertisement/state/lifetime
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_state_lifetime\n\
        The lifetime advertised in the router advertisement neighbor\ndiscovery message\
        \ on this interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_state_lifetime"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_state_lifetime"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/router-advertisement/state/suppress
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_state_suppress\n\
        When set to true, router advertisement neighbor discovery\nmessages are not\
        \ transmitted on this interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_state_suppress"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_state_suppress"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/neighbors:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors\n\
        Enclosing container for list of IPv6 neighbors"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor\n\
        List of IPv6 neighbors"
      operationId: "post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors\n\
        Enclosing container for list of IPv6 neighbors"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors\n\
        Enclosing container for list of IPv6 neighbors"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors\n\
        Enclosing container for list of IPv6 neighbors"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/neighbors/neighbor={ip}
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor\n\
        List of IPv6 neighbors"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config\n\
        Configuration data for each IPv6 address on\nthe interface"
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor\n\
        List of IPv6 neighbors"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor\n\
        List of IPv6 neighbors"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor\n\
        List of IPv6 neighbors"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/neighbors/neighbor:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor\n\
        List of IPv6 neighbors"
      operationId: "get_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor\n\
        List of IPv6 neighbors"
      operationId: "put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor\n\
        List of IPv6 neighbors"
      operationId: "delete_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor\n\
        List of IPv6 neighbors"
      operationId: "patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/neighbors/neighbor={ip}/config
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config\n\
        Configuration data for each IPv6 address on\nthe interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config_link_layer_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config_link_layer_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config\n\
        Configuration data for each IPv6 address on\nthe interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config\n\
        Configuration data for each IPv6 address on\nthe interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/neighbors/neighbor={ip}/config/link-layer-address
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config_link_layer_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config_link_layer_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config_link_layer_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config_link_layer_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config_link_layer_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config_link_layer_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config_link_layer_address"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/neighbors/neighbor={ip}/state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state\n\
        State data for each IPv6 address on the\ninterface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/neighbors/neighbor={ip}/state/ip
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state_ip\n\
        The IPv6 address of the neighbor node."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state_ip"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state_ip"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/neighbors/neighbor={ip}/state/link-layer-address
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state_link_layer_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state_link_layer_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/neighbors/neighbor={ip}/state/origin
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state_origin\n\
        The origin of this neighbor entry."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state_origin"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state_origin"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/neighbors/neighbor={ip}/state/is-router
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state_is_router\n\
        Indicates that the neighbor node acts as a router."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state_is_router"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state_is_router"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/neighbors/neighbor={ip}/state/neighbor-state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state_neighbor_state\n\
        The Neighbor Unreachability Detection state of this\nentry."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state_neighbor_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state_neighbor_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/unnumbered:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered\n\
        Top-level container for setting unnumbered interfaces.\nIncludes reference\
        \ the interface that provides the\naddress information"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config\n\
        Configuration data for unnumbered interface"
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered\n\
        Top-level container for setting unnumbered interfaces.\nIncludes reference\
        \ the interface that provides the\naddress information"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered\n\
        Top-level container for setting unnumbered interfaces.\nIncludes reference\
        \ the interface that provides the\naddress information"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered\n\
        Top-level container for setting unnumbered interfaces.\nIncludes reference\
        \ the interface that provides the\naddress information"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/unnumbered/config:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config\n\
        Configuration data for unnumbered interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config_enabled"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config\n\
        Configuration data for unnumbered interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config\n\
        Configuration data for unnumbered interface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config\n\
        Configuration data for unnumbered interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/unnumbered/config/enabled
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config_enabled"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config_enabled"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config_enabled"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/unnumbered/state:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_state\n\
        Operational state data for unnumbered interfaces"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/unnumbered/state/enabled
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_state_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_state_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_state_enabled"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/unnumbered/interface-ref
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref\n\
        Reference to an interface or subinterface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config\n\
        Configured reference to interface / subinterface"
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref\n\
        Reference to an interface or subinterface"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref\n\
        Reference to an interface or subinterface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref\n\
        Reference to an interface or subinterface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/unnumbered/interface-ref/config
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config\n\
        Configured reference to interface / subinterface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_interface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config\n\
        Configured reference to interface / subinterface"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config\n\
        Configured reference to interface / subinterface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config\n\
        Configured reference to interface / subinterface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/unnumbered/interface-ref/config/interface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_interface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_interface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_interface"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/unnumbered/interface-ref/config/subinterface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_subinterface\n\
        Reference to a subinterface -- this requires the base\ninterface to be specified\
        \ using the interface leaf in\nthis container.  If only a reference to a base\
        \ interface\nis requuired, this leaf should not be set."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_subinterface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_subinterface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_subinterface\n\
        Reference to a subinterface -- this requires the base\ninterface to be specified\
        \ using the interface leaf in\nthis container.  If only a reference to a base\
        \ interface\nis requuired, this leaf should not be set."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_subinterface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_subinterface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_subinterface\n\
        Reference to a subinterface -- this requires the base\ninterface to be specified\
        \ using the interface leaf in\nthis container.  If only a reference to a base\
        \ interface\nis requuired, this leaf should not be set."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_subinterface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_subinterface\n\
        Reference to a subinterface -- this requires the base\ninterface to be specified\
        \ using the interface leaf in\nthis container.  If only a reference to a base\
        \ interface\nis requuired, this leaf should not be set."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_subinterface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_subinterface"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/unnumbered/interface-ref/state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_state\n\
        Operational state for interface-ref"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/unnumbered/interface-ref/state/interface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_state_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_state_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_state_interface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/unnumbered/interface-ref/state/subinterface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_state_subinterface\n\
        Reference to a subinterface -- this requires the base\ninterface to be specified\
        \ using the interface leaf in\nthis container.  If only a reference to a base\
        \ interface\nis requuired, this leaf should not be set."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_state_subinterface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_state_subinterface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/config:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config\n\
        Top-level config data for the IPv6 interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_enabled\n\
        Controls whether IPv6 is enabled or disabled on this\ninterface.  When IPv6\
        \ is enabled, this interface is\nconnected to an IPv6 stack, and the interface\
        \ can send\nand receive IPv6 packets."
      operationId: "post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_enabled"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config\n\
        Top-level config data for the IPv6 interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config\n\
        Top-level config data for the IPv6 interface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config\n\
        Top-level config data for the IPv6 interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/config/enabled:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_enabled\n\
        Controls whether IPv6 is enabled or disabled on this\ninterface.  When IPv6\
        \ is enabled, this interface is\nconnected to an IPv6 stack, and the interface\
        \ can send\nand receive IPv6 packets."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_enabled"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_enabled\n\
        Controls whether IPv6 is enabled or disabled on this\ninterface.  When IPv6\
        \ is enabled, this interface is\nconnected to an IPv6 stack, and the interface\
        \ can send\nand receive IPv6 packets."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_enabled"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_enabled\n\
        Controls whether IPv6 is enabled or disabled on this\ninterface.  When IPv6\
        \ is enabled, this interface is\nconnected to an IPv6 stack, and the interface\
        \ can send\nand receive IPv6 packets."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_enabled\n\
        Controls whether IPv6 is enabled or disabled on this\ninterface.  When IPv6\
        \ is enabled, this interface is\nconnected to an IPv6 stack, and the interface\
        \ can send\nand receive IPv6 packets."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_enabled"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/config/mtu:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_mtu\n\
        The size, in octets, of the largest IPv6 packet that the\ninterface will send\
        \ and receive.\n\nThe server may restrict the allowed values for this leaf,\n\
        depending on the interface's type.\n\nIf this leaf is not configured, the\
        \ operationally used MTU\ndepends on the interface's type."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_mtu"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_mtu"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_mtu\n\
        The size, in octets, of the largest IPv6 packet that the\ninterface will send\
        \ and receive.\n\nThe server may restrict the allowed values for this leaf,\n\
        depending on the interface's type.\n\nIf this leaf is not configured, the\
        \ operationally used MTU\ndepends on the interface's type."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_mtu"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_mtu"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_mtu\n\
        The size, in octets, of the largest IPv6 packet that the\ninterface will send\
        \ and receive.\n\nThe server may restrict the allowed values for this leaf,\n\
        depending on the interface's type.\n\nIf this leaf is not configured, the\
        \ operationally used MTU\ndepends on the interface's type."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_mtu"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_mtu\n\
        The size, in octets, of the largest IPv6 packet that the\ninterface will send\
        \ and receive.\n\nThe server may restrict the allowed values for this leaf,\n\
        depending on the interface's type.\n\nIf this leaf is not configured, the\
        \ operationally used MTU\ndepends on the interface's type."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_mtu"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_mtu"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/config/dup-addr-detect-transmits
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dup_addr_detect_transmits\n\
        The number of consecutive Neighbor Solicitation messages\nsent while performing\
        \ Duplicate Address Detection on a\ntentative address.  A value of zero indicates\
        \ that\nDuplicate Address Detection is not performed on\ntentative addresses.\
        \  A value of one indicates a single\ntransmission with no follow-up retransmissions."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dup_addr_detect_transmits"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dup_addr_detect_transmits"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dup_addr_detect_transmits\n\
        The number of consecutive Neighbor Solicitation messages\nsent while performing\
        \ Duplicate Address Detection on a\ntentative address.  A value of zero indicates\
        \ that\nDuplicate Address Detection is not performed on\ntentative addresses.\
        \  A value of one indicates a single\ntransmission with no follow-up retransmissions."
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dup_addr_detect_transmits"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dup_addr_detect_transmits"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dup_addr_detect_transmits\n\
        The number of consecutive Neighbor Solicitation messages\nsent while performing\
        \ Duplicate Address Detection on a\ntentative address.  A value of zero indicates\
        \ that\nDuplicate Address Detection is not performed on\ntentative addresses.\
        \  A value of one indicates a single\ntransmission with no follow-up retransmissions."
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dup_addr_detect_transmits"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dup_addr_detect_transmits\n\
        The number of consecutive Neighbor Solicitation messages\nsent while performing\
        \ Duplicate Address Detection on a\ntentative address.  A value of zero indicates\
        \ that\nDuplicate Address Detection is not performed on\ntentative addresses.\
        \  A value of one indicates a single\ntransmission with no follow-up retransmissions."
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dup_addr_detect_transmits"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dup_addr_detect_transmits"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/config/dhcp-client:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dhcp_client\n\
        Enables a DHCP client on the interface in order to request\nan address"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dhcp_client"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dhcp_client"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dhcp_client\n\
        Enables a DHCP client on the interface in order to request\nan address"
      operationId: "put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dhcp_client"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dhcp_client"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dhcp_client\n\
        Enables a DHCP client on the interface in order to request\nan address"
      operationId: "delete_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dhcp_client"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dhcp_client\n\
        Enables a DHCP client on the interface in order to request\nan address"
      operationId: "patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dhcp_client"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dhcp_client"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/state:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state\n\
        Top-level operational state data for the IPv6 interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/state/enabled:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_enabled\n\
        Controls whether IPv6 is enabled or disabled on this\ninterface.  When IPv6\
        \ is enabled, this interface is\nconnected to an IPv6 stack, and the interface\
        \ can send\nand receive IPv6 packets."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_enabled"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/state/mtu:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_mtu\n\
        The size, in octets, of the largest IPv6 packet that the\ninterface will send\
        \ and receive.\n\nThe server may restrict the allowed values for this leaf,\n\
        depending on the interface's type.\n\nIf this leaf is not configured, the\
        \ operationally used MTU\ndepends on the interface's type."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_mtu"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_mtu"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/state/dup-addr-detect-transmits
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_dup_addr_detect_transmits\n\
        The number of consecutive Neighbor Solicitation messages\nsent while performing\
        \ Duplicate Address Detection on a\ntentative address.  A value of zero indicates\
        \ that\nDuplicate Address Detection is not performed on\ntentative addresses.\
        \  A value of one indicates a single\ntransmission with no follow-up retransmissions."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_dup_addr_detect_transmits"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_dup_addr_detect_transmits"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/state/dhcp-client:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_dhcp_client\n\
        Enables a DHCP client on the interface in order to request\nan address"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_dhcp_client"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_dhcp_client"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/state/counters:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters\n\
        Packet and byte counters for IP transmission and\nreception for the address\
        \ family."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/state/counters/in-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_pkts\n\
        The total number of IP packets received for the specified\naddress family,\
        \ including those received in error"
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/state/counters/in-octets
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_octets\n\
        The total number of octets received in input IP packets\nfor the specified\
        \ address family, including those received\nin error."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_octets"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_octets"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/state/counters/in-error-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_error_pkts\n\
        Number of IP packets discarded due to errors for the\nspecified address family,\
        \ including errors in the IP\nheader, no route found to the IP destination,\
        \ invalid\naddress, unknown protocol, etc."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_error_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_error_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/state/counters/in-forwarded-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_forwarded_pkts\n\
        The number of input packets for which the device was not\ntheir final IP destination\
        \ and for which the device\nattempted to find a route to forward them to that\
        \ final\ndestination."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_forwarded_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_forwarded_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/state/counters/in-forwarded-octets
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_forwarded_octets\n\
        The number of octets received in input IP packets\nfor the specified address\
        \ family for which the device was\nnot their final IP destination and for\
        \ which the\ndevice attempted to find a route to forward them to that\nfinal\
        \ destination."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_forwarded_octets"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_forwarded_octets"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/state/counters/in-discarded-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_discarded_pkts\n\
        The number of input IP packets for the\nspecified address family, for which\
        \ no problems were\nencountered to prevent their continued processing, but\n\
        were discarded (e.g., for lack of buffer space)."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_discarded_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_discarded_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/state/counters/out-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_pkts\n\
        The total number of IP packets for the\nspecified address family that the\
        \ device supplied\nto the lower layers for transmission.  This includes\n\
        packets generated locally and those forwarded by the\ndevice."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/state/counters/out-octets
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_octets\n\
        The total number of octets in IP packets for the\nspecified address family\
        \ that the device\nsupplied to the lower layers for transmission.  This\n\
        includes packets generated locally and those forwarded by\nthe device."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_octets"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_octets"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/state/counters/out-error-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_error_pkts\n\
        Number of IP packets for the specified address family\nlocally generated and\
        \ discarded due to errors, including\nno route found to the IP destination."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_error_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_error_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/state/counters/out-forwarded-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_forwarded_pkts\n\
        The number of packets for which this entity was not their\nfinal IP destination\
        \ and for which it was successful in\nfinding a path to their final destination."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_forwarded_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_forwarded_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/state/counters/out-forwarded-octets
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_forwarded_octets\n\
        The number of octets in packets for which this entity was\nnot their final\
        \ IP destination and for which it was\nsuccessful in finding a path to their\
        \ final destination."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_forwarded_octets"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_forwarded_octets"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/subinterfaces/subinterface={index}/openconfig-if-ip:ipv6/state/counters/out-discarded-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_discarded_pkts\n\
        The number of output IP packets for the\nspecified address family for which\
        \ no problem was\nencountered to prevent their transmission to their\ndestination,\
        \ but were discarded (e.g., for lack of\nbuffer space)."
      operationId: "get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_discarded_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "index"
        in: "path"
        description: "The index number of the subinterface -- used to address\nthe\
          \ logical interface"
        required: true
        type: "integer"
        x-exportParamName: "Index"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_discarded_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet\n\
        Top-level container for ethernet configuration\nand state"
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ethernet_interfaces_interface_ethernet_config\n\
        Configuration data for ethernet interfaces"
      operationId: "post_openconfig_if_ethernet_interfaces_interface_ethernet_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ethernet_interfaces_interface_ethernet_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ethernet_interfaces_interface_ethernet\n\
        Top-level container for ethernet configuration\nand state"
      operationId: "put_openconfig_if_ethernet_interfaces_interface_ethernet"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ethernet_interfaces_interface_ethernet"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ethernet_interfaces_interface_ethernet\n\
        Top-level container for ethernet configuration\nand state"
      operationId: "delete_openconfig_if_ethernet_interfaces_interface_ethernet"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ethernet_interfaces_interface_ethernet\n\
        Top-level container for ethernet configuration\nand state"
      operationId: "patch_openconfig_if_ethernet_interfaces_interface_ethernet"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ethernet_interfaces_interface_ethernet"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/config:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_config\n\
        Configuration data for ethernet interfaces"
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ethernet_interfaces_interface_ethernet_config_mac_address\n\
        Assigns a MAC address to the Ethernet interface.  If not\nspecified, the corresponding\
        \ operational state leaf is\nexpected to show the system-assigned MAC address."
      operationId: "post_openconfig_if_ethernet_interfaces_interface_ethernet_config_mac_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ethernet_interfaces_interface_ethernet_config_mac_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ethernet_interfaces_interface_ethernet_config\n\
        Configuration data for ethernet interfaces"
      operationId: "put_openconfig_if_ethernet_interfaces_interface_ethernet_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ethernet_interfaces_interface_ethernet_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ethernet_interfaces_interface_ethernet_config\n\
        Configuration data for ethernet interfaces"
      operationId: "delete_openconfig_if_ethernet_interfaces_interface_ethernet_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ethernet_interfaces_interface_ethernet_config\n\
        Configuration data for ethernet interfaces"
      operationId: "patch_openconfig_if_ethernet_interfaces_interface_ethernet_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ethernet_interfaces_interface_ethernet_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/config/mac-address:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_config_mac_address\n\
        Assigns a MAC address to the Ethernet interface.  If not\nspecified, the corresponding\
        \ operational state leaf is\nexpected to show the system-assigned MAC address."
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_config_mac_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_config_mac_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ethernet_interfaces_interface_ethernet_config_mac_address\n\
        Assigns a MAC address to the Ethernet interface.  If not\nspecified, the corresponding\
        \ operational state leaf is\nexpected to show the system-assigned MAC address."
      operationId: "put_openconfig_if_ethernet_interfaces_interface_ethernet_config_mac_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ethernet_interfaces_interface_ethernet_config_mac_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ethernet_interfaces_interface_ethernet_config_mac_address\n\
        Assigns a MAC address to the Ethernet interface.  If not\nspecified, the corresponding\
        \ operational state leaf is\nexpected to show the system-assigned MAC address."
      operationId: "delete_openconfig_if_ethernet_interfaces_interface_ethernet_config_mac_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ethernet_interfaces_interface_ethernet_config_mac_address\n\
        Assigns a MAC address to the Ethernet interface.  If not\nspecified, the corresponding\
        \ operational state leaf is\nexpected to show the system-assigned MAC address."
      operationId: "patch_openconfig_if_ethernet_interfaces_interface_ethernet_config_mac_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ethernet_interfaces_interface_ethernet_config_mac_address"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/config/auto-negotiate:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_config_auto_negotiate\n\
        Set to TRUE to request the interface to auto-negotiate\ntransmission parameters\
        \ with its peer interface.  When\nset to FALSE, the transmission parameters\
        \ are specified\nmanually."
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_config_auto_negotiate"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_config_auto_negotiate"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ethernet_interfaces_interface_ethernet_config_auto_negotiate\n\
        Set to TRUE to request the interface to auto-negotiate\ntransmission parameters\
        \ with its peer interface.  When\nset to FALSE, the transmission parameters\
        \ are specified\nmanually."
      operationId: "put_openconfig_if_ethernet_interfaces_interface_ethernet_config_auto_negotiate"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ethernet_interfaces_interface_ethernet_config_auto_negotiate"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ethernet_interfaces_interface_ethernet_config_auto_negotiate\n\
        Set to TRUE to request the interface to auto-negotiate\ntransmission parameters\
        \ with its peer interface.  When\nset to FALSE, the transmission parameters\
        \ are specified\nmanually."
      operationId: "delete_openconfig_if_ethernet_interfaces_interface_ethernet_config_auto_negotiate"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ethernet_interfaces_interface_ethernet_config_auto_negotiate\n\
        Set to TRUE to request the interface to auto-negotiate\ntransmission parameters\
        \ with its peer interface.  When\nset to FALSE, the transmission parameters\
        \ are specified\nmanually."
      operationId: "patch_openconfig_if_ethernet_interfaces_interface_ethernet_config_auto_negotiate"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ethernet_interfaces_interface_ethernet_config_auto_negotiate"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/config/duplex-mode:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_config_duplex_mode\n\
        When auto-negotiate is TRUE, this optionally sets the\nduplex mode that will\
        \ be advertised to the peer.  If\nunspecified, the interface should negotiate\
        \ the duplex mode\ndirectly (typically full-duplex).  When auto-negotiate\
        \ is\nFALSE, this sets the duplex mode on the interface directly."
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_config_duplex_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_config_duplex_mode"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ethernet_interfaces_interface_ethernet_config_duplex_mode\n\
        When auto-negotiate is TRUE, this optionally sets the\nduplex mode that will\
        \ be advertised to the peer.  If\nunspecified, the interface should negotiate\
        \ the duplex mode\ndirectly (typically full-duplex).  When auto-negotiate\
        \ is\nFALSE, this sets the duplex mode on the interface directly."
      operationId: "put_openconfig_if_ethernet_interfaces_interface_ethernet_config_duplex_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ethernet_interfaces_interface_ethernet_config_duplex_mode"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ethernet_interfaces_interface_ethernet_config_duplex_mode\n\
        When auto-negotiate is TRUE, this optionally sets the\nduplex mode that will\
        \ be advertised to the peer.  If\nunspecified, the interface should negotiate\
        \ the duplex mode\ndirectly (typically full-duplex).  When auto-negotiate\
        \ is\nFALSE, this sets the duplex mode on the interface directly."
      operationId: "delete_openconfig_if_ethernet_interfaces_interface_ethernet_config_duplex_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ethernet_interfaces_interface_ethernet_config_duplex_mode\n\
        When auto-negotiate is TRUE, this optionally sets the\nduplex mode that will\
        \ be advertised to the peer.  If\nunspecified, the interface should negotiate\
        \ the duplex mode\ndirectly (typically full-duplex).  When auto-negotiate\
        \ is\nFALSE, this sets the duplex mode on the interface directly."
      operationId: "patch_openconfig_if_ethernet_interfaces_interface_ethernet_config_duplex_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ethernet_interfaces_interface_ethernet_config_duplex_mode"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/config/port-speed:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_config_port_speed\n\
        When auto-negotiate is TRUE, this optionally sets the\nport-speed mode that\
        \ will be advertised to the peer for\nnegotiation.  If unspecified, it is\
        \ expected that the\ninterface will select the highest speed available based\
        \ on\nnegotiation.  When auto-negotiate is set to FALSE, sets the\nlink speed\
        \ to a fixed value -- supported values are defined\nby ETHERNET_SPEED identities"
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_config_port_speed"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_config_port_speed"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ethernet_interfaces_interface_ethernet_config_port_speed\n\
        When auto-negotiate is TRUE, this optionally sets the\nport-speed mode that\
        \ will be advertised to the peer for\nnegotiation.  If unspecified, it is\
        \ expected that the\ninterface will select the highest speed available based\
        \ on\nnegotiation.  When auto-negotiate is set to FALSE, sets the\nlink speed\
        \ to a fixed value -- supported values are defined\nby ETHERNET_SPEED identities"
      operationId: "put_openconfig_if_ethernet_interfaces_interface_ethernet_config_port_speed"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ethernet_interfaces_interface_ethernet_config_port_speed"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ethernet_interfaces_interface_ethernet_config_port_speed\n\
        When auto-negotiate is TRUE, this optionally sets the\nport-speed mode that\
        \ will be advertised to the peer for\nnegotiation.  If unspecified, it is\
        \ expected that the\ninterface will select the highest speed available based\
        \ on\nnegotiation.  When auto-negotiate is set to FALSE, sets the\nlink speed\
        \ to a fixed value -- supported values are defined\nby ETHERNET_SPEED identities"
      operationId: "delete_openconfig_if_ethernet_interfaces_interface_ethernet_config_port_speed"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ethernet_interfaces_interface_ethernet_config_port_speed\n\
        When auto-negotiate is TRUE, this optionally sets the\nport-speed mode that\
        \ will be advertised to the peer for\nnegotiation.  If unspecified, it is\
        \ expected that the\ninterface will select the highest speed available based\
        \ on\nnegotiation.  When auto-negotiate is set to FALSE, sets the\nlink speed\
        \ to a fixed value -- supported values are defined\nby ETHERNET_SPEED identities"
      operationId: "patch_openconfig_if_ethernet_interfaces_interface_ethernet_config_port_speed"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ethernet_interfaces_interface_ethernet_config_port_speed"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/config/enable-flow-control:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_config_enable_flow_control\n\
        Enable or disable flow control for this interface.\nEthernet flow control\
        \ is a mechanism by which a receiver\nmay send PAUSE frames to a sender to\
        \ stop transmission for\na specified time.\n\nThis setting should override\
        \ auto-negotiated flow control\nsettings.  If left unspecified, and auto-negotiate\
        \ is TRUE,\nflow control mode is negotiated with the peer interface."
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_config_enable_flow_control"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_config_enable_flow_control"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ethernet_interfaces_interface_ethernet_config_enable_flow_control\n\
        Enable or disable flow control for this interface.\nEthernet flow control\
        \ is a mechanism by which a receiver\nmay send PAUSE frames to a sender to\
        \ stop transmission for\na specified time.\n\nThis setting should override\
        \ auto-negotiated flow control\nsettings.  If left unspecified, and auto-negotiate\
        \ is TRUE,\nflow control mode is negotiated with the peer interface."
      operationId: "put_openconfig_if_ethernet_interfaces_interface_ethernet_config_enable_flow_control"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ethernet_interfaces_interface_ethernet_config_enable_flow_control"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ethernet_interfaces_interface_ethernet_config_enable_flow_control\n\
        Enable or disable flow control for this interface.\nEthernet flow control\
        \ is a mechanism by which a receiver\nmay send PAUSE frames to a sender to\
        \ stop transmission for\na specified time.\n\nThis setting should override\
        \ auto-negotiated flow control\nsettings.  If left unspecified, and auto-negotiate\
        \ is TRUE,\nflow control mode is negotiated with the peer interface."
      operationId: "delete_openconfig_if_ethernet_interfaces_interface_ethernet_config_enable_flow_control"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ethernet_interfaces_interface_ethernet_config_enable_flow_control\n\
        Enable or disable flow control for this interface.\nEthernet flow control\
        \ is a mechanism by which a receiver\nmay send PAUSE frames to a sender to\
        \ stop transmission for\na specified time.\n\nThis setting should override\
        \ auto-negotiated flow control\nsettings.  If left unspecified, and auto-negotiate\
        \ is TRUE,\nflow control mode is negotiated with the peer interface."
      operationId: "patch_openconfig_if_ethernet_interfaces_interface_ethernet_config_enable_flow_control"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ethernet_interfaces_interface_ethernet_config_enable_flow_control"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/config/openconfig-if-aggregate:aggregate-id:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_aggregate_interfaces_interface_ethernet_config_aggregate_id\n\
        Specify the logical aggregate interface to which\nthis interface belongs"
      operationId: "get_openconfig_if_aggregate_interfaces_interface_ethernet_config_aggregate_id"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_aggregate_interfaces_interface_ethernet_config_aggregate_id"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_aggregate_interfaces_interface_ethernet_config_aggregate_id\n\
        Specify the logical aggregate interface to which\nthis interface belongs"
      operationId: "put_openconfig_if_aggregate_interfaces_interface_ethernet_config_aggregate_id"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_aggregate_interfaces_interface_ethernet_config_aggregate_id"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_aggregate_interfaces_interface_ethernet_config_aggregate_id\n\
        Specify the logical aggregate interface to which\nthis interface belongs"
      operationId: "delete_openconfig_if_aggregate_interfaces_interface_ethernet_config_aggregate_id"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_aggregate_interfaces_interface_ethernet_config_aggregate_id\n\
        Specify the logical aggregate interface to which\nthis interface belongs"
      operationId: "patch_openconfig_if_aggregate_interfaces_interface_ethernet_config_aggregate_id"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_aggregate_interfaces_interface_ethernet_config_aggregate_id"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_state\n\
        State variables for Ethernet interfaces"
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state/mac-address:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_state_mac_address\n\
        Assigns a MAC address to the Ethernet interface.  If not\nspecified, the corresponding\
        \ operational state leaf is\nexpected to show the system-assigned MAC address."
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_state_mac_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state_mac_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state/auto-negotiate:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_state_auto_negotiate\n\
        Set to TRUE to request the interface to auto-negotiate\ntransmission parameters\
        \ with its peer interface.  When\nset to FALSE, the transmission parameters\
        \ are specified\nmanually."
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_state_auto_negotiate"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state_auto_negotiate"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state/duplex-mode:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_state_duplex_mode\n\
        When auto-negotiate is TRUE, this optionally sets the\nduplex mode that will\
        \ be advertised to the peer.  If\nunspecified, the interface should negotiate\
        \ the duplex mode\ndirectly (typically full-duplex).  When auto-negotiate\
        \ is\nFALSE, this sets the duplex mode on the interface directly."
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_state_duplex_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state_duplex_mode"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state/port-speed:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_state_port_speed\n\
        When auto-negotiate is TRUE, this optionally sets the\nport-speed mode that\
        \ will be advertised to the peer for\nnegotiation.  If unspecified, it is\
        \ expected that the\ninterface will select the highest speed available based\
        \ on\nnegotiation.  When auto-negotiate is set to FALSE, sets the\nlink speed\
        \ to a fixed value -- supported values are defined\nby ETHERNET_SPEED identities"
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_state_port_speed"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state_port_speed"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state/enable-flow-control:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_state_enable_flow_control\n\
        Enable or disable flow control for this interface.\nEthernet flow control\
        \ is a mechanism by which a receiver\nmay send PAUSE frames to a sender to\
        \ stop transmission for\na specified time.\n\nThis setting should override\
        \ auto-negotiated flow control\nsettings.  If left unspecified, and auto-negotiate\
        \ is TRUE,\nflow control mode is negotiated with the peer interface."
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_state_enable_flow_control"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state_enable_flow_control"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state/hw-mac-address:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_state_hw_mac_address\n\
        Represenets the 'burned-in',  or system-assigned, MAC\naddress for the Ethernet\
        \ interface."
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_state_hw_mac_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state_hw_mac_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state/negotiated-duplex-mode:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_state_negotiated_duplex_mode\n\
        When auto-negotiate is set to TRUE, and the interface has\ncompleted auto-negotiation\
        \ with the remote peer, this value\nshows the duplex mode that has been negotiated."
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_state_negotiated_duplex_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state_negotiated_duplex_mode"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state/negotiated-port-speed:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_state_negotiated_port_speed\n\
        When auto-negotiate is set to TRUE, and the interface has\ncompleted auto-negotiation\
        \ with the remote peer, this value\nshows the interface speed that has been\
        \ negotiated."
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_state_negotiated_port_speed"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state_negotiated_port_speed"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state/counters:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters\n\
        Ethernet interface counters"
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state/counters/in-mac-control-frames:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_mac_control_frames\n\
        MAC layer control frames received on the interface"
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_mac_control_frames"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_mac_control_frames"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state/counters/in-mac-pause-frames:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_mac_pause_frames\n\
        MAC layer PAUSE frames received on the interface"
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_mac_pause_frames"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_mac_pause_frames"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state/counters/in-oversize-frames:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_oversize_frames\n\
        The total number of frames received that were\nlonger than 1518 octets (excluding\
        \ framing bits,\nbut including FCS octets) and were otherwise\nwell formed."
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_oversize_frames"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_oversize_frames"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state/counters/in-undersize-frames:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_undersize_frames\n\
        The total number of frames received that were\nless than 64 octets long (excluding\
        \ framing bits,\nbut including FCS octets) and were otherwise well\nformed."
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_undersize_frames"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_undersize_frames"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state/counters/in-jabber-frames:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_jabber_frames\n\
        Number of jabber frames received on the\ninterface.  Jabber frames are typically\
        \ defined as oversize\nframes which also have a bad CRC.  Implementations\
        \ may use\nslightly different definitions of what constitutes a jabber\nframe.\
        \  Often indicative of a NIC hardware problem."
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_jabber_frames"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_jabber_frames"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state/counters/in-fragment-frames:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_fragment_frames\n\
        The total number of frames received that were less than\n64 octets in length\
        \ (excluding framing bits but including\nFCS octets) and had either a bad\
        \ Frame Check Sequence\n(FCS) with an integral number of octets (FCS Error)\
        \ or a\nbad FCS with a non-integral number of octets (Alignment\nError)."
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_fragment_frames"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_fragment_frames"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state/counters/in-8021q-frames:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_8021q_frames\n\
        Number of 802.1q tagged frames received on the interface"
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_8021q_frames"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_8021q_frames"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state/counters/in-crc-errors:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_crc_errors\n\
        The total number of frames received that\nhad a length (excluding framing\
        \ bits, but\nincluding FCS octets) of between 64 and 1518\noctets, inclusive,\
        \ but had either a bad\nFrame Check Sequence (FCS) with an integral\nnumber\
        \ of octets (FCS Error) or a bad FCS with\na non-integral number of octets\
        \ (Alignment Error)"
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_crc_errors"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_crc_errors"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state/counters/in-block-errors:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_block_errors\n\
        The number of received errored blocks. Error detection codes\nare capable\
        \ of detecting whether one or more errors have\noccurred in a given sequence\
        \ of bits – the block. It is\nnormally not possible to determine the exact\
        \ number of errored\nbits within the block"
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_block_errors"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_block_errors"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state/counters/out-mac-control-frames:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_out_mac_control_frames\n\
        MAC layer control frames sent on the interface"
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_out_mac_control_frames"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_out_mac_control_frames"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state/counters/out-mac-pause-frames:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_out_mac_pause_frames\n\
        MAC layer PAUSE frames sent on the interface"
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_out_mac_pause_frames"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_out_mac_pause_frames"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state/counters/out-8021q-frames:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_out_8021q_frames\n\
        Number of 802.1q tagged frames sent on the interface"
      operationId: "get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_out_8021q_frames"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_out_8021q_frames"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/state/openconfig-if-aggregate:aggregate-id:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_aggregate_interfaces_interface_ethernet_state_aggregate_id\n\
        Specify the logical aggregate interface to which\nthis interface belongs"
      operationId: "get_openconfig_if_aggregate_interfaces_interface_ethernet_state_aggregate_id"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_aggregate_interfaces_interface_ethernet_state_aggregate_id"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/openconfig-vlan:switched-vlan:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan\n\
        Enclosing container for VLAN interface-specific\ndata on Ethernet interfaces.\
        \  These are for standard\nL2, switched-style VLANs."
      operationId: "get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config\n\
        Configuration parameters for VLANs"
      operationId: "post_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan\n\
        Enclosing container for VLAN interface-specific\ndata on Ethernet interfaces.\
        \  These are for standard\nL2, switched-style VLANs."
      operationId: "put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_vlan_interfaces_interface_ethernet_switched_vlan\n\
        Enclosing container for VLAN interface-specific\ndata on Ethernet interfaces.\
        \  These are for standard\nL2, switched-style VLANs."
      operationId: "delete_openconfig_vlan_interfaces_interface_ethernet_switched_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan\n\
        Enclosing container for VLAN interface-specific\ndata on Ethernet interfaces.\
        \  These are for standard\nL2, switched-style VLANs."
      operationId: "patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/openconfig-vlan:switched-vlan/config:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config\n\
        Configuration parameters for VLANs"
      operationId: "get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_interface_mode\n\
        Set the interface to access or trunk mode for\nVLANs"
      operationId: "post_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_interface_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_interface_mode"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config\n\
        Configuration parameters for VLANs"
      operationId: "put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config\n\
        Configuration parameters for VLANs"
      operationId: "delete_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config\n\
        Configuration parameters for VLANs"
      operationId: "patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/openconfig-vlan:switched-vlan/config/interface-mode
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_interface_mode\n\
        Set the interface to access or trunk mode for\nVLANs"
      operationId: "get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_interface_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_interface_mode"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_interface_mode\n\
        Set the interface to access or trunk mode for\nVLANs"
      operationId: "put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_interface_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_interface_mode"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_interface_mode\n\
        Set the interface to access or trunk mode for\nVLANs"
      operationId: "delete_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_interface_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_interface_mode\n\
        Set the interface to access or trunk mode for\nVLANs"
      operationId: "patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_interface_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_interface_mode"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/openconfig-vlan:switched-vlan/config/native-vlan
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_native_vlan\n\
        Set the native VLAN id for untagged frames arriving on\na trunk interface.\
        \  Tagged frames sent on an interface\nconfigured with a native VLAN should\
        \ have their tags\nstripped prior to transmission. This configuration is only\n\
        valid on a trunk interface."
      operationId: "get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_native_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_native_vlan"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_native_vlan\n\
        Set the native VLAN id for untagged frames arriving on\na trunk interface.\
        \  Tagged frames sent on an interface\nconfigured with a native VLAN should\
        \ have their tags\nstripped prior to transmission. This configuration is only\n\
        valid on a trunk interface."
      operationId: "put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_native_vlan"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_native_vlan"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_native_vlan\n\
        Set the native VLAN id for untagged frames arriving on\na trunk interface.\
        \  Tagged frames sent on an interface\nconfigured with a native VLAN should\
        \ have their tags\nstripped prior to transmission. This configuration is only\n\
        valid on a trunk interface."
      operationId: "delete_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_native_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_native_vlan\n\
        Set the native VLAN id for untagged frames arriving on\na trunk interface.\
        \  Tagged frames sent on an interface\nconfigured with a native VLAN should\
        \ have their tags\nstripped prior to transmission. This configuration is only\n\
        valid on a trunk interface."
      operationId: "patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_native_vlan"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_native_vlan"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/openconfig-vlan:switched-vlan/config/access-vlan
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_access_vlan\n\
        Assign the access vlan to the access port."
      operationId: "get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_access_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_access_vlan"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_access_vlan\n\
        Assign the access vlan to the access port."
      operationId: "put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_access_vlan"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_access_vlan"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_access_vlan\n\
        Assign the access vlan to the access port."
      operationId: "delete_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_access_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_access_vlan\n\
        Assign the access vlan to the access port."
      operationId: "patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_access_vlan"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_access_vlan"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/openconfig-vlan:switched-vlan/config/trunk-vlans
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans\n\
        Specify VLANs, or ranges thereof, that the interface may\ncarry when in trunk\
        \ mode.  If not specified, all VLANs are\nallowed on the interface. Ranges\
        \ are specified in the form\nx..y, where x<y - ranges are assumed to be inclusive\
        \ (such\nthat the VLAN range is x <= range <= y."
      operationId: "get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans\n\
        Specify VLANs, or ranges thereof, that the interface may\ncarry when in trunk\
        \ mode.  If not specified, all VLANs are\nallowed on the interface. Ranges\
        \ are specified in the form\nx..y, where x<y - ranges are assumed to be inclusive\
        \ (such\nthat the VLAN range is x <= range <= y."
      operationId: "put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans\n\
        Specify VLANs, or ranges thereof, that the interface may\ncarry when in trunk\
        \ mode.  If not specified, all VLANs are\nallowed on the interface. Ranges\
        \ are specified in the form\nx..y, where x<y - ranges are assumed to be inclusive\
        \ (such\nthat the VLAN range is x <= range <= y."
      operationId: "delete_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans\n\
        Specify VLANs, or ranges thereof, that the interface may\ncarry when in trunk\
        \ mode.  If not specified, all VLANs are\nallowed on the interface. Ranges\
        \ are specified in the form\nx..y, where x<y - ranges are assumed to be inclusive\
        \ (such\nthat the VLAN range is x <= range <= y."
      operationId: "patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/openconfig-vlan:switched-vlan/config/trunk-vlans={trunk-vlans}
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_llist_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans\n\
        Specify VLANs, or ranges thereof, that the interface may\ncarry when in trunk\
        \ mode.  If not specified, all VLANs are\nallowed on the interface. Ranges\
        \ are specified in the form\nx..y, where x<y - ranges are assumed to be inclusive\
        \ (such\nthat the VLAN range is x <= range <= y."
      operationId: "get_llist_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "trunk-vlans"
        in: "path"
        description: "Specify VLANs, or ranges thereof, that the interface may\ncarry\
          \ when in trunk mode.  If not specified, all VLANs are\nallowed on the interface.\
          \ Ranges are specified in the form\nx..y, where x<y - ranges are assumed\
          \ to be inclusive (such\nthat the VLAN range is x <= range <= y."
        required: true
        type: "string"
        x-exportParamName: "TrunkVlans"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: del_llist_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans\n\
        Specify VLANs, or ranges thereof, that the interface may\ncarry when in trunk\
        \ mode.  If not specified, all VLANs are\nallowed on the interface. Ranges\
        \ are specified in the form\nx..y, where x<y - ranges are assumed to be inclusive\
        \ (such\nthat the VLAN range is x <= range <= y."
      operationId: "del_llist_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "trunk-vlans"
        in: "path"
        description: "Specify VLANs, or ranges thereof, that the interface may\ncarry\
          \ when in trunk mode.  If not specified, all VLANs are\nallowed on the interface.\
          \ Ranges are specified in the form\nx..y, where x<y - ranges are assumed\
          \ to be inclusive (such\nthat the VLAN range is x <= range <= y."
        required: true
        type: "string"
        x-exportParamName: "TrunkVlans"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/openconfig-vlan:switched-vlan/state:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_state\n\
        State variables for VLANs"
      operationId: "get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/openconfig-vlan:switched-vlan/state/interface-mode
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_state_interface_mode\n\
        Set the interface to access or trunk mode for\nVLANs"
      operationId: "get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_state_interface_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_state_interface_mode"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/openconfig-vlan:switched-vlan/state/native-vlan
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_state_native_vlan\n\
        Set the native VLAN id for untagged frames arriving on\na trunk interface.\
        \  Tagged frames sent on an interface\nconfigured with a native VLAN should\
        \ have their tags\nstripped prior to transmission. This configuration is only\n\
        valid on a trunk interface."
      operationId: "get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_state_native_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_state_native_vlan"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/openconfig-vlan:switched-vlan/state/access-vlan
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_state_access_vlan\n\
        Assign the access vlan to the access port."
      operationId: "get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_state_access_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_state_access_vlan"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-if-ethernet:ethernet/openconfig-vlan:switched-vlan/state/trunk-vlans
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_state_trunk_vlans\n\
        Specify VLANs, or ranges thereof, that the interface may\ncarry when in trunk\
        \ mode.  If not specified, all VLANs are\nallowed on the interface. Ranges\
        \ are specified in the form\nx..y, where x<y - ranges are assumed to be inclusive\
        \ (such\nthat the VLAN range is x <= range <= y."
      operationId: "get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_state_trunk_vlans"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_state_trunk_vlans"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-aggregate:aggregation:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_aggregate_interfaces_interface_aggregation\n\
        Options for logical interfaces representing\naggregates"
      operationId: "get_openconfig_if_aggregate_interfaces_interface_aggregation"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_aggregate_interfaces_interface_aggregation"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_aggregate_interfaces_interface_aggregation_config\n\
        Configuration variables for logical aggregate /\nLAG interfaces"
      operationId: "post_openconfig_if_aggregate_interfaces_interface_aggregation_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_aggregate_interfaces_interface_aggregation_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_aggregate_interfaces_interface_aggregation\n\
        Options for logical interfaces representing\naggregates"
      operationId: "put_openconfig_if_aggregate_interfaces_interface_aggregation"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_aggregate_interfaces_interface_aggregation"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_aggregate_interfaces_interface_aggregation\n\
        Options for logical interfaces representing\naggregates"
      operationId: "delete_openconfig_if_aggregate_interfaces_interface_aggregation"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_aggregate_interfaces_interface_aggregation\n\
        Options for logical interfaces representing\naggregates"
      operationId: "patch_openconfig_if_aggregate_interfaces_interface_aggregation"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_aggregate_interfaces_interface_aggregation"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-aggregate:aggregation/config:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_aggregate_interfaces_interface_aggregation_config\n\
        Configuration variables for logical aggregate /\nLAG interfaces"
      operationId: "get_openconfig_if_aggregate_interfaces_interface_aggregation_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_aggregate_interfaces_interface_aggregation_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_aggregate_interfaces_interface_aggregation_config_lag_type\n\
        Sets the type of LAG, i.e., how it is\nconfigured / maintained"
      operationId: "post_openconfig_if_aggregate_interfaces_interface_aggregation_config_lag_type"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_aggregate_interfaces_interface_aggregation_config_lag_type"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_aggregate_interfaces_interface_aggregation_config\n\
        Configuration variables for logical aggregate /\nLAG interfaces"
      operationId: "put_openconfig_if_aggregate_interfaces_interface_aggregation_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_aggregate_interfaces_interface_aggregation_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_aggregate_interfaces_interface_aggregation_config\n\
        Configuration variables for logical aggregate /\nLAG interfaces"
      operationId: "delete_openconfig_if_aggregate_interfaces_interface_aggregation_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_aggregate_interfaces_interface_aggregation_config\n\
        Configuration variables for logical aggregate /\nLAG interfaces"
      operationId: "patch_openconfig_if_aggregate_interfaces_interface_aggregation_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_aggregate_interfaces_interface_aggregation_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-aggregate:aggregation/config/lag-type:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_aggregate_interfaces_interface_aggregation_config_lag_type\n\
        Sets the type of LAG, i.e., how it is\nconfigured / maintained"
      operationId: "get_openconfig_if_aggregate_interfaces_interface_aggregation_config_lag_type"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_aggregate_interfaces_interface_aggregation_config_lag_type"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_aggregate_interfaces_interface_aggregation_config_lag_type\n\
        Sets the type of LAG, i.e., how it is\nconfigured / maintained"
      operationId: "put_openconfig_if_aggregate_interfaces_interface_aggregation_config_lag_type"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_aggregate_interfaces_interface_aggregation_config_lag_type"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_aggregate_interfaces_interface_aggregation_config_lag_type\n\
        Sets the type of LAG, i.e., how it is\nconfigured / maintained"
      operationId: "delete_openconfig_if_aggregate_interfaces_interface_aggregation_config_lag_type"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_aggregate_interfaces_interface_aggregation_config_lag_type\n\
        Sets the type of LAG, i.e., how it is\nconfigured / maintained"
      operationId: "patch_openconfig_if_aggregate_interfaces_interface_aggregation_config_lag_type"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_aggregate_interfaces_interface_aggregation_config_lag_type"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-aggregate:aggregation/config/min-links:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_aggregate_interfaces_interface_aggregation_config_min_links\n\
        Specifies the mininum number of member\ninterfaces that must be active for\
        \ the aggregate interface\nto be available"
      operationId: "get_openconfig_if_aggregate_interfaces_interface_aggregation_config_min_links"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_aggregate_interfaces_interface_aggregation_config_min_links"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_aggregate_interfaces_interface_aggregation_config_min_links\n\
        Specifies the mininum number of member\ninterfaces that must be active for\
        \ the aggregate interface\nto be available"
      operationId: "put_openconfig_if_aggregate_interfaces_interface_aggregation_config_min_links"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_aggregate_interfaces_interface_aggregation_config_min_links"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_aggregate_interfaces_interface_aggregation_config_min_links\n\
        Specifies the mininum number of member\ninterfaces that must be active for\
        \ the aggregate interface\nto be available"
      operationId: "delete_openconfig_if_aggregate_interfaces_interface_aggregation_config_min_links"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_aggregate_interfaces_interface_aggregation_config_min_links\n\
        Specifies the mininum number of member\ninterfaces that must be active for\
        \ the aggregate interface\nto be available"
      operationId: "patch_openconfig_if_aggregate_interfaces_interface_aggregation_config_min_links"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_aggregate_interfaces_interface_aggregation_config_min_links"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-aggregate:aggregation/state:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_aggregate_interfaces_interface_aggregation_state\n\
        Operational state variables for logical\naggregate / LAG interfaces"
      operationId: "get_openconfig_if_aggregate_interfaces_interface_aggregation_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_aggregate_interfaces_interface_aggregation_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-aggregate:aggregation/state/lag-type:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_aggregate_interfaces_interface_aggregation_state_lag_type\n\
        Sets the type of LAG, i.e., how it is\nconfigured / maintained"
      operationId: "get_openconfig_if_aggregate_interfaces_interface_aggregation_state_lag_type"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_aggregate_interfaces_interface_aggregation_state_lag_type"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-aggregate:aggregation/state/min-links:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_aggregate_interfaces_interface_aggregation_state_min_links\n\
        Specifies the mininum number of member\ninterfaces that must be active for\
        \ the aggregate interface\nto be available"
      operationId: "get_openconfig_if_aggregate_interfaces_interface_aggregation_state_min_links"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_aggregate_interfaces_interface_aggregation_state_min_links"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-aggregate:aggregation/state/lag-speed:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_aggregate_interfaces_interface_aggregation_state_lag_speed\n\
        Reports effective speed of the aggregate interface,\nbased on speed of active\
        \ member interfaces"
      operationId: "get_openconfig_if_aggregate_interfaces_interface_aggregation_state_lag_speed"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_aggregate_interfaces_interface_aggregation_state_lag_speed"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-aggregate:aggregation/state/member:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_aggregate_interfaces_interface_aggregation_state_member\n\
        List of current member interfaces for the aggregate,\nexpressed as references\
        \ to existing interfaces"
      operationId: "get_openconfig_if_aggregate_interfaces_interface_aggregation_state_member"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_aggregate_interfaces_interface_aggregation_state_member"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-aggregate:aggregation/openconfig-vlan:switched-vlan:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan\n\
        Enclosing container for VLAN interface-specific\ndata on Ethernet interfaces.\
        \  These are for standard\nL2, switched-style VLANs."
      operationId: "get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config\n\
        Configuration parameters for VLANs"
      operationId: "post_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan\n\
        Enclosing container for VLAN interface-specific\ndata on Ethernet interfaces.\
        \  These are for standard\nL2, switched-style VLANs."
      operationId: "put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_vlan_interfaces_interface_aggregation_switched_vlan\n\
        Enclosing container for VLAN interface-specific\ndata on Ethernet interfaces.\
        \  These are for standard\nL2, switched-style VLANs."
      operationId: "delete_openconfig_vlan_interfaces_interface_aggregation_switched_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan\n\
        Enclosing container for VLAN interface-specific\ndata on Ethernet interfaces.\
        \  These are for standard\nL2, switched-style VLANs."
      operationId: "patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-aggregate:aggregation/openconfig-vlan:switched-vlan/config:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config\n\
        Configuration parameters for VLANs"
      operationId: "get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_interface_mode\n\
        Set the interface to access or trunk mode for\nVLANs"
      operationId: "post_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_interface_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_interface_mode"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config\n\
        Configuration parameters for VLANs"
      operationId: "put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config\n\
        Configuration parameters for VLANs"
      operationId: "delete_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config\n\
        Configuration parameters for VLANs"
      operationId: "patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-if-aggregate:aggregation/openconfig-vlan:switched-vlan/config/interface-mode
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_interface_mode\n\
        Set the interface to access or trunk mode for\nVLANs"
      operationId: "get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_interface_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_interface_mode"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_interface_mode\n\
        Set the interface to access or trunk mode for\nVLANs"
      operationId: "put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_interface_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_interface_mode"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_interface_mode\n\
        Set the interface to access or trunk mode for\nVLANs"
      operationId: "delete_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_interface_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_interface_mode\n\
        Set the interface to access or trunk mode for\nVLANs"
      operationId: "patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_interface_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_interface_mode"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-if-aggregate:aggregation/openconfig-vlan:switched-vlan/config/native-vlan
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_native_vlan\n\
        Set the native VLAN id for untagged frames arriving on\na trunk interface.\
        \  Tagged frames sent on an interface\nconfigured with a native VLAN should\
        \ have their tags\nstripped prior to transmission. This configuration is only\n\
        valid on a trunk interface."
      operationId: "get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_native_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_native_vlan"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_native_vlan\n\
        Set the native VLAN id for untagged frames arriving on\na trunk interface.\
        \  Tagged frames sent on an interface\nconfigured with a native VLAN should\
        \ have their tags\nstripped prior to transmission. This configuration is only\n\
        valid on a trunk interface."
      operationId: "put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_native_vlan"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_native_vlan"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_native_vlan\n\
        Set the native VLAN id for untagged frames arriving on\na trunk interface.\
        \  Tagged frames sent on an interface\nconfigured with a native VLAN should\
        \ have their tags\nstripped prior to transmission. This configuration is only\n\
        valid on a trunk interface."
      operationId: "delete_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_native_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_native_vlan\n\
        Set the native VLAN id for untagged frames arriving on\na trunk interface.\
        \  Tagged frames sent on an interface\nconfigured with a native VLAN should\
        \ have their tags\nstripped prior to transmission. This configuration is only\n\
        valid on a trunk interface."
      operationId: "patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_native_vlan"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_native_vlan"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-if-aggregate:aggregation/openconfig-vlan:switched-vlan/config/access-vlan
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_access_vlan\n\
        Assign the access vlan to the access port."
      operationId: "get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_access_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_access_vlan"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_access_vlan\n\
        Assign the access vlan to the access port."
      operationId: "put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_access_vlan"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_access_vlan"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_access_vlan\n\
        Assign the access vlan to the access port."
      operationId: "delete_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_access_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_access_vlan\n\
        Assign the access vlan to the access port."
      operationId: "patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_access_vlan"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_access_vlan"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-if-aggregate:aggregation/openconfig-vlan:switched-vlan/config/trunk-vlans
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans\n\
        Specify VLANs, or ranges thereof, that the interface may\ncarry when in trunk\
        \ mode.  If not specified, all VLANs are\nallowed on the interface. Ranges\
        \ are specified in the form\nx..y, where x<y - ranges are assumed to be inclusive\
        \ (such\nthat the VLAN range is x <= range <= y."
      operationId: "get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans\n\
        Specify VLANs, or ranges thereof, that the interface may\ncarry when in trunk\
        \ mode.  If not specified, all VLANs are\nallowed on the interface. Ranges\
        \ are specified in the form\nx..y, where x<y - ranges are assumed to be inclusive\
        \ (such\nthat the VLAN range is x <= range <= y."
      operationId: "put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans\n\
        Specify VLANs, or ranges thereof, that the interface may\ncarry when in trunk\
        \ mode.  If not specified, all VLANs are\nallowed on the interface. Ranges\
        \ are specified in the form\nx..y, where x<y - ranges are assumed to be inclusive\
        \ (such\nthat the VLAN range is x <= range <= y."
      operationId: "delete_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans\n\
        Specify VLANs, or ranges thereof, that the interface may\ncarry when in trunk\
        \ mode.  If not specified, all VLANs are\nallowed on the interface. Ranges\
        \ are specified in the form\nx..y, where x<y - ranges are assumed to be inclusive\
        \ (such\nthat the VLAN range is x <= range <= y."
      operationId: "patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-if-aggregate:aggregation/openconfig-vlan:switched-vlan/config/trunk-vlans={trunk-vlans}
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_llist_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans\n\
        Specify VLANs, or ranges thereof, that the interface may\ncarry when in trunk\
        \ mode.  If not specified, all VLANs are\nallowed on the interface. Ranges\
        \ are specified in the form\nx..y, where x<y - ranges are assumed to be inclusive\
        \ (such\nthat the VLAN range is x <= range <= y."
      operationId: "get_llist_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "trunk-vlans"
        in: "path"
        description: "Specify VLANs, or ranges thereof, that the interface may\ncarry\
          \ when in trunk mode.  If not specified, all VLANs are\nallowed on the interface.\
          \ Ranges are specified in the form\nx..y, where x<y - ranges are assumed\
          \ to be inclusive (such\nthat the VLAN range is x <= range <= y."
        required: true
        type: "string"
        x-exportParamName: "TrunkVlans"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: del_llist_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans\n\
        Specify VLANs, or ranges thereof, that the interface may\ncarry when in trunk\
        \ mode.  If not specified, all VLANs are\nallowed on the interface. Ranges\
        \ are specified in the form\nx..y, where x<y - ranges are assumed to be inclusive\
        \ (such\nthat the VLAN range is x <= range <= y."
      operationId: "del_llist_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "trunk-vlans"
        in: "path"
        description: "Specify VLANs, or ranges thereof, that the interface may\ncarry\
          \ when in trunk mode.  If not specified, all VLANs are\nallowed on the interface.\
          \ Ranges are specified in the form\nx..y, where x<y - ranges are assumed\
          \ to be inclusive (such\nthat the VLAN range is x <= range <= y."
        required: true
        type: "string"
        x-exportParamName: "TrunkVlans"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-if-aggregate:aggregation/openconfig-vlan:switched-vlan/state:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_state\n\
        State variables for VLANs"
      operationId: "get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-if-aggregate:aggregation/openconfig-vlan:switched-vlan/state/interface-mode
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_state_interface_mode\n\
        Set the interface to access or trunk mode for\nVLANs"
      operationId: "get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_state_interface_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_state_interface_mode"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-if-aggregate:aggregation/openconfig-vlan:switched-vlan/state/native-vlan
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_state_native_vlan\n\
        Set the native VLAN id for untagged frames arriving on\na trunk interface.\
        \  Tagged frames sent on an interface\nconfigured with a native VLAN should\
        \ have their tags\nstripped prior to transmission. This configuration is only\n\
        valid on a trunk interface."
      operationId: "get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_state_native_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_state_native_vlan"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-if-aggregate:aggregation/openconfig-vlan:switched-vlan/state/access-vlan
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_state_access_vlan\n\
        Assign the access vlan to the access port."
      operationId: "get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_state_access_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_state_access_vlan"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-if-aggregate:aggregation/openconfig-vlan:switched-vlan/state/trunk-vlans
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_state_trunk_vlans\n\
        Specify VLANs, or ranges thereof, that the interface may\ncarry when in trunk\
        \ mode.  If not specified, all VLANs are\nallowed on the interface. Ranges\
        \ are specified in the form\nx..y, where x<y - ranges are assumed to be inclusive\
        \ (such\nthat the VLAN range is x <= range <= y."
      operationId: "get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_state_trunk_vlans"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_state_trunk_vlans"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_routed_vlan\n\
        Top-level container for routed vlan interfaces.  These\nlogical interfaces\
        \ are also known as SVI (switched virtual\ninterface), IRB (integrated routing\
        \ and bridging), RVI\n(routed VLAN interface)"
      operationId: "get_openconfig_vlan_interfaces_interface_routed_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_routed_vlan"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_vlan_interfaces_interface_routed_vlan_config\n\
        Configuration data for routed vlan interfaces"
      operationId: "post_openconfig_vlan_interfaces_interface_routed_vlan_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_vlan_interfaces_interface_routed_vlan_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_vlan_interfaces_interface_routed_vlan\n\
        Top-level container for routed vlan interfaces.  These\nlogical interfaces\
        \ are also known as SVI (switched virtual\ninterface), IRB (integrated routing\
        \ and bridging), RVI\n(routed VLAN interface)"
      operationId: "put_openconfig_vlan_interfaces_interface_routed_vlan"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_vlan_interfaces_interface_routed_vlan"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_vlan_interfaces_interface_routed_vlan\n\
        Top-level container for routed vlan interfaces.  These\nlogical interfaces\
        \ are also known as SVI (switched virtual\ninterface), IRB (integrated routing\
        \ and bridging), RVI\n(routed VLAN interface)"
      operationId: "delete_openconfig_vlan_interfaces_interface_routed_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_vlan_interfaces_interface_routed_vlan\n\
        Top-level container for routed vlan interfaces.  These\nlogical interfaces\
        \ are also known as SVI (switched virtual\ninterface), IRB (integrated routing\
        \ and bridging), RVI\n(routed VLAN interface)"
      operationId: "patch_openconfig_vlan_interfaces_interface_routed_vlan"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_vlan_interfaces_interface_routed_vlan"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/config:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_routed_vlan_config\n\
        Configuration data for routed vlan interfaces"
      operationId: "get_openconfig_vlan_interfaces_interface_routed_vlan_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_routed_vlan_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_vlan_interfaces_interface_routed_vlan_config_vlan\n\
        References the VLAN for which this IP interface\nprovides routing services\
        \ -- similar to a switch virtual\ninterface (SVI), or integrated routing and\
        \ bridging interface\n(IRB) in some implementations."
      operationId: "post_openconfig_vlan_interfaces_interface_routed_vlan_config_vlan"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_vlan_interfaces_interface_routed_vlan_config_vlan"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_vlan_interfaces_interface_routed_vlan_config\n\
        Configuration data for routed vlan interfaces"
      operationId: "put_openconfig_vlan_interfaces_interface_routed_vlan_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_vlan_interfaces_interface_routed_vlan_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_vlan_interfaces_interface_routed_vlan_config\n\
        Configuration data for routed vlan interfaces"
      operationId: "delete_openconfig_vlan_interfaces_interface_routed_vlan_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_vlan_interfaces_interface_routed_vlan_config\n\
        Configuration data for routed vlan interfaces"
      operationId: "patch_openconfig_vlan_interfaces_interface_routed_vlan_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_vlan_interfaces_interface_routed_vlan_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/config/vlan:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_routed_vlan_config_vlan\n\
        References the VLAN for which this IP interface\nprovides routing services\
        \ -- similar to a switch virtual\ninterface (SVI), or integrated routing and\
        \ bridging interface\n(IRB) in some implementations."
      operationId: "get_openconfig_vlan_interfaces_interface_routed_vlan_config_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_routed_vlan_config_vlan"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_vlan_interfaces_interface_routed_vlan_config_vlan\n\
        References the VLAN for which this IP interface\nprovides routing services\
        \ -- similar to a switch virtual\ninterface (SVI), or integrated routing and\
        \ bridging interface\n(IRB) in some implementations."
      operationId: "put_openconfig_vlan_interfaces_interface_routed_vlan_config_vlan"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_vlan_interfaces_interface_routed_vlan_config_vlan"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_vlan_interfaces_interface_routed_vlan_config_vlan\n\
        References the VLAN for which this IP interface\nprovides routing services\
        \ -- similar to a switch virtual\ninterface (SVI), or integrated routing and\
        \ bridging interface\n(IRB) in some implementations."
      operationId: "delete_openconfig_vlan_interfaces_interface_routed_vlan_config_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_vlan_interfaces_interface_routed_vlan_config_vlan\n\
        References the VLAN for which this IP interface\nprovides routing services\
        \ -- similar to a switch virtual\ninterface (SVI), or integrated routing and\
        \ bridging interface\n(IRB) in some implementations."
      operationId: "patch_openconfig_vlan_interfaces_interface_routed_vlan_config_vlan"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_vlan_interfaces_interface_routed_vlan_config_vlan"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/state:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_routed_vlan_state\n\
        Operational state data "
      operationId: "get_openconfig_vlan_interfaces_interface_routed_vlan_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_routed_vlan_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/state/vlan:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_vlan_interfaces_interface_routed_vlan_state_vlan\n\
        References the VLAN for which this IP interface\nprovides routing services\
        \ -- similar to a switch virtual\ninterface (SVI), or integrated routing and\
        \ bridging interface\n(IRB) in some implementations."
      operationId: "get_openconfig_vlan_interfaces_interface_routed_vlan_state_vlan"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_routed_vlan_state_vlan"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4\n\
        Parameters for the IPv4 address family."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses\n\
        Enclosing container for address list"
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4\n\
        Parameters for the IPv4 address family."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4\n\
        Parameters for the IPv4 address family."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4\n\
        Parameters for the IPv4 address family."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses\n\
        Enclosing container for address list"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address\n\
        The list of configured IPv4 addresses on the interface."
      operationId: "post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses\n\
        Enclosing container for address list"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses\n\
        Enclosing container for address list"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses\n\
        Enclosing container for address list"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address\n\
        The list of configured IPv4 addresses on the interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config\n\
        Configuration data for each configured IPv4\naddress on the interface"
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address\n\
        The list of configured IPv4 addresses on the interface."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address\n\
        The list of configured IPv4 addresses on the interface."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address\n\
        The list of configured IPv4 addresses on the interface."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address\n\
        The list of configured IPv4 addresses on the interface."
      operationId: "get_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address\n\
        The list of configured IPv4 addresses on the interface."
      operationId: "put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address\n\
        The list of configured IPv4 addresses on the interface."
      operationId: "delete_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address\n\
        The list of configured IPv4 addresses on the interface."
      operationId: "patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/config
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config\n\
        Configuration data for each configured IPv4\naddress on the interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config_prefix_length\n\
        The length of the subnet prefix."
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config_prefix_length"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config_prefix_length"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config\n\
        Configuration data for each configured IPv4\naddress on the interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config\n\
        Configuration data for each configured IPv4\naddress on the interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/config/prefix-length
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config_prefix_length\n\
        The length of the subnet prefix."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config_prefix_length"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config_prefix_length"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config_prefix_length\n\
        The length of the subnet prefix."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config_prefix_length"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config_prefix_length"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config_prefix_length\n\
        The length of the subnet prefix."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config_prefix_length"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config_prefix_length\n\
        The length of the subnet prefix."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config_prefix_length"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config_prefix_length"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_state\n\
        Operational state data for each IPv4 address\nconfigured on the interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/state/ip
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_state_ip\n\
        The IPv4 address on the interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_state_ip"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_state_ip"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/state/prefix-length
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_state_prefix_length\n\
        The length of the subnet prefix."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_state_prefix_length"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_state_prefix_length"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/state/origin
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_state_origin\n\
        The origin of this address, e.g., statically configured,\nassigned by DHCP,\
        \ etc.."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_state_origin"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_state_origin"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp\n\
        Enclosing container for VRRP groups handled by this\nIP interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp\n\
        Enclosing container for VRRP groups handled by this\nIP interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp\n\
        Enclosing container for VRRP groups handled by this\nIP interface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp\n\
        Enclosing container for VRRP groups handled by this\nIP interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config\n\
        Configuration data for the VRRP group"
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "get_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "delete_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config\n\
        Configuration data for the VRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config\n\
        Configuration data for the VRRP group"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config\n\
        Configuration data for the VRRP group"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/virtual-address
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/virtual-address={virtual-address}
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_llist_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "get_llist_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - name: "virtual-address"
        in: "path"
        description: "Configure one or more virtual addresses for the\nVRRP group"
        required: true
        type: "string"
        x-exportParamName: "VirtualAddress"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: del_llist_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "del_llist_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - name: "virtual-address"
        in: "path"
        description: "Configure one or more virtual addresses for the\nVRRP group"
        required: true
        type: "string"
        x-exportParamName: "VirtualAddress"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/priority
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_priority\n\
        Specifies the sending VRRP interface's priority\nfor the virtual router. \
        \ Higher values equal higher\npriority"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_priority"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_priority"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_priority\n\
        Specifies the sending VRRP interface's priority\nfor the virtual router. \
        \ Higher values equal higher\npriority"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_priority"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_priority"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_priority\n\
        Specifies the sending VRRP interface's priority\nfor the virtual router. \
        \ Higher values equal higher\npriority"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_priority"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_priority\n\
        Specifies the sending VRRP interface's priority\nfor the virtual router. \
        \ Higher values equal higher\npriority"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_priority"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_priority"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/preempt
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt\n\
        When set to true, enables preemption by a higher\npriority backup router of\
        \ a lower priority master router"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt\n\
        When set to true, enables preemption by a higher\npriority backup router of\
        \ a lower priority master router"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt\n\
        When set to true, enables preemption by a higher\npriority backup router of\
        \ a lower priority master router"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt\n\
        When set to true, enables preemption by a higher\npriority backup router of\
        \ a lower priority master router"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/preempt-delay
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay\n\
        Set the delay the higher priority router waits\nbefore preempting"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay\n\
        Set the delay the higher priority router waits\nbefore preempting"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay\n\
        Set the delay the higher priority router waits\nbefore preempting"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay\n\
        Set the delay the higher priority router waits\nbefore preempting"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/accept-mode
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode\n\
        Configure whether packets destined for\nvirtual addresses are accepted even\
        \ when the virtual\naddress is not owned by the router interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode\n\
        Configure whether packets destined for\nvirtual addresses are accepted even\
        \ when the virtual\naddress is not owned by the router interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode\n\
        Configure whether packets destined for\nvirtual addresses are accepted even\
        \ when the virtual\naddress is not owned by the router interface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode\n\
        Configure whether packets destined for\nvirtual addresses are accepted even\
        \ when the virtual\naddress is not owned by the router interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/advertisement-interval
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval\n\
        Sets the interval between successive VRRP\nadvertisements -- RFC 5798 defines\
        \ this as a 12-bit\nvalue expressed as 0.1 seconds, with default 100, i.e.,\n\
        1 second.  Several implementation express this in units of\nseconds"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval\n\
        Sets the interval between successive VRRP\nadvertisements -- RFC 5798 defines\
        \ this as a 12-bit\nvalue expressed as 0.1 seconds, with default 100, i.e.,\n\
        1 second.  Several implementation express this in units of\nseconds"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval\n\
        Sets the interval between successive VRRP\nadvertisements -- RFC 5798 defines\
        \ this as a 12-bit\nvalue expressed as 0.1 seconds, with default 100, i.e.,\n\
        1 second.  Several implementation express this in units of\nseconds"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval\n\
        Sets the interval between successive VRRP\nadvertisements -- RFC 5798 defines\
        \ this as a 12-bit\nvalue expressed as 0.1 seconds, with default 100, i.e.,\n\
        1 second.  Several implementation express this in units of\nseconds"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state\n\
        Operational state data for the VRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/virtual-router-id
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_virtual_router_id\n\
        Set the virtual router id for use by the VRRP group.  This\nusually also determines\
        \ the virtual MAC address that is\ngenerated for the VRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_virtual_router_id"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_virtual_router_id"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/virtual-address
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_virtual_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_virtual_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/priority
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_priority\n\
        Specifies the sending VRRP interface's priority\nfor the virtual router. \
        \ Higher values equal higher\npriority"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_priority"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_priority"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/preempt
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_preempt\n\
        When set to true, enables preemption by a higher\npriority backup router of\
        \ a lower priority master router"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_preempt"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_preempt"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/preempt-delay
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_preempt_delay\n\
        Set the delay the higher priority router waits\nbefore preempting"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_preempt_delay"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_preempt_delay"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/accept-mode
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_accept_mode\n\
        Configure whether packets destined for\nvirtual addresses are accepted even\
        \ when the virtual\naddress is not owned by the router interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_accept_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_accept_mode"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/advertisement-interval
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_advertisement_interval\n\
        Sets the interval between successive VRRP\nadvertisements -- RFC 5798 defines\
        \ this as a 12-bit\nvalue expressed as 0.1 seconds, with default 100, i.e.,\n\
        1 second.  Several implementation express this in units of\nseconds"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_advertisement_interval"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_advertisement_interval"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/current-priority
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_current_priority\n\
        Operational value of the priority for the\ninterface in the VRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_current_priority"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_current_priority"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking\n\
        Top-level container for VRRP interface tracking"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config\n\
        Configuration data for VRRP interface tracking"
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking\n\
        Top-level container for VRRP interface tracking"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking\n\
        Top-level container for VRRP interface tracking"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking\n\
        Top-level container for VRRP interface tracking"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/config
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config\n\
        Configuration data for VRRP interface tracking"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config\n\
        Configuration data for VRRP interface tracking"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config\n\
        Configuration data for VRRP interface tracking"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config\n\
        Configuration data for VRRP interface tracking"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/config/track-interface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/config/track-interface={track-interface}
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_llist_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "get_llist_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - name: "track-interface"
        in: "path"
        description: "Sets a list of one or more interfaces that should\nbe tracked\
          \ for up/down events to dynamically change the\npriority state of the VRRP\
          \ group, and potentially\nchange the mastership if the tracked interface\
          \ going\ndown lowers the priority sufficiently.  Any of the tracked\ninterfaces\
          \ going down will cause the priority to be lowered.\nSome implementations\
          \ may only support a single\ntracked interface."
        required: true
        type: "string"
        x-exportParamName: "TrackInterface"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: del_llist_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "del_llist_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - name: "track-interface"
        in: "path"
        description: "Sets a list of one or more interfaces that should\nbe tracked\
          \ for up/down events to dynamically change the\npriority state of the VRRP\
          \ group, and potentially\nchange the mastership if the tracked interface\
          \ going\ndown lowers the priority sufficiently.  Any of the tracked\ninterfaces\
          \ going down will cause the priority to be lowered.\nSome implementations\
          \ may only support a single\ntracked interface."
        required: true
        type: "string"
        x-exportParamName: "TrackInterface"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/config/priority-decrement
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement\n\
        Set the value to subtract from priority when\nthe tracked interface goes down"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement\n\
        Set the value to subtract from priority when\nthe tracked interface goes down"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement\n\
        Set the value to subtract from priority when\nthe tracked interface goes down"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement\n\
        Set the value to subtract from priority when\nthe tracked interface goes down"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state\n\
        Operational state data for VRRP interface tracking"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/state/track-interface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state_track_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state_track_interface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/state/priority-decrement
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state_priority_decrement\n\
        Set the value to subtract from priority when\nthe tracked interface goes down"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state_priority_decrement"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state_priority_decrement"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/proxy-arp:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp\n\
        Configuration and operational state parameters\nrelating to proxy ARP. This\
        \ functionality allows a\nsystem to respond to ARP requests that are not\n\
        explicitly destined to the local system."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config\n\
        Configuration parameters for proxy ARP"
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp\n\
        Configuration and operational state parameters\nrelating to proxy ARP. This\
        \ functionality allows a\nsystem to respond to ARP requests that are not\n\
        explicitly destined to the local system."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp\n\
        Configuration and operational state parameters\nrelating to proxy ARP. This\
        \ functionality allows a\nsystem to respond to ARP requests that are not\n\
        explicitly destined to the local system."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp\n\
        Configuration and operational state parameters\nrelating to proxy ARP. This\
        \ functionality allows a\nsystem to respond to ARP requests that are not\n\
        explicitly destined to the local system."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/proxy-arp/config:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config\n\
        Configuration parameters for proxy ARP"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config_mode\n\
        When set to a value other than DISABLE, the local system should\nrespond to\
        \ ARP requests that are for target addresses other than\nthose that are configured\
        \ on the local subinterface using its own\nMAC address as the target hardware\
        \ address. If the REMOTE_ONLY\nvalue is specified, replies are only sent when\
        \ the target address\nfalls outside the locally configured subnets on the\
        \ interface,\nwhereas with the ALL value, all requests, regardless of their\n\
        target address are replied to."
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config_mode"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config\n\
        Configuration parameters for proxy ARP"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config\n\
        Configuration parameters for proxy ARP"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config\n\
        Configuration parameters for proxy ARP"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/proxy-arp/config/mode:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config_mode\n\
        When set to a value other than DISABLE, the local system should\nrespond to\
        \ ARP requests that are for target addresses other than\nthose that are configured\
        \ on the local subinterface using its own\nMAC address as the target hardware\
        \ address. If the REMOTE_ONLY\nvalue is specified, replies are only sent when\
        \ the target address\nfalls outside the locally configured subnets on the\
        \ interface,\nwhereas with the ALL value, all requests, regardless of their\n\
        target address are replied to."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config_mode"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config_mode\n\
        When set to a value other than DISABLE, the local system should\nrespond to\
        \ ARP requests that are for target addresses other than\nthose that are configured\
        \ on the local subinterface using its own\nMAC address as the target hardware\
        \ address. If the REMOTE_ONLY\nvalue is specified, replies are only sent when\
        \ the target address\nfalls outside the locally configured subnets on the\
        \ interface,\nwhereas with the ALL value, all requests, regardless of their\n\
        target address are replied to."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config_mode"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config_mode\n\
        When set to a value other than DISABLE, the local system should\nrespond to\
        \ ARP requests that are for target addresses other than\nthose that are configured\
        \ on the local subinterface using its own\nMAC address as the target hardware\
        \ address. If the REMOTE_ONLY\nvalue is specified, replies are only sent when\
        \ the target address\nfalls outside the locally configured subnets on the\
        \ interface,\nwhereas with the ALL value, all requests, regardless of their\n\
        target address are replied to."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config_mode\n\
        When set to a value other than DISABLE, the local system should\nrespond to\
        \ ARP requests that are for target addresses other than\nthose that are configured\
        \ on the local subinterface using its own\nMAC address as the target hardware\
        \ address. If the REMOTE_ONLY\nvalue is specified, replies are only sent when\
        \ the target address\nfalls outside the locally configured subnets on the\
        \ interface,\nwhereas with the ALL value, all requests, regardless of their\n\
        target address are replied to."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config_mode"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/proxy-arp/state:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_state\n\
        Operational state parameters for proxy ARP"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/proxy-arp/state/mode:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_state_mode\n\
        When set to a value other than DISABLE, the local system should\nrespond to\
        \ ARP requests that are for target addresses other than\nthose that are configured\
        \ on the local subinterface using its own\nMAC address as the target hardware\
        \ address. If the REMOTE_ONLY\nvalue is specified, replies are only sent when\
        \ the target address\nfalls outside the locally configured subnets on the\
        \ interface,\nwhereas with the ALL value, all requests, regardless of their\n\
        target address are replied to."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_state_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_state_mode"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/neighbors:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors\n\
        Enclosing container for neighbor list"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor\n\
        A list of mappings from IPv4 addresses to\nlink-layer addresses.\n\nEntries\
        \ in this list are used as static entries in the\nARP Cache."
      operationId: "post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors\n\
        Enclosing container for neighbor list"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors\n\
        Enclosing container for neighbor list"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors\n\
        Enclosing container for neighbor list"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/neighbors/neighbor={ip}:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor\n\
        A list of mappings from IPv4 addresses to\nlink-layer addresses.\n\nEntries\
        \ in this list are used as static entries in the\nARP Cache."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config\n\
        Configuration data for each configured IPv4\naddress on the interface"
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor\n\
        A list of mappings from IPv4 addresses to\nlink-layer addresses.\n\nEntries\
        \ in this list are used as static entries in the\nARP Cache."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor\n\
        A list of mappings from IPv4 addresses to\nlink-layer addresses.\n\nEntries\
        \ in this list are used as static entries in the\nARP Cache."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor\n\
        A list of mappings from IPv4 addresses to\nlink-layer addresses.\n\nEntries\
        \ in this list are used as static entries in the\nARP Cache."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/neighbors/neighbor:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor\n\
        A list of mappings from IPv4 addresses to\nlink-layer addresses.\n\nEntries\
        \ in this list are used as static entries in the\nARP Cache."
      operationId: "get_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor\n\
        A list of mappings from IPv4 addresses to\nlink-layer addresses.\n\nEntries\
        \ in this list are used as static entries in the\nARP Cache."
      operationId: "put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor\n\
        A list of mappings from IPv4 addresses to\nlink-layer addresses.\n\nEntries\
        \ in this list are used as static entries in the\nARP Cache."
      operationId: "delete_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor\n\
        A list of mappings from IPv4 addresses to\nlink-layer addresses.\n\nEntries\
        \ in this list are used as static entries in the\nARP Cache."
      operationId: "patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/neighbors/neighbor={ip}/config
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config\n\
        Configuration data for each configured IPv4\naddress on the interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config_link_layer_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config_link_layer_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config\n\
        Configuration data for each configured IPv4\naddress on the interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config\n\
        Configuration data for each configured IPv4\naddress on the interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/neighbors/neighbor={ip}/config/link-layer-address
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config_link_layer_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config_link_layer_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config_link_layer_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config_link_layer_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config_link_layer_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config_link_layer_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config_link_layer_address"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/neighbors/neighbor={ip}/state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_state\n\
        Operational state data for each IPv4 address\nconfigured on the interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/neighbors/neighbor={ip}/state/ip
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_state_ip\n\
        The IPv4 address of the neighbor node."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_state_ip"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_state_ip"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/neighbors/neighbor={ip}/state/link-layer-address
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_state_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_state_link_layer_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_state_link_layer_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/neighbors/neighbor={ip}/state/origin
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_state_origin\n\
        The origin of this neighbor entry, static or dynamic."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_state_origin"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_state_origin"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/unnumbered:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered\n\
        Top-level container for setting unnumbered interfaces.\nIncludes reference\
        \ the interface that provides the\naddress information"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config\n\
        Configuration data for unnumbered interface"
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered\n\
        Top-level container for setting unnumbered interfaces.\nIncludes reference\
        \ the interface that provides the\naddress information"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered\n\
        Top-level container for setting unnumbered interfaces.\nIncludes reference\
        \ the interface that provides the\naddress information"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered\n\
        Top-level container for setting unnumbered interfaces.\nIncludes reference\
        \ the interface that provides the\naddress information"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/unnumbered/config:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config\n\
        Configuration data for unnumbered interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config_enabled"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config\n\
        Configuration data for unnumbered interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config\n\
        Configuration data for unnumbered interface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config\n\
        Configuration data for unnumbered interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/unnumbered/config/enabled:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config_enabled"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config_enabled"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config_enabled"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/unnumbered/state:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_state\n\
        Operational state data for unnumbered interfaces"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/unnumbered/state/enabled:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_state_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_state_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_state_enabled"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/unnumbered/interface-ref:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref\n\
        Reference to an interface or subinterface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config\n\
        Configured reference to interface / subinterface"
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref\n\
        Reference to an interface or subinterface"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref\n\
        Reference to an interface or subinterface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref\n\
        Reference to an interface or subinterface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/unnumbered/interface-ref/config
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config\n\
        Configured reference to interface / subinterface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_interface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config\n\
        Configured reference to interface / subinterface"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config\n\
        Configured reference to interface / subinterface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config\n\
        Configured reference to interface / subinterface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/unnumbered/interface-ref/config/interface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_interface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_interface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_interface"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/unnumbered/interface-ref/config/subinterface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_subinterface\n\
        Reference to a subinterface -- this requires the base\ninterface to be specified\
        \ using the interface leaf in\nthis container.  If only a reference to a base\
        \ interface\nis requuired, this leaf should not be set."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_subinterface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_subinterface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_subinterface\n\
        Reference to a subinterface -- this requires the base\ninterface to be specified\
        \ using the interface leaf in\nthis container.  If only a reference to a base\
        \ interface\nis requuired, this leaf should not be set."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_subinterface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_subinterface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_subinterface\n\
        Reference to a subinterface -- this requires the base\ninterface to be specified\
        \ using the interface leaf in\nthis container.  If only a reference to a base\
        \ interface\nis requuired, this leaf should not be set."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_subinterface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_subinterface\n\
        Reference to a subinterface -- this requires the base\ninterface to be specified\
        \ using the interface leaf in\nthis container.  If only a reference to a base\
        \ interface\nis requuired, this leaf should not be set."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_subinterface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_subinterface"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/unnumbered/interface-ref/state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_state\n\
        Operational state for interface-ref"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/unnumbered/interface-ref/state/interface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_state_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_state_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_state_interface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/unnumbered/interface-ref/state/subinterface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_state_subinterface\n\
        Reference to a subinterface -- this requires the base\ninterface to be specified\
        \ using the interface leaf in\nthis container.  If only a reference to a base\
        \ interface\nis requuired, this leaf should not be set."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_state_subinterface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_state_subinterface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/config:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config\n\
        Top-level IPv4 configuration data for the interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_enabled\n\
        Controls whether IPv4 is enabled or disabled on this\ninterface.  When IPv4\
        \ is enabled, this interface is\nconnected to an IPv4 stack, and the interface\
        \ can send\nand receive IPv4 packets."
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_enabled"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config\n\
        Top-level IPv4 configuration data for the interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config\n\
        Top-level IPv4 configuration data for the interface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config\n\
        Top-level IPv4 configuration data for the interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/config/enabled:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_enabled\n\
        Controls whether IPv4 is enabled or disabled on this\ninterface.  When IPv4\
        \ is enabled, this interface is\nconnected to an IPv4 stack, and the interface\
        \ can send\nand receive IPv4 packets."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_enabled"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_enabled\n\
        Controls whether IPv4 is enabled or disabled on this\ninterface.  When IPv4\
        \ is enabled, this interface is\nconnected to an IPv4 stack, and the interface\
        \ can send\nand receive IPv4 packets."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_enabled"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_enabled\n\
        Controls whether IPv4 is enabled or disabled on this\ninterface.  When IPv4\
        \ is enabled, this interface is\nconnected to an IPv4 stack, and the interface\
        \ can send\nand receive IPv4 packets."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_enabled\n\
        Controls whether IPv4 is enabled or disabled on this\ninterface.  When IPv4\
        \ is enabled, this interface is\nconnected to an IPv4 stack, and the interface\
        \ can send\nand receive IPv4 packets."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_enabled"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/config/mtu:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_mtu\n\
        The size, in octets, of the largest IPv4 packet that the\ninterface will send\
        \ and receive.\n\nThe server may restrict the allowed values for this leaf,\n\
        depending on the interface's type.\n\nIf this leaf is not configured, the\
        \ operationally used MTU\ndepends on the interface's type."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_mtu"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_mtu"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_mtu\n\
        The size, in octets, of the largest IPv4 packet that the\ninterface will send\
        \ and receive.\n\nThe server may restrict the allowed values for this leaf,\n\
        depending on the interface's type.\n\nIf this leaf is not configured, the\
        \ operationally used MTU\ndepends on the interface's type."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_mtu"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_mtu"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_mtu\n\
        The size, in octets, of the largest IPv4 packet that the\ninterface will send\
        \ and receive.\n\nThe server may restrict the allowed values for this leaf,\n\
        depending on the interface's type.\n\nIf this leaf is not configured, the\
        \ operationally used MTU\ndepends on the interface's type."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_mtu"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_mtu\n\
        The size, in octets, of the largest IPv4 packet that the\ninterface will send\
        \ and receive.\n\nThe server may restrict the allowed values for this leaf,\n\
        depending on the interface's type.\n\nIf this leaf is not configured, the\
        \ operationally used MTU\ndepends on the interface's type."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_mtu"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_mtu"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/config/dhcp-client:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_dhcp_client\n\
        Enables a DHCP client on the interface in order to request\nan address"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_dhcp_client"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_dhcp_client"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_dhcp_client\n\
        Enables a DHCP client on the interface in order to request\nan address"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_dhcp_client"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_dhcp_client"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_dhcp_client\n\
        Enables a DHCP client on the interface in order to request\nan address"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_dhcp_client"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_dhcp_client\n\
        Enables a DHCP client on the interface in order to request\nan address"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_dhcp_client"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_dhcp_client"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/state:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state\n\
        Top level IPv4 operational state data"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/state/enabled:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_enabled\n\
        Controls whether IPv4 is enabled or disabled on this\ninterface.  When IPv4\
        \ is enabled, this interface is\nconnected to an IPv4 stack, and the interface\
        \ can send\nand receive IPv4 packets."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_enabled"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/state/mtu:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_mtu\n\
        The size, in octets, of the largest IPv4 packet that the\ninterface will send\
        \ and receive.\n\nThe server may restrict the allowed values for this leaf,\n\
        depending on the interface's type.\n\nIf this leaf is not configured, the\
        \ operationally used MTU\ndepends on the interface's type."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_mtu"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_mtu"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/state/dhcp-client:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_dhcp_client\n\
        Enables a DHCP client on the interface in order to request\nan address"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_dhcp_client"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_dhcp_client"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/state/counters:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters\n\
        Packet and byte counters for IP transmission and\nreception for the address\
        \ family."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/state/counters/in-pkts:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_pkts\n\
        The total number of IP packets received for the specified\naddress family,\
        \ including those received in error"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/state/counters/in-octets:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_octets\n\
        The total number of octets received in input IP packets\nfor the specified\
        \ address family, including those received\nin error."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_octets"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_octets"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/state/counters/in-error-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_error_pkts\n\
        Number of IP packets discarded due to errors for the\nspecified address family,\
        \ including errors in the IP\nheader, no route found to the IP destination,\
        \ invalid\naddress, unknown protocol, etc."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_error_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_error_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/state/counters/in-forwarded-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_forwarded_pkts\n\
        The number of input packets for which the device was not\ntheir final IP destination\
        \ and for which the device\nattempted to find a route to forward them to that\
        \ final\ndestination."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_forwarded_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_forwarded_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/state/counters/in-forwarded-octets
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_forwarded_octets\n\
        The number of octets received in input IP packets\nfor the specified address\
        \ family for which the device was\nnot their final IP destination and for\
        \ which the\ndevice attempted to find a route to forward them to that\nfinal\
        \ destination."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_forwarded_octets"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_forwarded_octets"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/state/counters/in-discarded-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_discarded_pkts\n\
        The number of input IP packets for the\nspecified address family, for which\
        \ no problems were\nencountered to prevent their continued processing, but\n\
        were discarded (e.g., for lack of buffer space)."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_discarded_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_discarded_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/state/counters/out-pkts:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_pkts\n\
        The total number of IP packets for the\nspecified address family that the\
        \ device supplied\nto the lower layers for transmission.  This includes\n\
        packets generated locally and those forwarded by the\ndevice."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/state/counters/out-octets:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_octets\n\
        The total number of octets in IP packets for the\nspecified address family\
        \ that the device\nsupplied to the lower layers for transmission.  This\n\
        includes packets generated locally and those forwarded by\nthe device."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_octets"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_octets"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/state/counters/out-error-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_error_pkts\n\
        Number of IP packets for the specified address family\nlocally generated and\
        \ discarded due to errors, including\nno route found to the IP destination."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_error_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_error_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/state/counters/out-forwarded-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_forwarded_pkts\n\
        The number of packets for which this entity was not their\nfinal IP destination\
        \ and for which it was successful in\nfinding a path to their final destination."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_forwarded_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_forwarded_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/state/counters/out-forwarded-octets
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_forwarded_octets\n\
        The number of octets in packets for which this entity was\nnot their final\
        \ IP destination and for which it was\nsuccessful in finding a path to their\
        \ final destination."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_forwarded_octets"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_forwarded_octets"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv4/state/counters/out-discarded-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_discarded_pkts\n\
        The number of output IP packets for the\nspecified address family for which\
        \ no problem was\nencountered to prevent their transmission to their\ndestination,\
        \ but were discarded (e.g., for lack of\nbuffer space)."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_discarded_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_discarded_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6\n\
        Parameters for the IPv6 address family."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses\n\
        Enclosing container for address list"
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6\n\
        Parameters for the IPv6 address family."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6\n\
        Parameters for the IPv6 address family."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6\n\
        Parameters for the IPv6 address family."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses\n\
        Enclosing container for address list"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address\n\
        The list of configured IPv6 addresses on the interface."
      operationId: "post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses\n\
        Enclosing container for address list"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses\n\
        Enclosing container for address list"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses\n\
        Enclosing container for address list"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address\n\
        The list of configured IPv6 addresses on the interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config\n\
        Configuration data for each IPv6 address on\nthe interface"
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address\n\
        The list of configured IPv6 addresses on the interface."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address\n\
        The list of configured IPv6 addresses on the interface."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address\n\
        The list of configured IPv6 addresses on the interface."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address\n\
        The list of configured IPv6 addresses on the interface."
      operationId: "get_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address\n\
        The list of configured IPv6 addresses on the interface."
      operationId: "put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address\n\
        The list of configured IPv6 addresses on the interface."
      operationId: "delete_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address\n\
        The list of configured IPv6 addresses on the interface."
      operationId: "patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/config
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config\n\
        Configuration data for each IPv6 address on\nthe interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config_prefix_length\n\
        The length of the subnet prefix."
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config_prefix_length"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config_prefix_length"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config\n\
        Configuration data for each IPv6 address on\nthe interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config\n\
        Configuration data for each IPv6 address on\nthe interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/config/prefix-length
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config_prefix_length\n\
        The length of the subnet prefix."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config_prefix_length"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config_prefix_length"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config_prefix_length\n\
        The length of the subnet prefix."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config_prefix_length"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config_prefix_length"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config_prefix_length\n\
        The length of the subnet prefix."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config_prefix_length"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config_prefix_length\n\
        The length of the subnet prefix."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config_prefix_length"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config_prefix_length"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_state\n\
        State data for each IPv6 address on the\ninterface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/state/ip
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_state_ip\n\
        The IPv6 address on the interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_state_ip"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_state_ip"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/state/prefix-length
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_state_prefix_length\n\
        The length of the subnet prefix."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_state_prefix_length"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_state_prefix_length"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/state/origin
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_state_origin\n\
        The origin of this address, e.g., static, dhcp, etc."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_state_origin"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_state_origin"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/state/status
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_state_status\n\
        The status of an address.  Most of the states correspond\nto states from the\
        \ IPv6 Stateless Address\nAutoconfiguration protocol."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_state_status"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_state_status"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp\n\
        Enclosing container for VRRP groups handled by this\nIP interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp\n\
        Enclosing container for VRRP groups handled by this\nIP interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp\n\
        Enclosing container for VRRP groups handled by this\nIP interface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp\n\
        Enclosing container for VRRP groups handled by this\nIP interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config\n\
        Configuration data for the VRRP group"
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "get_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "delete_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group\n\
        List of VRRP groups, keyed by virtual router id"
      operationId: "patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config\n\
        Configuration data for the VRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config\n\
        Configuration data for the VRRP group"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config\n\
        Configuration data for the VRRP group"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/virtual-address
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/virtual-address={virtual-address}
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_llist_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "get_llist_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - name: "virtual-address"
        in: "path"
        description: "Configure one or more virtual addresses for the\nVRRP group"
        required: true
        type: "string"
        x-exportParamName: "VirtualAddress"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: del_llist_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "del_llist_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - name: "virtual-address"
        in: "path"
        description: "Configure one or more virtual addresses for the\nVRRP group"
        required: true
        type: "string"
        x-exportParamName: "VirtualAddress"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/priority
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_priority\n\
        Specifies the sending VRRP interface's priority\nfor the virtual router. \
        \ Higher values equal higher\npriority"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_priority"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_priority"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_priority\n\
        Specifies the sending VRRP interface's priority\nfor the virtual router. \
        \ Higher values equal higher\npriority"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_priority"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_priority"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_priority\n\
        Specifies the sending VRRP interface's priority\nfor the virtual router. \
        \ Higher values equal higher\npriority"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_priority"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_priority\n\
        Specifies the sending VRRP interface's priority\nfor the virtual router. \
        \ Higher values equal higher\npriority"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_priority"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_priority"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/preempt
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt\n\
        When set to true, enables preemption by a higher\npriority backup router of\
        \ a lower priority master router"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt\n\
        When set to true, enables preemption by a higher\npriority backup router of\
        \ a lower priority master router"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt\n\
        When set to true, enables preemption by a higher\npriority backup router of\
        \ a lower priority master router"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt\n\
        When set to true, enables preemption by a higher\npriority backup router of\
        \ a lower priority master router"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/preempt-delay
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay\n\
        Set the delay the higher priority router waits\nbefore preempting"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay\n\
        Set the delay the higher priority router waits\nbefore preempting"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay\n\
        Set the delay the higher priority router waits\nbefore preempting"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay\n\
        Set the delay the higher priority router waits\nbefore preempting"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/accept-mode
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode\n\
        Configure whether packets destined for\nvirtual addresses are accepted even\
        \ when the virtual\naddress is not owned by the router interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode\n\
        Configure whether packets destined for\nvirtual addresses are accepted even\
        \ when the virtual\naddress is not owned by the router interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode\n\
        Configure whether packets destined for\nvirtual addresses are accepted even\
        \ when the virtual\naddress is not owned by the router interface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode\n\
        Configure whether packets destined for\nvirtual addresses are accepted even\
        \ when the virtual\naddress is not owned by the router interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/advertisement-interval
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval\n\
        Sets the interval between successive VRRP\nadvertisements -- RFC 5798 defines\
        \ this as a 12-bit\nvalue expressed as 0.1 seconds, with default 100, i.e.,\n\
        1 second.  Several implementation express this in units of\nseconds"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval\n\
        Sets the interval between successive VRRP\nadvertisements -- RFC 5798 defines\
        \ this as a 12-bit\nvalue expressed as 0.1 seconds, with default 100, i.e.,\n\
        1 second.  Several implementation express this in units of\nseconds"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval\n\
        Sets the interval between successive VRRP\nadvertisements -- RFC 5798 defines\
        \ this as a 12-bit\nvalue expressed as 0.1 seconds, with default 100, i.e.,\n\
        1 second.  Several implementation express this in units of\nseconds"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval\n\
        Sets the interval between successive VRRP\nadvertisements -- RFC 5798 defines\
        \ this as a 12-bit\nvalue expressed as 0.1 seconds, with default 100, i.e.,\n\
        1 second.  Several implementation express this in units of\nseconds"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/config/virtual-link-local
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local\n\
        For VRRP on IPv6 interfaces, sets the virtual link local\naddress"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local\n\
        For VRRP on IPv6 interfaces, sets the virtual link local\naddress"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local\n\
        For VRRP on IPv6 interfaces, sets the virtual link local\naddress"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local\n\
        For VRRP on IPv6 interfaces, sets the virtual link local\naddress"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state\n\
        Operational state data for the VRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/virtual-router-id
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_router_id\n\
        Set the virtual router id for use by the VRRP group.  This\nusually also determines\
        \ the virtual MAC address that is\ngenerated for the VRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_router_id"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_router_id"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/virtual-address
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_address\n\
        Configure one or more virtual addresses for the\nVRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/priority
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_priority\n\
        Specifies the sending VRRP interface's priority\nfor the virtual router. \
        \ Higher values equal higher\npriority"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_priority"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_priority"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/preempt
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_preempt\n\
        When set to true, enables preemption by a higher\npriority backup router of\
        \ a lower priority master router"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_preempt"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_preempt"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/preempt-delay
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_preempt_delay\n\
        Set the delay the higher priority router waits\nbefore preempting"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_preempt_delay"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_preempt_delay"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/accept-mode
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_accept_mode\n\
        Configure whether packets destined for\nvirtual addresses are accepted even\
        \ when the virtual\naddress is not owned by the router interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_accept_mode"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_accept_mode"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/advertisement-interval
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_advertisement_interval\n\
        Sets the interval between successive VRRP\nadvertisements -- RFC 5798 defines\
        \ this as a 12-bit\nvalue expressed as 0.1 seconds, with default 100, i.e.,\n\
        1 second.  Several implementation express this in units of\nseconds"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_advertisement_interval"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_advertisement_interval"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/current-priority
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_current_priority\n\
        Operational value of the priority for the\ninterface in the VRRP group"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_current_priority"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_current_priority"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/state/virtual-link-local
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_link_local\n\
        For VRRP on IPv6 interfaces, sets the virtual link local\naddress"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_link_local"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_link_local"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking\n\
        Top-level container for VRRP interface tracking"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config\n\
        Configuration data for VRRP interface tracking"
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking\n\
        Top-level container for VRRP interface tracking"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking\n\
        Top-level container for VRRP interface tracking"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking\n\
        Top-level container for VRRP interface tracking"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/config
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config\n\
        Configuration data for VRRP interface tracking"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config\n\
        Configuration data for VRRP interface tracking"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config\n\
        Configuration data for VRRP interface tracking"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config\n\
        Configuration data for VRRP interface tracking"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/config/track-interface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/config/track-interface={track-interface}
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_llist_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "get_llist_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - name: "track-interface"
        in: "path"
        description: "Sets a list of one or more interfaces that should\nbe tracked\
          \ for up/down events to dynamically change the\npriority state of the VRRP\
          \ group, and potentially\nchange the mastership if the tracked interface\
          \ going\ndown lowers the priority sufficiently.  Any of the tracked\ninterfaces\
          \ going down will cause the priority to be lowered.\nSome implementations\
          \ may only support a single\ntracked interface."
        required: true
        type: "string"
        x-exportParamName: "TrackInterface"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: del_llist_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "del_llist_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - name: "track-interface"
        in: "path"
        description: "Sets a list of one or more interfaces that should\nbe tracked\
          \ for up/down events to dynamically change the\npriority state of the VRRP\
          \ group, and potentially\nchange the mastership if the tracked interface\
          \ going\ndown lowers the priority sufficiently.  Any of the tracked\ninterfaces\
          \ going down will cause the priority to be lowered.\nSome implementations\
          \ may only support a single\ntracked interface."
        required: true
        type: "string"
        x-exportParamName: "TrackInterface"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/config/priority-decrement
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement\n\
        Set the value to subtract from priority when\nthe tracked interface goes down"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement\n\
        Set the value to subtract from priority when\nthe tracked interface goes down"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement\n\
        Set the value to subtract from priority when\nthe tracked interface goes down"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement\n\
        Set the value to subtract from priority when\nthe tracked interface goes down"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state\n\
        Operational state data for VRRP interface tracking"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/state/track-interface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state_track_interface\n\
        Sets a list of one or more interfaces that should\nbe tracked for up/down\
        \ events to dynamically change the\npriority state of the VRRP group, and\
        \ potentially\nchange the mastership if the tracked interface going\ndown\
        \ lowers the priority sufficiently.  Any of the tracked\ninterfaces going\
        \ down will cause the priority to be lowered.\nSome implementations may only\
        \ support a single\ntracked interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state_track_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state_track_interface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/addresses/address={ip}/vrrp/vrrp-group={virtual-router-id}/interface-tracking/state/priority-decrement
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state_priority_decrement\n\
        Set the value to subtract from priority when\nthe tracked interface goes down"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state_priority_decrement"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - name: "virtual-router-id"
        in: "path"
        description: "References the configured virtual router id for this\nVRRP group"
        required: true
        type: "integer"
        x-exportParamName: "VirtualRouterId"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state_priority_decrement"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/router-advertisement:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement\n\
        Configuration and operational state parameters relating to\nrouter advertisements."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config\n\
        Configuration parameters relating to router advertisements\nfor IPv6."
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement\n\
        Configuration and operational state parameters relating to\nrouter advertisements."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement\n\
        Configuration and operational state parameters relating to\nrouter advertisements."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement\n\
        Configuration and operational state parameters relating to\nrouter advertisements."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/router-advertisement/config
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config\n\
        Configuration parameters relating to router advertisements\nfor IPv6."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_interval\n\
        The interval between periodic router advertisement neighbor\ndiscovery messages\
        \ sent on this interface expressed in\nseconds."
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_interval"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_interval"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config\n\
        Configuration parameters relating to router advertisements\nfor IPv6."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config\n\
        Configuration parameters relating to router advertisements\nfor IPv6."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config\n\
        Configuration parameters relating to router advertisements\nfor IPv6."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/router-advertisement/config/interval
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_interval\n\
        The interval between periodic router advertisement neighbor\ndiscovery messages\
        \ sent on this interface expressed in\nseconds."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_interval"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_interval"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_interval\n\
        The interval between periodic router advertisement neighbor\ndiscovery messages\
        \ sent on this interface expressed in\nseconds."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_interval"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_interval"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_interval\n\
        The interval between periodic router advertisement neighbor\ndiscovery messages\
        \ sent on this interface expressed in\nseconds."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_interval"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_interval\n\
        The interval between periodic router advertisement neighbor\ndiscovery messages\
        \ sent on this interface expressed in\nseconds."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_interval"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_interval"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/router-advertisement/config/lifetime
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_lifetime\n\
        The lifetime advertised in the router advertisement neighbor\ndiscovery message\
        \ on this interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_lifetime"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_lifetime"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_lifetime\n\
        The lifetime advertised in the router advertisement neighbor\ndiscovery message\
        \ on this interface."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_lifetime"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_lifetime"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_lifetime\n\
        The lifetime advertised in the router advertisement neighbor\ndiscovery message\
        \ on this interface."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_lifetime"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_lifetime\n\
        The lifetime advertised in the router advertisement neighbor\ndiscovery message\
        \ on this interface."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_lifetime"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_lifetime"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/router-advertisement/config/suppress
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_suppress\n\
        When set to true, router advertisement neighbor discovery\nmessages are not\
        \ transmitted on this interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_suppress"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_suppress"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_suppress\n\
        When set to true, router advertisement neighbor discovery\nmessages are not\
        \ transmitted on this interface."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_suppress"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_suppress"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_suppress\n\
        When set to true, router advertisement neighbor discovery\nmessages are not\
        \ transmitted on this interface."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_suppress"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_suppress\n\
        When set to true, router advertisement neighbor discovery\nmessages are not\
        \ transmitted on this interface."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_suppress"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_suppress"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/router-advertisement/state:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_state\n\
        Operational state parameters relating to router\nadvertisements for IPv6."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/router-advertisement/state/interval
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_state_interval\n\
        The interval between periodic router advertisement neighbor\ndiscovery messages\
        \ sent on this interface expressed in\nseconds."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_state_interval"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_state_interval"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/router-advertisement/state/lifetime
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_state_lifetime\n\
        The lifetime advertised in the router advertisement neighbor\ndiscovery message\
        \ on this interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_state_lifetime"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_state_lifetime"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/router-advertisement/state/suppress
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_state_suppress\n\
        When set to true, router advertisement neighbor discovery\nmessages are not\
        \ transmitted on this interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_state_suppress"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_state_suppress"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/neighbors:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors\n\
        Enclosing container for list of IPv6 neighbors"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor\n\
        List of IPv6 neighbors"
      operationId: "post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors\n\
        Enclosing container for list of IPv6 neighbors"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors\n\
        Enclosing container for list of IPv6 neighbors"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors\n\
        Enclosing container for list of IPv6 neighbors"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/neighbors/neighbor={ip}:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor\n\
        List of IPv6 neighbors"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config\n\
        Configuration data for each IPv6 address on\nthe interface"
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor\n\
        List of IPv6 neighbors"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor\n\
        List of IPv6 neighbors"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor\n\
        List of IPv6 neighbors"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/neighbors/neighbor:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor\n\
        List of IPv6 neighbors"
      operationId: "get_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor\n\
        List of IPv6 neighbors"
      operationId: "put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor\n\
        List of IPv6 neighbors"
      operationId: "delete_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor\n\
        List of IPv6 neighbors"
      operationId: "patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/neighbors/neighbor={ip}/config
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config\n\
        Configuration data for each IPv6 address on\nthe interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config_link_layer_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config_link_layer_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config\n\
        Configuration data for each IPv6 address on\nthe interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config\n\
        Configuration data for each IPv6 address on\nthe interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/neighbors/neighbor={ip}/config/link-layer-address
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config_link_layer_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config_link_layer_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config_link_layer_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config_link_layer_address"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config_link_layer_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config_link_layer_address"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config_link_layer_address"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/neighbors/neighbor={ip}/state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state\n\
        State data for each IPv6 address on the\ninterface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/neighbors/neighbor={ip}/state/ip
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state_ip\n\
        The IPv6 address of the neighbor node."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state_ip"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state_ip"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/neighbors/neighbor={ip}/state/link-layer-address
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state_link_layer_address\n\
        The link-layer address of the neighbor node."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state_link_layer_address"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state_link_layer_address"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/neighbors/neighbor={ip}/state/origin
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state_origin\n\
        The origin of this neighbor entry."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state_origin"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state_origin"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/neighbors/neighbor={ip}/state/is-router
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state_is_router\n\
        Indicates that the neighbor node acts as a router."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state_is_router"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state_is_router"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/neighbors/neighbor={ip}/state/neighbor-state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state_neighbor_state\n\
        The Neighbor Unreachability Detection state of this\nentry."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state_neighbor_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "ip"
        in: "path"
        description: "References the configured IP neighbor address"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state_neighbor_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/unnumbered:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered\n\
        Top-level container for setting unnumbered interfaces.\nIncludes reference\
        \ the interface that provides the\naddress information"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config\n\
        Configuration data for unnumbered interface"
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered\n\
        Top-level container for setting unnumbered interfaces.\nIncludes reference\
        \ the interface that provides the\naddress information"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered\n\
        Top-level container for setting unnumbered interfaces.\nIncludes reference\
        \ the interface that provides the\naddress information"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered\n\
        Top-level container for setting unnumbered interfaces.\nIncludes reference\
        \ the interface that provides the\naddress information"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/unnumbered/config:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config\n\
        Configuration data for unnumbered interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config_enabled"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config\n\
        Configuration data for unnumbered interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config\n\
        Configuration data for unnumbered interface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config\n\
        Configuration data for unnumbered interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/unnumbered/config/enabled:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config_enabled"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config_enabled"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config_enabled"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/unnumbered/state:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_state\n\
        Operational state data for unnumbered interfaces"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/unnumbered/state/enabled:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_state_enabled\n\
        Indicates that the subinterface is unnumbered.  By default\nthe subinterface\
        \ is numbered, i.e., expected to have an\nIP address configuration."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_state_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_state_enabled"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/unnumbered/interface-ref:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref\n\
        Reference to an interface or subinterface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config\n\
        Configured reference to interface / subinterface"
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref\n\
        Reference to an interface or subinterface"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref\n\
        Reference to an interface or subinterface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref\n\
        Reference to an interface or subinterface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/unnumbered/interface-ref/config
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config\n\
        Configured reference to interface / subinterface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_interface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config\n\
        Configured reference to interface / subinterface"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config\n\
        Configured reference to interface / subinterface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config\n\
        Configured reference to interface / subinterface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/unnumbered/interface-ref/config/interface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_interface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_interface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_interface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_interface"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/unnumbered/interface-ref/config/subinterface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_subinterface\n\
        Reference to a subinterface -- this requires the base\ninterface to be specified\
        \ using the interface leaf in\nthis container.  If only a reference to a base\
        \ interface\nis requuired, this leaf should not be set."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_subinterface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_subinterface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_subinterface\n\
        Reference to a subinterface -- this requires the base\ninterface to be specified\
        \ using the interface leaf in\nthis container.  If only a reference to a base\
        \ interface\nis requuired, this leaf should not be set."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_subinterface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_subinterface"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_subinterface\n\
        Reference to a subinterface -- this requires the base\ninterface to be specified\
        \ using the interface leaf in\nthis container.  If only a reference to a base\
        \ interface\nis requuired, this leaf should not be set."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_subinterface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_subinterface\n\
        Reference to a subinterface -- this requires the base\ninterface to be specified\
        \ using the interface leaf in\nthis container.  If only a reference to a base\
        \ interface\nis requuired, this leaf should not be set."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_subinterface"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_subinterface"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/unnumbered/interface-ref/state
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_state\n\
        Operational state for interface-ref"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/unnumbered/interface-ref/state/interface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_state_interface\n\
        Reference to a base interface.  If a reference to a\nsubinterface is required,\
        \ this leaf must be specified\nto indicate the base interface."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_state_interface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_state_interface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/unnumbered/interface-ref/state/subinterface
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_state_subinterface\n\
        Reference to a subinterface -- this requires the base\ninterface to be specified\
        \ using the interface leaf in\nthis container.  If only a reference to a base\
        \ interface\nis requuired, this leaf should not be set."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_state_subinterface"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_state_subinterface"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/config:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config\n\
        Top-level config data for the IPv6 interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_enabled\n\
        Controls whether IPv6 is enabled or disabled on this\ninterface.  When IPv6\
        \ is enabled, this interface is\nconnected to an IPv6 stack, and the interface\
        \ can send\nand receive IPv6 packets."
      operationId: "post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_enabled"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config\n\
        Top-level config data for the IPv6 interface"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config\n\
        Top-level config data for the IPv6 interface"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config\n\
        Top-level config data for the IPv6 interface"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/config/enabled:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_enabled\n\
        Controls whether IPv6 is enabled or disabled on this\ninterface.  When IPv6\
        \ is enabled, this interface is\nconnected to an IPv6 stack, and the interface\
        \ can send\nand receive IPv6 packets."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_enabled"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_enabled\n\
        Controls whether IPv6 is enabled or disabled on this\ninterface.  When IPv6\
        \ is enabled, this interface is\nconnected to an IPv6 stack, and the interface\
        \ can send\nand receive IPv6 packets."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_enabled"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_enabled\n\
        Controls whether IPv6 is enabled or disabled on this\ninterface.  When IPv6\
        \ is enabled, this interface is\nconnected to an IPv6 stack, and the interface\
        \ can send\nand receive IPv6 packets."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_enabled\n\
        Controls whether IPv6 is enabled or disabled on this\ninterface.  When IPv6\
        \ is enabled, this interface is\nconnected to an IPv6 stack, and the interface\
        \ can send\nand receive IPv6 packets."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_enabled"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_enabled"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/config/mtu:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_mtu\n\
        The size, in octets, of the largest IPv6 packet that the\ninterface will send\
        \ and receive.\n\nThe server may restrict the allowed values for this leaf,\n\
        depending on the interface's type.\n\nIf this leaf is not configured, the\
        \ operationally used MTU\ndepends on the interface's type."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_mtu"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_mtu"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_mtu\n\
        The size, in octets, of the largest IPv6 packet that the\ninterface will send\
        \ and receive.\n\nThe server may restrict the allowed values for this leaf,\n\
        depending on the interface's type.\n\nIf this leaf is not configured, the\
        \ operationally used MTU\ndepends on the interface's type."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_mtu"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_mtu"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_mtu\n\
        The size, in octets, of the largest IPv6 packet that the\ninterface will send\
        \ and receive.\n\nThe server may restrict the allowed values for this leaf,\n\
        depending on the interface's type.\n\nIf this leaf is not configured, the\
        \ operationally used MTU\ndepends on the interface's type."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_mtu"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_mtu\n\
        The size, in octets, of the largest IPv6 packet that the\ninterface will send\
        \ and receive.\n\nThe server may restrict the allowed values for this leaf,\n\
        depending on the interface's type.\n\nIf this leaf is not configured, the\
        \ operationally used MTU\ndepends on the interface's type."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_mtu"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_mtu"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/config/dup-addr-detect-transmits
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dup_addr_detect_transmits\n\
        The number of consecutive Neighbor Solicitation messages\nsent while performing\
        \ Duplicate Address Detection on a\ntentative address.  A value of zero indicates\
        \ that\nDuplicate Address Detection is not performed on\ntentative addresses.\
        \  A value of one indicates a single\ntransmission with no follow-up retransmissions."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dup_addr_detect_transmits"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dup_addr_detect_transmits"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dup_addr_detect_transmits\n\
        The number of consecutive Neighbor Solicitation messages\nsent while performing\
        \ Duplicate Address Detection on a\ntentative address.  A value of zero indicates\
        \ that\nDuplicate Address Detection is not performed on\ntentative addresses.\
        \  A value of one indicates a single\ntransmission with no follow-up retransmissions."
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dup_addr_detect_transmits"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dup_addr_detect_transmits"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dup_addr_detect_transmits\n\
        The number of consecutive Neighbor Solicitation messages\nsent while performing\
        \ Duplicate Address Detection on a\ntentative address.  A value of zero indicates\
        \ that\nDuplicate Address Detection is not performed on\ntentative addresses.\
        \  A value of one indicates a single\ntransmission with no follow-up retransmissions."
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dup_addr_detect_transmits"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dup_addr_detect_transmits\n\
        The number of consecutive Neighbor Solicitation messages\nsent while performing\
        \ Duplicate Address Detection on a\ntentative address.  A value of zero indicates\
        \ that\nDuplicate Address Detection is not performed on\ntentative addresses.\
        \  A value of one indicates a single\ntransmission with no follow-up retransmissions."
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dup_addr_detect_transmits"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dup_addr_detect_transmits"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/config/dhcp-client:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dhcp_client\n\
        Enables a DHCP client on the interface in order to request\nan address"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dhcp_client"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dhcp_client"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    put:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dhcp_client\n\
        Enables a DHCP client on the interface in order to request\nan address"
      operationId: "put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dhcp_client"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dhcp_client"
        x-exportParamName: "Body"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dhcp_client\n\
        Enables a DHCP client on the interface in order to request\nan address"
      operationId: "delete_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dhcp_client"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
    patch:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dhcp_client\n\
        Enables a DHCP client on the interface in order to request\nan address"
      operationId: "patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dhcp_client"
      consumes:
      - "application/yang-data+json"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dhcp_client"
        x-exportParamName: "Body"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        409:
          description: "Conflict"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/state:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state\n\
        Top-level operational state data for the IPv6 interface"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/state/enabled:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_enabled\n\
        Controls whether IPv6 is enabled or disabled on this\ninterface.  When IPv6\
        \ is enabled, this interface is\nconnected to an IPv6 stack, and the interface\
        \ can send\nand receive IPv6 packets."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_enabled"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_enabled"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/state/mtu:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_mtu\n\
        The size, in octets, of the largest IPv6 packet that the\ninterface will send\
        \ and receive.\n\nThe server may restrict the allowed values for this leaf,\n\
        depending on the interface's type.\n\nIf this leaf is not configured, the\
        \ operationally used MTU\ndepends on the interface's type."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_mtu"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_mtu"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/state/dup-addr-detect-transmits
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_dup_addr_detect_transmits\n\
        The number of consecutive Neighbor Solicitation messages\nsent while performing\
        \ Duplicate Address Detection on a\ntentative address.  A value of zero indicates\
        \ that\nDuplicate Address Detection is not performed on\ntentative addresses.\
        \  A value of one indicates a single\ntransmission with no follow-up retransmissions."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_dup_addr_detect_transmits"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_dup_addr_detect_transmits"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/state/dhcp-client:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_dhcp_client\n\
        Enables a DHCP client on the interface in order to request\nan address"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_dhcp_client"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_dhcp_client"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/state/counters:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters\n\
        Packet and byte counters for IP transmission and\nreception for the address\
        \ family."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/state/counters/in-pkts:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_pkts\n\
        The total number of IP packets received for the specified\naddress family,\
        \ including those received in error"
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/state/counters/in-octets:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_octets\n\
        The total number of octets received in input IP packets\nfor the specified\
        \ address family, including those received\nin error."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_octets"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_octets"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/state/counters/in-error-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_error_pkts\n\
        Number of IP packets discarded due to errors for the\nspecified address family,\
        \ including errors in the IP\nheader, no route found to the IP destination,\
        \ invalid\naddress, unknown protocol, etc."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_error_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_error_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/state/counters/in-forwarded-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_forwarded_pkts\n\
        The number of input packets for which the device was not\ntheir final IP destination\
        \ and for which the device\nattempted to find a route to forward them to that\
        \ final\ndestination."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_forwarded_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_forwarded_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/state/counters/in-forwarded-octets
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_forwarded_octets\n\
        The number of octets received in input IP packets\nfor the specified address\
        \ family for which the device was\nnot their final IP destination and for\
        \ which the\ndevice attempted to find a route to forward them to that\nfinal\
        \ destination."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_forwarded_octets"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_forwarded_octets"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/state/counters/in-discarded-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_discarded_pkts\n\
        The number of input IP packets for the\nspecified address family, for which\
        \ no problems were\nencountered to prevent their continued processing, but\n\
        were discarded (e.g., for lack of buffer space)."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_discarded_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_discarded_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/state/counters/out-pkts:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_pkts\n\
        The total number of IP packets for the\nspecified address family that the\
        \ device supplied\nto the lower layers for transmission.  This includes\n\
        packets generated locally and those forwarded by the\ndevice."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/state/counters/out-octets:
    get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_octets\n\
        The total number of octets in IP packets for the\nspecified address family\
        \ that the device\nsupplied to the lower layers for transmission.  This\n\
        includes packets generated locally and those forwarded by\nthe device."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_octets"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_octets"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/state/counters/out-error-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_error_pkts\n\
        Number of IP packets for the specified address family\nlocally generated and\
        \ discarded due to errors, including\nno route found to the IP destination."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_error_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_error_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/state/counters/out-forwarded-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_forwarded_pkts\n\
        The number of packets for which this entity was not their\nfinal IP destination\
        \ and for which it was successful in\nfinding a path to their final destination."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_forwarded_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_forwarded_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/state/counters/out-forwarded-octets
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_forwarded_octets\n\
        The number of octets in packets for which this entity was\nnot their final\
        \ IP destination and for which it was\nsuccessful in finding a path to their\
        \ final destination."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_forwarded_octets"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_forwarded_octets"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
  ? /openconfig-interfaces:interfaces/interface={name}/openconfig-vlan:routed-vlan/openconfig-if-ip:ipv6/state/counters/out-discarded-pkts
  : get:
      tags:
      - "openconfig-interfaces"
      description: "OperationId: get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_discarded_pkts\n\
        The number of output IP packets for the\nspecified address family for which\
        \ no problem was\nencountered to prevent their transmission to their\ndestination,\
        \ but were discarded (e.g., for lack of\nbuffer space)."
      operationId: "get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_discarded_pkts"
      produces:
      - "application/yang-data+json"
      parameters:
      - name: "name"
        in: "path"
        description: "References the configured name of the interface"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_discarded_pkts"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        404:
          description: "Not Found"
        405:
          description: "Method Not Allowed"
        415:
          description: "Unsupported Media Type"
        500:
          description: "Internal Server Error"
definitions:
  openconfig_interfaces_interfaces:
    type: "object"
    properties:
      openconfig-interfaces:interfaces:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces"
  post_openconfig_interfaces_interfaces:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces"
  put_openconfig_interfaces_interfaces:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces"
  patch_openconfig_interfaces_interfaces:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces"
  get_openconfig_interfaces_interfaces:
    type: "object"
    properties:
      openconfig-interfaces:interfaces:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces"
  openconfig_interfaces_interfaces_interface:
    type: "object"
    properties:
      openconfig-interfaces:interface:
        type: "array"
        items:
          $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_interface"
  put_openconfig_interfaces_interfaces_interface:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface"
  patch_openconfig_interfaces_interfaces_interface:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface"
  get_openconfig_interfaces_interfaces_interface:
    type: "object"
    properties:
      openconfig-interfaces:interface:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_interface"
  post_list_openconfig_interfaces_interfaces_interface:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface"
  put_list_openconfig_interfaces_interfaces_interface:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface"
  patch_list_openconfig_interfaces_interfaces_interface:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface"
  openconfig_interfaces_interfaces_interface_config:
    type: "object"
    properties:
      openconfig-interfaces:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_config"
  post_openconfig_interfaces_interfaces_interface_config:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_config"
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_hold_time"
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_subinterfaces"
    - $ref: "#/definitions/openconfig_if_ethernet_interfaces_interface_ethernet"
    - $ref: "#/definitions/openconfig_if_aggregate_interfaces_interface_aggregation"
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_routed_vlan"
  put_openconfig_interfaces_interfaces_interface_config:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_config"
  patch_openconfig_interfaces_interfaces_interface_config:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_config"
  get_openconfig_interfaces_interfaces_interface_config:
    type: "object"
    properties:
      openconfig-interfaces:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_config"
  openconfig_interfaces_interfaces_interface_config_type:
    type: "object"
    properties:
      openconfig-interfaces:type:
        type: "string"
  post_openconfig_interfaces_interfaces_interface_config_type:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_config_type"
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_config_mtu"
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_config_loopback_mode"
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_config_description"
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_config_enabled"
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_config_tpid"
  put_openconfig_interfaces_interfaces_interface_config_type:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_config_type"
  patch_openconfig_interfaces_interfaces_interface_config_type:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_config_type"
  get_openconfig_interfaces_interfaces_interface_config_type:
    type: "object"
    properties:
      openconfig-interfaces:type:
        type: "string"
  openconfig_interfaces_interfaces_interface_config_mtu:
    type: "object"
    properties:
      openconfig-interfaces:mtu:
        type: "integer"
        format: "int32"
  put_openconfig_interfaces_interfaces_interface_config_mtu:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_config_mtu"
  patch_openconfig_interfaces_interfaces_interface_config_mtu:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_config_mtu"
  get_openconfig_interfaces_interfaces_interface_config_mtu:
    type: "object"
    properties:
      openconfig-interfaces:mtu:
        type: "integer"
        format: "int32"
  openconfig_interfaces_interfaces_interface_config_loopback_mode:
    type: "object"
    properties:
      openconfig-interfaces:loopback-mode:
        type: "boolean"
        format: "boolean"
  put_openconfig_interfaces_interfaces_interface_config_loopback_mode:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_config_loopback_mode"
  patch_openconfig_interfaces_interfaces_interface_config_loopback_mode:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_config_loopback_mode"
  get_openconfig_interfaces_interfaces_interface_config_loopback_mode:
    type: "object"
    properties:
      openconfig-interfaces:loopback-mode:
        type: "boolean"
        format: "boolean"
  openconfig_interfaces_interfaces_interface_config_description:
    type: "object"
    properties:
      openconfig-interfaces:description:
        type: "string"
  put_openconfig_interfaces_interfaces_interface_config_description:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_config_description"
  patch_openconfig_interfaces_interfaces_interface_config_description:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_config_description"
  get_openconfig_interfaces_interfaces_interface_config_description:
    type: "object"
    properties:
      openconfig-interfaces:description:
        type: "string"
  openconfig_interfaces_interfaces_interface_config_enabled:
    type: "object"
    properties:
      openconfig-interfaces:enabled:
        type: "boolean"
        format: "boolean"
  put_openconfig_interfaces_interfaces_interface_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_config_enabled"
  patch_openconfig_interfaces_interfaces_interface_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_config_enabled"
  get_openconfig_interfaces_interfaces_interface_config_enabled:
    type: "object"
    properties:
      openconfig-interfaces:enabled:
        type: "boolean"
        format: "boolean"
  openconfig_vlan_interfaces_interface_config_tpid:
    type: "object"
    properties:
      openconfig-vlan:tpid:
        type: "string"
  put_openconfig_vlan_interfaces_interface_config_tpid:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_config_tpid"
  patch_openconfig_vlan_interfaces_interface_config_tpid:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_config_tpid"
  get_openconfig_vlan_interfaces_interface_config_tpid:
    type: "object"
    properties:
      openconfig-vlan:tpid:
        type: "string"
  get_openconfig_interfaces_interfaces_interface_state:
    type: "object"
    properties:
      openconfig-interfaces:state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_state_openconfiginterfacesstate"
  get_openconfig_interfaces_interfaces_interface_state_name:
    type: "object"
    properties:
      openconfig-interfaces:name:
        type: "string"
  get_openconfig_interfaces_interfaces_interface_state_type:
    type: "object"
    properties:
      openconfig-interfaces:type:
        type: "string"
  get_openconfig_interfaces_interfaces_interface_state_mtu:
    type: "object"
    properties:
      openconfig-interfaces:mtu:
        type: "integer"
        format: "int32"
  get_openconfig_interfaces_interfaces_interface_state_loopback_mode:
    type: "object"
    properties:
      openconfig-interfaces:loopback-mode:
        type: "boolean"
        format: "boolean"
  get_openconfig_interfaces_interfaces_interface_state_description:
    type: "object"
    properties:
      openconfig-interfaces:description:
        type: "string"
  get_openconfig_interfaces_interfaces_interface_state_enabled:
    type: "object"
    properties:
      openconfig-interfaces:enabled:
        type: "boolean"
        format: "boolean"
  get_openconfig_interfaces_interfaces_interface_state_ifindex:
    type: "object"
    properties:
      openconfig-interfaces:ifindex:
        type: "integer"
        format: "int32"
  get_openconfig_interfaces_interfaces_interface_state_admin_status:
    type: "object"
    properties:
      openconfig-interfaces:admin-status:
        type: "string"
        enum:
        - "UP"
        - "DOWN"
        - "TESTING"
  get_openconfig_interfaces_interfaces_interface_state_oper_status:
    type: "object"
    properties:
      openconfig-interfaces:oper-status:
        type: "string"
        enum:
        - "UP"
        - "DOWN"
        - "TESTING"
        - "UNKNOWN"
        - "DORMANT"
        - "NOT_PRESENT"
        - "LOWER_LAYER_DOWN"
  get_openconfig_interfaces_interfaces_interface_state_last_change:
    type: "object"
    properties:
      openconfig-interfaces:last-change:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_state_logical:
    type: "object"
    properties:
      openconfig-interfaces:logical:
        type: "boolean"
        format: "boolean"
  get_openconfig_interfaces_interfaces_interface_state_counters:
    type: "object"
    properties:
      openconfig-interfaces:counters:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_state_counters"
  get_openconfig_interfaces_interfaces_interface_state_counters_in_octets:
    type: "object"
    properties:
      openconfig-interfaces:in-octets:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_state_counters_in_pkts:
    type: "object"
    properties:
      openconfig-interfaces:in-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_state_counters_in_unicast_pkts:
    type: "object"
    properties:
      openconfig-interfaces:in-unicast-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_state_counters_in_broadcast_pkts:
    type: "object"
    properties:
      openconfig-interfaces:in-broadcast-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_state_counters_in_multicast_pkts:
    type: "object"
    properties:
      openconfig-interfaces:in-multicast-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_state_counters_in_discards:
    type: "object"
    properties:
      openconfig-interfaces:in-discards:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_state_counters_in_errors:
    type: "object"
    properties:
      openconfig-interfaces:in-errors:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_state_counters_in_unknown_protos:
    type: "object"
    properties:
      openconfig-interfaces:in-unknown-protos:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_state_counters_in_fcs_errors:
    type: "object"
    properties:
      openconfig-interfaces:in-fcs-errors:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_state_counters_out_octets:
    type: "object"
    properties:
      openconfig-interfaces:out-octets:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_state_counters_out_pkts:
    type: "object"
    properties:
      openconfig-interfaces:out-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_state_counters_out_unicast_pkts:
    type: "object"
    properties:
      openconfig-interfaces:out-unicast-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_state_counters_out_broadcast_pkts:
    type: "object"
    properties:
      openconfig-interfaces:out-broadcast-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_state_counters_out_multicast_pkts:
    type: "object"
    properties:
      openconfig-interfaces:out-multicast-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_state_counters_out_discards:
    type: "object"
    properties:
      openconfig-interfaces:out-discards:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_state_counters_out_errors:
    type: "object"
    properties:
      openconfig-interfaces:out-errors:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_state_counters_carrier_transitions:
    type: "object"
    properties:
      openconfig-interfaces:carrier-transitions:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_state_counters_last_clear:
    type: "object"
    properties:
      openconfig-interfaces:last-clear:
        type: "integer"
        format: "int64"
  get_openconfig_vlan_interfaces_interface_state_tpid:
    type: "object"
    properties:
      openconfig-vlan:tpid:
        type: "string"
  openconfig_interfaces_interfaces_interface_hold_time:
    type: "object"
    properties:
      openconfig-interfaces:hold-time:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_holdtime"
  put_openconfig_interfaces_interfaces_interface_hold_time:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_hold_time"
  patch_openconfig_interfaces_interfaces_interface_hold_time:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_hold_time"
  get_openconfig_interfaces_interfaces_interface_hold_time:
    type: "object"
    properties:
      openconfig-interfaces:hold-time:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_holdtime"
  openconfig_interfaces_interfaces_interface_hold_time_config:
    type: "object"
    properties:
      openconfig-interfaces:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_holdtime_config"
  post_openconfig_interfaces_interfaces_interface_hold_time_config:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_hold_time_config"
  put_openconfig_interfaces_interfaces_interface_hold_time_config:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_hold_time_config"
  patch_openconfig_interfaces_interfaces_interface_hold_time_config:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_hold_time_config"
  get_openconfig_interfaces_interfaces_interface_hold_time_config:
    type: "object"
    properties:
      openconfig-interfaces:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_holdtime_config"
  openconfig_interfaces_interfaces_interface_hold_time_config_up:
    type: "object"
    properties:
      openconfig-interfaces:up:
        type: "integer"
        format: "int32"
  post_openconfig_interfaces_interfaces_interface_hold_time_config_up:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_hold_time_config_up"
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_hold_time_config_down"
  put_openconfig_interfaces_interfaces_interface_hold_time_config_up:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_hold_time_config_up"
  patch_openconfig_interfaces_interfaces_interface_hold_time_config_up:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_hold_time_config_up"
  get_openconfig_interfaces_interfaces_interface_hold_time_config_up:
    type: "object"
    properties:
      openconfig-interfaces:up:
        type: "integer"
        format: "int32"
  openconfig_interfaces_interfaces_interface_hold_time_config_down:
    type: "object"
    properties:
      openconfig-interfaces:down:
        type: "integer"
        format: "int32"
  put_openconfig_interfaces_interfaces_interface_hold_time_config_down:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_hold_time_config_down"
  patch_openconfig_interfaces_interfaces_interface_hold_time_config_down:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_hold_time_config_down"
  get_openconfig_interfaces_interfaces_interface_hold_time_config_down:
    type: "object"
    properties:
      openconfig-interfaces:down:
        type: "integer"
        format: "int32"
  get_openconfig_interfaces_interfaces_interface_hold_time_state:
    type: "object"
    properties:
      openconfig-interfaces:state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_holdtime_config"
  get_openconfig_interfaces_interfaces_interface_hold_time_state_up:
    type: "object"
    properties:
      openconfig-interfaces:up:
        type: "integer"
        format: "int32"
  get_openconfig_interfaces_interfaces_interface_hold_time_state_down:
    type: "object"
    properties:
      openconfig-interfaces:down:
        type: "integer"
        format: "int32"
  openconfig_interfaces_interfaces_interface_subinterfaces:
    type: "object"
    properties:
      openconfig-interfaces:subinterfaces:
        $ref: "#/definitions/openconfig_interfaces_interfaces_interface_subinterfaces_openconfiginterfacessubinterfaces"
  put_openconfig_interfaces_interfaces_interface_subinterfaces:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_subinterfaces"
  patch_openconfig_interfaces_interfaces_interface_subinterfaces:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_subinterfaces"
  get_openconfig_interfaces_interfaces_interface_subinterfaces:
    type: "object"
    properties:
      openconfig-interfaces:subinterfaces:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_openconfiginterfacessubinterfaces"
  openconfig_interfaces_interfaces_interface_subinterfaces_subinterface:
    type: "object"
    properties:
      openconfig-interfaces:subinterface:
        type: "array"
        items:
          $ref: "#/definitions/openconfig_interfaces_interfaces_interface_subinterfaces_openconfiginterfacessubinterfaces_subinterface"
  put_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_subinterfaces_subinterface"
  patch_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_subinterfaces_subinterface"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface:
    type: "object"
    properties:
      openconfig-interfaces:subinterface:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_openconfiginterfacessubinterfaces_subinterface"
  post_list_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_subinterfaces_subinterface"
  put_list_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_subinterfaces_subinterface"
  patch_list_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_subinterfaces_subinterface"
  openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config:
    type: "object"
    properties:
      openconfig-interfaces:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_config"
  post_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config"
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6"
  put_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config"
  patch_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config:
    type: "object"
    properties:
      openconfig-interfaces:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_config"
  openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_description:
    type: "object"
    properties:
      openconfig-interfaces:description:
        type: "string"
  post_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_description:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_description"
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_enabled"
  put_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_description:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_description"
  patch_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_description:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_description"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_description:
    type: "object"
    properties:
      openconfig-interfaces:description:
        type: "string"
  openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_enabled:
    type: "object"
    properties:
      openconfig-interfaces:enabled:
        type: "boolean"
        format: "boolean"
  put_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_enabled"
  patch_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_enabled"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_config_enabled:
    type: "object"
    properties:
      openconfig-interfaces:enabled:
        type: "boolean"
        format: "boolean"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state:
    type: "object"
    properties:
      openconfig-interfaces:state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_state"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_index:
    type: "object"
    properties:
      openconfig-interfaces:index:
        type: "integer"
        format: "int32"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_description:
    type: "object"
    properties:
      openconfig-interfaces:description:
        type: "string"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_enabled:
    type: "object"
    properties:
      openconfig-interfaces:enabled:
        type: "boolean"
        format: "boolean"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_name:
    type: "object"
    properties:
      openconfig-interfaces:name:
        type: "string"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_ifindex:
    type: "object"
    properties:
      openconfig-interfaces:ifindex:
        type: "integer"
        format: "int32"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_admin_status:
    type: "object"
    properties:
      openconfig-interfaces:admin-status:
        type: "string"
        enum:
        - "UP"
        - "DOWN"
        - "TESTING"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_oper_status:
    type: "object"
    properties:
      openconfig-interfaces:oper-status:
        type: "string"
        enum:
        - "UP"
        - "DOWN"
        - "TESTING"
        - "UNKNOWN"
        - "DORMANT"
        - "NOT_PRESENT"
        - "LOWER_LAYER_DOWN"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_last_change:
    type: "object"
    properties:
      openconfig-interfaces:last-change:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_logical:
    type: "object"
    properties:
      openconfig-interfaces:logical:
        type: "boolean"
        format: "boolean"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters:
    type: "object"
    properties:
      openconfig-interfaces:counters:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_state_counters"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_octets:
    type: "object"
    properties:
      openconfig-interfaces:in-octets:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_pkts:
    type: "object"
    properties:
      openconfig-interfaces:in-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_unicast_pkts:
    type: "object"
    properties:
      openconfig-interfaces:in-unicast-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_broadcast_pkts:
    type: "object"
    properties:
      openconfig-interfaces:in-broadcast-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_multicast_pkts:
    type: "object"
    properties:
      openconfig-interfaces:in-multicast-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_discards:
    type: "object"
    properties:
      openconfig-interfaces:in-discards:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_errors:
    type: "object"
    properties:
      openconfig-interfaces:in-errors:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_unknown_protos:
    type: "object"
    properties:
      openconfig-interfaces:in-unknown-protos:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_in_fcs_errors:
    type: "object"
    properties:
      openconfig-interfaces:in-fcs-errors:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_octets:
    type: "object"
    properties:
      openconfig-interfaces:out-octets:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_pkts:
    type: "object"
    properties:
      openconfig-interfaces:out-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_unicast_pkts:
    type: "object"
    properties:
      openconfig-interfaces:out-unicast-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_broadcast_pkts:
    type: "object"
    properties:
      openconfig-interfaces:out-broadcast-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_multicast_pkts:
    type: "object"
    properties:
      openconfig-interfaces:out-multicast-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_discards:
    type: "object"
    properties:
      openconfig-interfaces:out-discards:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_out_errors:
    type: "object"
    properties:
      openconfig-interfaces:out-errors:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_carrier_transitions:
    type: "object"
    properties:
      openconfig-interfaces:carrier-transitions:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_subinterface_state_counters_last_clear:
    type: "object"
    properties:
      openconfig-interfaces:last-clear:
        type: "integer"
        format: "int64"
  openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan:
    type: "object"
    properties:
      openconfig-vlan:vlan:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigvlanvlan"
  put_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan"
  patch_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan"
  get_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan:
    type: "object"
    properties:
      openconfig-vlan:vlan:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigvlanvlan"
  openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config:
    type: "object"
    properties:
      openconfig-vlan:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigvlanvlan_config"
  post_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config"
  put_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config"
  patch_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config"
  get_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config:
    type: "object"
    properties:
      openconfig-vlan:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigvlanvlan_config"
  openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config_vlan_id:
    type: "object"
    properties:
      openconfig-vlan:vlan-id:
        type: "string"
  post_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config_vlan_id:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config_vlan_id"
  put_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config_vlan_id:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config_vlan_id"
  patch_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config_vlan_id:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config_vlan_id"
  get_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_config_vlan_id:
    type: "object"
    properties:
      openconfig-vlan:vlan-id:
        type: "string"
  get_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_state:
    type: "object"
    properties:
      openconfig-vlan:state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigvlanvlan_config"
  get_openconfig_vlan_interfaces_interface_subinterfaces_subinterface_vlan_state_vlan_id:
    type: "object"
    properties:
      openconfig-vlan:vlan-id:
        type: "string"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4:
    type: "object"
    properties:
      openconfig-if-ip:ipv4:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4:
    type: "object"
    properties:
      openconfig-if-ip:ipv4:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses:
    type: "object"
    properties:
      openconfig-if-ip:addresses:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses:
    type: "object"
    properties:
      openconfig-if-ip:addresses:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address:
    type: "object"
    properties:
      openconfig-if-ip:address:
        type: "array"
        items:
          $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_address"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address:
    type: "object"
    properties:
      openconfig-if-ip:address:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_address"
  post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address"
  put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address"
  patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_config"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_config"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config_prefix_length:
    type: "object"
    properties:
      openconfig-if-ip:prefix-length:
        type: "integer"
        format: "int32"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config_prefix_length:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config_prefix_length"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config_prefix_length:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config_prefix_length"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config_prefix_length:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config_prefix_length"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_config_prefix_length:
    type: "object"
    properties:
      openconfig-if-ip:prefix-length:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_state"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_state_ip:
    type: "object"
    properties:
      openconfig-if-ip:ip:
        type: "string"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_state_prefix_length:
    type: "object"
    properties:
      openconfig-if-ip:prefix-length:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_state_origin:
    type: "object"
    properties:
      openconfig-if-ip:origin:
        type: "string"
        enum:
        - "OTHER"
        - "STATIC"
        - "DHCP"
        - "LINK_LAYER"
        - "RANDOM"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp:
    type: "object"
    properties:
      openconfig-if-ip:vrrp:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp:
    type: "object"
    properties:
      openconfig-if-ip:vrrp:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group:
    type: "object"
    properties:
      openconfig-if-ip:vrrp-group:
        type: "array"
        items:
          $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_vrrpgroup"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group:
    type: "object"
    properties:
      openconfig-if-ip:vrrp-group:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_vrrpgroup"
  post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group"
  put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group"
  patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_config"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_config"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address:
    type: "object"
    properties:
      openconfig-if-ip:virtual-address:
        type: "array"
        items:
          type: "string"
  ? post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_priority"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
  ? put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
  ? patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address
  : type: "object"
    properties:
      openconfig-if-ip:virtual-address:
        type: "array"
        items:
          type: "string"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_priority:
    type: "object"
    properties:
      openconfig-if-ip:priority:
        type: "integer"
        format: "int32"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_priority:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_priority"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_priority:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_priority"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_priority:
    type: "object"
    properties:
      openconfig-if-ip:priority:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt:
    type: "object"
    properties:
      openconfig-if-ip:preempt:
        type: "boolean"
        format: "boolean"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt:
    type: "object"
    properties:
      openconfig-if-ip:preempt:
        type: "boolean"
        format: "boolean"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay:
    type: "object"
    properties:
      openconfig-if-ip:preempt-delay:
        type: "integer"
        format: "int32"
  ? put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay"
  ? patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay
  : type: "object"
    properties:
      openconfig-if-ip:preempt-delay:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode:
    type: "object"
    properties:
      openconfig-if-ip:accept-mode:
        type: "boolean"
        format: "boolean"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode"
  ? patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode:
    type: "object"
    properties:
      openconfig-if-ip:accept-mode:
        type: "boolean"
        format: "boolean"
  ? openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval
  : type: "object"
    properties:
      openconfig-if-ip:advertisement-interval:
        type: "integer"
        format: "int32"
  ? put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
  ? patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval
  : type: "object"
    properties:
      openconfig-if-ip:advertisement-interval:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_state"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_virtual_router_id
  : type: "object"
    properties:
      openconfig-if-ip:virtual-router-id:
        type: "integer"
        format: "int32"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_virtual_address
  : type: "object"
    properties:
      openconfig-if-ip:virtual-address:
        type: "array"
        items:
          type: "string"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_priority:
    type: "object"
    properties:
      openconfig-if-ip:priority:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_preempt:
    type: "object"
    properties:
      openconfig-if-ip:preempt:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_preempt_delay:
    type: "object"
    properties:
      openconfig-if-ip:preempt-delay:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_accept_mode:
    type: "object"
    properties:
      openconfig-if-ip:accept-mode:
        type: "boolean"
        format: "boolean"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_advertisement_interval
  : type: "object"
    properties:
      openconfig-if-ip:advertisement-interval:
        type: "integer"
        format: "int32"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_state_current_priority
  : type: "object"
    properties:
      openconfig-if-ip:current-priority:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking:
    type: "object"
    properties:
      openconfig-if-ip:interface-tracking:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking"
  ? patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking:
    type: "object"
    properties:
      openconfig-if-ip:interface-tracking:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking"
  ? openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config
  : type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking_config"
  ? post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
  ? put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
  ? patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config
  : type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking_config"
  ? openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface
  : type: "object"
    properties:
      openconfig-if-ip:track-interface:
        type: "array"
        items:
          type: "string"
  ? post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
  ? put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
  ? patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface
  : type: "object"
    properties:
      openconfig-if-ip:track-interface:
        type: "array"
        items:
          type: "string"
  ? openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement
  : type: "object"
    properties:
      openconfig-if-ip:priority-decrement:
        type: "integer"
        format: "int32"
  ? put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
  ? patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement
  : type: "object"
    properties:
      openconfig-if-ip:priority-decrement:
        type: "integer"
        format: "int32"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state
  : type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking_config"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state_track_interface
  : type: "object"
    properties:
      openconfig-if-ip:track-interface:
        type: "array"
        items:
          type: "string"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state_priority_decrement
  : type: "object"
    properties:
      openconfig-if-ip:priority-decrement:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp:
    type: "object"
    properties:
      openconfig-if-ip:proxy-arp:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_proxyarp"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp:
    type: "object"
    properties:
      openconfig-if-ip:proxy-arp:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_proxyarp"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_proxyarp_config"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_proxyarp_config"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config_mode:
    type: "object"
    properties:
      openconfig-if-ip:mode:
        type: "string"
        enum:
        - "DISABLE"
        - "REMOTE_ONLY"
        - "ALL"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config_mode:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config_mode"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config_mode:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config_mode"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config_mode:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config_mode"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_config_mode:
    type: "object"
    properties:
      openconfig-if-ip:mode:
        type: "string"
        enum:
        - "DISABLE"
        - "REMOTE_ONLY"
        - "ALL"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_proxyarp_config"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_proxy_arp_state_mode:
    type: "object"
    properties:
      openconfig-if-ip:mode:
        type: "string"
        enum:
        - "DISABLE"
        - "REMOTE_ONLY"
        - "ALL"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors:
    type: "object"
    properties:
      openconfig-if-ip:neighbors:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors:
    type: "object"
    properties:
      openconfig-if-ip:neighbors:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor:
    type: "object"
    properties:
      openconfig-if-ip:neighbor:
        type: "array"
        items:
          $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_neighbor"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor:
    type: "object"
    properties:
      openconfig-if-ip:neighbor:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_neighbor"
  post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor"
  put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor"
  patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_config"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_config"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config_link_layer_address:
    type: "object"
    properties:
      openconfig-if-ip:link-layer-address:
        type: "string"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config_link_layer_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config_link_layer_address"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config_link_layer_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config_link_layer_address"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config_link_layer_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config_link_layer_address"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_config_link_layer_address:
    type: "object"
    properties:
      openconfig-if-ip:link-layer-address:
        type: "string"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_state"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_state_ip:
    type: "object"
    properties:
      openconfig-if-ip:ip:
        type: "string"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_state_link_layer_address:
    type: "object"
    properties:
      openconfig-if-ip:link-layer-address:
        type: "string"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_neighbors_neighbor_state_origin:
    type: "object"
    properties:
      openconfig-if-ip:origin:
        type: "string"
        enum:
        - "OTHER"
        - "STATIC"
        - "DYNAMIC"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered:
    type: "object"
    properties:
      openconfig-if-ip:unnumbered:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered:
    type: "object"
    properties:
      openconfig-if-ip:unnumbered:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_config"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_config"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config_enabled"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config_enabled"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config_enabled"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_config_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_config"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_state_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref:
    type: "object"
    properties:
      openconfig-if-ip:interface-ref:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref:
    type: "object"
    properties:
      openconfig-if-ip:interface-ref:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref_config"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref_config"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_interface:
    type: "object"
    properties:
      openconfig-if-ip:interface:
        type: "string"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_interface:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_interface"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_subinterface"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_interface:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_interface"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_interface:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_interface"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_interface:
    type: "object"
    properties:
      openconfig-if-ip:interface:
        type: "string"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_subinterface:
    type: "object"
    properties:
      openconfig-if-ip:subinterface:
        type: "integer"
        format: "int32"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_subinterface:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_subinterface"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_subinterface:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_subinterface"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_config_subinterface:
    type: "object"
    properties:
      openconfig-if-ip:subinterface:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref_config"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_state_interface:
    type: "object"
    properties:
      openconfig-if-ip:interface:
        type: "string"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_unnumbered_interface_ref_state_subinterface:
    type: "object"
    properties:
      openconfig-if-ip:subinterface:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_config"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_config"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_enabled"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_mtu"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_dhcp_client"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_enabled"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_enabled"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_mtu:
    type: "object"
    properties:
      openconfig-if-ip:mtu:
        type: "integer"
        format: "int32"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_mtu:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_mtu"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_mtu:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_mtu"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_mtu:
    type: "object"
    properties:
      openconfig-if-ip:mtu:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_dhcp_client:
    type: "object"
    properties:
      openconfig-if-ip:dhcp-client:
        type: "boolean"
        format: "boolean"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_dhcp_client:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_dhcp_client"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_dhcp_client:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_dhcp_client"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_config_dhcp_client:
    type: "object"
    properties:
      openconfig-if-ip:dhcp-client:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_state"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_mtu:
    type: "object"
    properties:
      openconfig-if-ip:mtu:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_dhcp_client:
    type: "object"
    properties:
      openconfig-if-ip:dhcp-client:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters:
    type: "object"
    properties:
      openconfig-if-ip:counters:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_state_counters"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_pkts:
    type: "object"
    properties:
      openconfig-if-ip:in-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_octets:
    type: "object"
    properties:
      openconfig-if-ip:in-octets:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_error_pkts:
    type: "object"
    properties:
      openconfig-if-ip:in-error-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_forwarded_pkts:
    type: "object"
    properties:
      openconfig-if-ip:in-forwarded-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_forwarded_octets:
    type: "object"
    properties:
      openconfig-if-ip:in-forwarded-octets:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_in_discarded_pkts:
    type: "object"
    properties:
      openconfig-if-ip:in-discarded-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_pkts:
    type: "object"
    properties:
      openconfig-if-ip:out-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_octets:
    type: "object"
    properties:
      openconfig-if-ip:out-octets:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_error_pkts:
    type: "object"
    properties:
      openconfig-if-ip:out-error-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_forwarded_pkts:
    type: "object"
    properties:
      openconfig-if-ip:out-forwarded-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_forwarded_octets:
    type: "object"
    properties:
      openconfig-if-ip:out-forwarded-octets:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv4_state_counters_out_discarded_pkts:
    type: "object"
    properties:
      openconfig-if-ip:out-discarded-pkts:
        type: "integer"
        format: "int64"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6:
    type: "object"
    properties:
      openconfig-if-ip:ipv6:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6:
    type: "object"
    properties:
      openconfig-if-ip:ipv6:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses:
    type: "object"
    properties:
      openconfig-if-ip:addresses:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses:
    type: "object"
    properties:
      openconfig-if-ip:addresses:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address:
    type: "object"
    properties:
      openconfig-if-ip:address:
        type: "array"
        items:
          $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_address"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address:
    type: "object"
    properties:
      openconfig-if-ip:address:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_address"
  post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address"
  put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address"
  patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_config"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_config"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config_prefix_length:
    type: "object"
    properties:
      openconfig-if-ip:prefix-length:
        type: "integer"
        format: "int32"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config_prefix_length:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config_prefix_length"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config_prefix_length:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config_prefix_length"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config_prefix_length:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config_prefix_length"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_config_prefix_length:
    type: "object"
    properties:
      openconfig-if-ip:prefix-length:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_state"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_state_ip:
    type: "object"
    properties:
      openconfig-if-ip:ip:
        type: "string"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_state_prefix_length:
    type: "object"
    properties:
      openconfig-if-ip:prefix-length:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_state_origin:
    type: "object"
    properties:
      openconfig-if-ip:origin:
        type: "string"
        enum:
        - "OTHER"
        - "STATIC"
        - "DHCP"
        - "LINK_LAYER"
        - "RANDOM"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_state_status:
    type: "object"
    properties:
      openconfig-if-ip:status:
        type: "string"
        enum:
        - "PREFERRED"
        - "DEPRECATED"
        - "INVALID"
        - "INACCESSIBLE"
        - "UNKNOWN"
        - "TENTATIVE"
        - "DUPLICATE"
        - "OPTIMISTIC"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp:
    type: "object"
    properties:
      openconfig-if-ip:vrrp:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp:
    type: "object"
    properties:
      openconfig-if-ip:vrrp:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group:
    type: "object"
    properties:
      openconfig-if-ip:vrrp-group:
        type: "array"
        items:
          $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp_vrrpgroup"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group:
    type: "object"
    properties:
      openconfig-if-ip:vrrp-group:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp_vrrpgroup"
  post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group"
  put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group"
  patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp_config"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp_config"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address:
    type: "object"
    properties:
      openconfig-if-ip:virtual-address:
        type: "array"
        items:
          type: "string"
  ? post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_priority"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local"
  ? put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
  ? patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address
  : type: "object"
    properties:
      openconfig-if-ip:virtual-address:
        type: "array"
        items:
          type: "string"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_priority:
    type: "object"
    properties:
      openconfig-if-ip:priority:
        type: "integer"
        format: "int32"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_priority:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_priority"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_priority:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_priority"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_priority:
    type: "object"
    properties:
      openconfig-if-ip:priority:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt:
    type: "object"
    properties:
      openconfig-if-ip:preempt:
        type: "boolean"
        format: "boolean"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt:
    type: "object"
    properties:
      openconfig-if-ip:preempt:
        type: "boolean"
        format: "boolean"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay:
    type: "object"
    properties:
      openconfig-if-ip:preempt-delay:
        type: "integer"
        format: "int32"
  ? put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay"
  ? patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay
  : type: "object"
    properties:
      openconfig-if-ip:preempt-delay:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode:
    type: "object"
    properties:
      openconfig-if-ip:accept-mode:
        type: "boolean"
        format: "boolean"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode"
  ? patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode:
    type: "object"
    properties:
      openconfig-if-ip:accept-mode:
        type: "boolean"
        format: "boolean"
  ? openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval
  : type: "object"
    properties:
      openconfig-if-ip:advertisement-interval:
        type: "integer"
        format: "int32"
  ? put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
  ? patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval
  : type: "object"
    properties:
      openconfig-if-ip:advertisement-interval:
        type: "integer"
        format: "int32"
  ? openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local
  : type: "object"
    properties:
      openconfig-if-ip:virtual-link-local:
        type: "string"
  ? put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local"
  ? patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local
  : type: "object"
    properties:
      openconfig-if-ip:virtual-link-local:
        type: "string"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp_state"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_router_id
  : type: "object"
    properties:
      openconfig-if-ip:virtual-router-id:
        type: "integer"
        format: "int32"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_address
  : type: "object"
    properties:
      openconfig-if-ip:virtual-address:
        type: "array"
        items:
          type: "string"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_priority:
    type: "object"
    properties:
      openconfig-if-ip:priority:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_preempt:
    type: "object"
    properties:
      openconfig-if-ip:preempt:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_preempt_delay:
    type: "object"
    properties:
      openconfig-if-ip:preempt-delay:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_accept_mode:
    type: "object"
    properties:
      openconfig-if-ip:accept-mode:
        type: "boolean"
        format: "boolean"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_advertisement_interval
  : type: "object"
    properties:
      openconfig-if-ip:advertisement-interval:
        type: "integer"
        format: "int32"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_current_priority
  : type: "object"
    properties:
      openconfig-if-ip:current-priority:
        type: "integer"
        format: "int32"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_link_local
  : type: "object"
    properties:
      openconfig-if-ip:virtual-link-local:
        type: "string"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking:
    type: "object"
    properties:
      openconfig-if-ip:interface-tracking:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking"
  ? patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking:
    type: "object"
    properties:
      openconfig-if-ip:interface-tracking:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking"
  ? openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config
  : type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking_config"
  ? post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
  ? put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
  ? patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config
  : type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking_config"
  ? openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface
  : type: "object"
    properties:
      openconfig-if-ip:track-interface:
        type: "array"
        items:
          type: "string"
  ? post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
  ? put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
  ? patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface
  : type: "object"
    properties:
      openconfig-if-ip:track-interface:
        type: "array"
        items:
          type: "string"
  ? openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement
  : type: "object"
    properties:
      openconfig-if-ip:priority-decrement:
        type: "integer"
        format: "int32"
  ? put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
  ? patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement
  : type: "object"
    properties:
      openconfig-if-ip:priority-decrement:
        type: "integer"
        format: "int32"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state
  : type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking_config"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state_track_interface
  : type: "object"
    properties:
      openconfig-if-ip:track-interface:
        type: "array"
        items:
          type: "string"
  ? get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state_priority_decrement
  : type: "object"
    properties:
      openconfig-if-ip:priority-decrement:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement:
    type: "object"
    properties:
      openconfig-if-ip:router-advertisement:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_routeradvertisement"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement:
    type: "object"
    properties:
      openconfig-if-ip:router-advertisement:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_routeradvertisement"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_routeradvertisement_config"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_routeradvertisement_config"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_interval:
    type: "object"
    properties:
      openconfig-if-ip:interval:
        type: "integer"
        format: "int32"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_interval:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_interval"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_lifetime"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_suppress"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_interval:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_interval"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_interval:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_interval"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_interval:
    type: "object"
    properties:
      openconfig-if-ip:interval:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_lifetime:
    type: "object"
    properties:
      openconfig-if-ip:lifetime:
        type: "integer"
        format: "int32"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_lifetime:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_lifetime"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_lifetime:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_lifetime"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_lifetime:
    type: "object"
    properties:
      openconfig-if-ip:lifetime:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_suppress:
    type: "object"
    properties:
      openconfig-if-ip:suppress:
        type: "boolean"
        format: "boolean"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_suppress:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_suppress"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_suppress:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_suppress"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_config_suppress:
    type: "object"
    properties:
      openconfig-if-ip:suppress:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_routeradvertisement_config"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_state_interval:
    type: "object"
    properties:
      openconfig-if-ip:interval:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_state_lifetime:
    type: "object"
    properties:
      openconfig-if-ip:lifetime:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_router_advertisement_state_suppress:
    type: "object"
    properties:
      openconfig-if-ip:suppress:
        type: "boolean"
        format: "boolean"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors:
    type: "object"
    properties:
      openconfig-if-ip:neighbors:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors:
    type: "object"
    properties:
      openconfig-if-ip:neighbors:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_neighbors"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor:
    type: "object"
    properties:
      openconfig-if-ip:neighbor:
        type: "array"
        items:
          $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_neighbor"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor:
    type: "object"
    properties:
      openconfig-if-ip:neighbor:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_neighbors_neighbor"
  post_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor"
  put_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor"
  patch_list_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_config"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_config"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config_link_layer_address:
    type: "object"
    properties:
      openconfig-if-ip:link-layer-address:
        type: "string"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config_link_layer_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config_link_layer_address"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config_link_layer_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config_link_layer_address"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config_link_layer_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config_link_layer_address"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_config_link_layer_address:
    type: "object"
    properties:
      openconfig-if-ip:link-layer-address:
        type: "string"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_neighbors_state"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state_ip:
    type: "object"
    properties:
      openconfig-if-ip:ip:
        type: "string"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state_link_layer_address:
    type: "object"
    properties:
      openconfig-if-ip:link-layer-address:
        type: "string"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state_origin:
    type: "object"
    properties:
      openconfig-if-ip:origin:
        type: "string"
        enum:
        - "OTHER"
        - "STATIC"
        - "DYNAMIC"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state_is_router:
    type: "object"
    properties:
      openconfig-if-ip:is-router:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_neighbors_neighbor_state_neighbor_state:
    type: "object"
    properties:
      openconfig-if-ip:neighbor-state:
        type: "string"
        enum:
        - "INCOMPLETE"
        - "REACHABLE"
        - "STALE"
        - "DELAY"
        - "PROBE"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered:
    type: "object"
    properties:
      openconfig-if-ip:unnumbered:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered:
    type: "object"
    properties:
      openconfig-if-ip:unnumbered:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_config"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_config"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config_enabled"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config_enabled"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config_enabled"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_config_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_config"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_state_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref:
    type: "object"
    properties:
      openconfig-if-ip:interface-ref:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref:
    type: "object"
    properties:
      openconfig-if-ip:interface-ref:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref_config"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref_config"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_interface:
    type: "object"
    properties:
      openconfig-if-ip:interface:
        type: "string"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_interface:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_interface"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_subinterface"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_interface:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_interface"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_interface:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_interface"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_interface:
    type: "object"
    properties:
      openconfig-if-ip:interface:
        type: "string"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_subinterface:
    type: "object"
    properties:
      openconfig-if-ip:subinterface:
        type: "integer"
        format: "int32"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_subinterface:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_subinterface"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_subinterface:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_subinterface"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_config_subinterface:
    type: "object"
    properties:
      openconfig-if-ip:subinterface:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref_config"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_state_interface:
    type: "object"
    properties:
      openconfig-if-ip:interface:
        type: "string"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_unnumbered_interface_ref_state_subinterface:
    type: "object"
    properties:
      openconfig-if-ip:subinterface:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_config"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_config"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  post_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_enabled"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_mtu"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dup_addr_detect_transmits"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dhcp_client"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_enabled"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_enabled"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_mtu:
    type: "object"
    properties:
      openconfig-if-ip:mtu:
        type: "integer"
        format: "int32"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_mtu:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_mtu"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_mtu:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_mtu"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_mtu:
    type: "object"
    properties:
      openconfig-if-ip:mtu:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dup_addr_detect_transmits:
    type: "object"
    properties:
      openconfig-if-ip:dup-addr-detect-transmits:
        type: "integer"
        format: "int32"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dup_addr_detect_transmits:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dup_addr_detect_transmits"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dup_addr_detect_transmits:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dup_addr_detect_transmits"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dup_addr_detect_transmits:
    type: "object"
    properties:
      openconfig-if-ip:dup-addr-detect-transmits:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dhcp_client:
    type: "object"
    properties:
      openconfig-if-ip:dhcp-client:
        type: "boolean"
        format: "boolean"
  put_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dhcp_client:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dhcp_client"
  patch_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dhcp_client:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dhcp_client"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_config_dhcp_client:
    type: "object"
    properties:
      openconfig-if-ip:dhcp-client:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_state"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_mtu:
    type: "object"
    properties:
      openconfig-if-ip:mtu:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_dup_addr_detect_transmits:
    type: "object"
    properties:
      openconfig-if-ip:dup-addr-detect-transmits:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_dhcp_client:
    type: "object"
    properties:
      openconfig-if-ip:dhcp-client:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters:
    type: "object"
    properties:
      openconfig-if-ip:counters:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_state_counters"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_pkts:
    type: "object"
    properties:
      openconfig-if-ip:in-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_octets:
    type: "object"
    properties:
      openconfig-if-ip:in-octets:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_error_pkts:
    type: "object"
    properties:
      openconfig-if-ip:in-error-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_forwarded_pkts:
    type: "object"
    properties:
      openconfig-if-ip:in-forwarded-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_forwarded_octets:
    type: "object"
    properties:
      openconfig-if-ip:in-forwarded-octets:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_in_discarded_pkts:
    type: "object"
    properties:
      openconfig-if-ip:in-discarded-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_pkts:
    type: "object"
    properties:
      openconfig-if-ip:out-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_octets:
    type: "object"
    properties:
      openconfig-if-ip:out-octets:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_error_pkts:
    type: "object"
    properties:
      openconfig-if-ip:out-error-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_forwarded_pkts:
    type: "object"
    properties:
      openconfig-if-ip:out-forwarded-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_forwarded_octets:
    type: "object"
    properties:
      openconfig-if-ip:out-forwarded-octets:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_subinterfaces_subinterface_ipv6_state_counters_out_discarded_pkts:
    type: "object"
    properties:
      openconfig-if-ip:out-discarded-pkts:
        type: "integer"
        format: "int64"
  openconfig_if_ethernet_interfaces_interface_ethernet:
    type: "object"
    properties:
      openconfig-if-ethernet:ethernet:
        $ref: "#/definitions/openconfig_if_ethernet_interfaces_interface_ethernet_openconfigifethernetethernet"
  put_openconfig_if_ethernet_interfaces_interface_ethernet:
    allOf:
    - $ref: "#/definitions/openconfig_if_ethernet_interfaces_interface_ethernet"
  patch_openconfig_if_ethernet_interfaces_interface_ethernet:
    allOf:
    - $ref: "#/definitions/openconfig_if_ethernet_interfaces_interface_ethernet"
  get_openconfig_if_ethernet_interfaces_interface_ethernet:
    type: "object"
    properties:
      openconfig-if-ethernet:ethernet:
        $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_openconfigifethernetethernet"
  openconfig_if_ethernet_interfaces_interface_ethernet_config:
    type: "object"
    properties:
      openconfig-if-ethernet:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_config"
  post_openconfig_if_ethernet_interfaces_interface_ethernet_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ethernet_interfaces_interface_ethernet_config"
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_ethernet_switched_vlan"
  put_openconfig_if_ethernet_interfaces_interface_ethernet_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ethernet_interfaces_interface_ethernet_config"
  patch_openconfig_if_ethernet_interfaces_interface_ethernet_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ethernet_interfaces_interface_ethernet_config"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_config:
    type: "object"
    properties:
      openconfig-if-ethernet:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_config"
  openconfig_if_ethernet_interfaces_interface_ethernet_config_mac_address:
    type: "object"
    properties:
      openconfig-if-ethernet:mac-address:
        type: "string"
  post_openconfig_if_ethernet_interfaces_interface_ethernet_config_mac_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ethernet_interfaces_interface_ethernet_config_mac_address"
    - $ref: "#/definitions/openconfig_if_ethernet_interfaces_interface_ethernet_config_auto_negotiate"
    - $ref: "#/definitions/openconfig_if_ethernet_interfaces_interface_ethernet_config_duplex_mode"
    - $ref: "#/definitions/openconfig_if_ethernet_interfaces_interface_ethernet_config_port_speed"
    - $ref: "#/definitions/openconfig_if_ethernet_interfaces_interface_ethernet_config_enable_flow_control"
    - $ref: "#/definitions/openconfig_if_aggregate_interfaces_interface_ethernet_config_aggregate_id"
  put_openconfig_if_ethernet_interfaces_interface_ethernet_config_mac_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ethernet_interfaces_interface_ethernet_config_mac_address"
  patch_openconfig_if_ethernet_interfaces_interface_ethernet_config_mac_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ethernet_interfaces_interface_ethernet_config_mac_address"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_config_mac_address:
    type: "object"
    properties:
      openconfig-if-ethernet:mac-address:
        type: "string"
  openconfig_if_ethernet_interfaces_interface_ethernet_config_auto_negotiate:
    type: "object"
    properties:
      openconfig-if-ethernet:auto-negotiate:
        type: "boolean"
        format: "boolean"
  put_openconfig_if_ethernet_interfaces_interface_ethernet_config_auto_negotiate:
    allOf:
    - $ref: "#/definitions/openconfig_if_ethernet_interfaces_interface_ethernet_config_auto_negotiate"
  patch_openconfig_if_ethernet_interfaces_interface_ethernet_config_auto_negotiate:
    allOf:
    - $ref: "#/definitions/openconfig_if_ethernet_interfaces_interface_ethernet_config_auto_negotiate"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_config_auto_negotiate:
    type: "object"
    properties:
      openconfig-if-ethernet:auto-negotiate:
        type: "boolean"
        format: "boolean"
  openconfig_if_ethernet_interfaces_interface_ethernet_config_duplex_mode:
    type: "object"
    properties:
      openconfig-if-ethernet:duplex-mode:
        type: "string"
        enum:
        - "FULL"
        - "HALF"
  put_openconfig_if_ethernet_interfaces_interface_ethernet_config_duplex_mode:
    allOf:
    - $ref: "#/definitions/openconfig_if_ethernet_interfaces_interface_ethernet_config_duplex_mode"
  patch_openconfig_if_ethernet_interfaces_interface_ethernet_config_duplex_mode:
    allOf:
    - $ref: "#/definitions/openconfig_if_ethernet_interfaces_interface_ethernet_config_duplex_mode"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_config_duplex_mode:
    type: "object"
    properties:
      openconfig-if-ethernet:duplex-mode:
        type: "string"
        enum:
        - "FULL"
        - "HALF"
  openconfig_if_ethernet_interfaces_interface_ethernet_config_port_speed:
    type: "object"
    properties:
      openconfig-if-ethernet:port-speed:
        type: "string"
  put_openconfig_if_ethernet_interfaces_interface_ethernet_config_port_speed:
    allOf:
    - $ref: "#/definitions/openconfig_if_ethernet_interfaces_interface_ethernet_config_port_speed"
  patch_openconfig_if_ethernet_interfaces_interface_ethernet_config_port_speed:
    allOf:
    - $ref: "#/definitions/openconfig_if_ethernet_interfaces_interface_ethernet_config_port_speed"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_config_port_speed:
    type: "object"
    properties:
      openconfig-if-ethernet:port-speed:
        type: "string"
  openconfig_if_ethernet_interfaces_interface_ethernet_config_enable_flow_control:
    type: "object"
    properties:
      openconfig-if-ethernet:enable-flow-control:
        type: "boolean"
        format: "boolean"
  put_openconfig_if_ethernet_interfaces_interface_ethernet_config_enable_flow_control:
    allOf:
    - $ref: "#/definitions/openconfig_if_ethernet_interfaces_interface_ethernet_config_enable_flow_control"
  patch_openconfig_if_ethernet_interfaces_interface_ethernet_config_enable_flow_control:
    allOf:
    - $ref: "#/definitions/openconfig_if_ethernet_interfaces_interface_ethernet_config_enable_flow_control"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_config_enable_flow_control:
    type: "object"
    properties:
      openconfig-if-ethernet:enable-flow-control:
        type: "boolean"
        format: "boolean"
  openconfig_if_aggregate_interfaces_interface_ethernet_config_aggregate_id:
    type: "object"
    properties:
      openconfig-if-aggregate:aggregate-id:
        type: "string"
  put_openconfig_if_aggregate_interfaces_interface_ethernet_config_aggregate_id:
    allOf:
    - $ref: "#/definitions/openconfig_if_aggregate_interfaces_interface_ethernet_config_aggregate_id"
  patch_openconfig_if_aggregate_interfaces_interface_ethernet_config_aggregate_id:
    allOf:
    - $ref: "#/definitions/openconfig_if_aggregate_interfaces_interface_ethernet_config_aggregate_id"
  get_openconfig_if_aggregate_interfaces_interface_ethernet_config_aggregate_id:
    type: "object"
    properties:
      openconfig-if-aggregate:aggregate-id:
        type: "string"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state:
    type: "object"
    properties:
      openconfig-if-ethernet:state:
        $ref: "#/definitions/get_openconfig_if_ethernet_interfaces_interface_ethernet_state_openconfigifethernetstate"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state_mac_address:
    type: "object"
    properties:
      openconfig-if-ethernet:mac-address:
        type: "string"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state_auto_negotiate:
    type: "object"
    properties:
      openconfig-if-ethernet:auto-negotiate:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state_duplex_mode:
    type: "object"
    properties:
      openconfig-if-ethernet:duplex-mode:
        type: "string"
        enum:
        - "FULL"
        - "HALF"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state_port_speed:
    type: "object"
    properties:
      openconfig-if-ethernet:port-speed:
        type: "string"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state_enable_flow_control:
    type: "object"
    properties:
      openconfig-if-ethernet:enable-flow-control:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state_hw_mac_address:
    type: "object"
    properties:
      openconfig-if-ethernet:hw-mac-address:
        type: "string"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state_negotiated_duplex_mode:
    type: "object"
    properties:
      openconfig-if-ethernet:negotiated-duplex-mode:
        type: "string"
        enum:
        - "FULL"
        - "HALF"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state_negotiated_port_speed:
    type: "object"
    properties:
      openconfig-if-ethernet:negotiated-port-speed:
        type: "string"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters:
    type: "object"
    properties:
      openconfig-if-ethernet:counters:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_state_counters"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_mac_control_frames:
    type: "object"
    properties:
      openconfig-if-ethernet:in-mac-control-frames:
        type: "integer"
        format: "int64"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_mac_pause_frames:
    type: "object"
    properties:
      openconfig-if-ethernet:in-mac-pause-frames:
        type: "integer"
        format: "int64"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_oversize_frames:
    type: "object"
    properties:
      openconfig-if-ethernet:in-oversize-frames:
        type: "integer"
        format: "int64"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_undersize_frames:
    type: "object"
    properties:
      openconfig-if-ethernet:in-undersize-frames:
        type: "integer"
        format: "int64"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_jabber_frames:
    type: "object"
    properties:
      openconfig-if-ethernet:in-jabber-frames:
        type: "integer"
        format: "int64"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_fragment_frames:
    type: "object"
    properties:
      openconfig-if-ethernet:in-fragment-frames:
        type: "integer"
        format: "int64"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_8021q_frames:
    type: "object"
    properties:
      openconfig-if-ethernet:in-8021q-frames:
        type: "integer"
        format: "int64"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_crc_errors:
    type: "object"
    properties:
      openconfig-if-ethernet:in-crc-errors:
        type: "integer"
        format: "int64"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_in_block_errors:
    type: "object"
    properties:
      openconfig-if-ethernet:in-block-errors:
        type: "integer"
        format: "int64"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_out_mac_control_frames:
    type: "object"
    properties:
      openconfig-if-ethernet:out-mac-control-frames:
        type: "integer"
        format: "int64"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_out_mac_pause_frames:
    type: "object"
    properties:
      openconfig-if-ethernet:out-mac-pause-frames:
        type: "integer"
        format: "int64"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state_counters_out_8021q_frames:
    type: "object"
    properties:
      openconfig-if-ethernet:out-8021q-frames:
        type: "integer"
        format: "int64"
  get_openconfig_if_aggregate_interfaces_interface_ethernet_state_aggregate_id:
    type: "object"
    properties:
      openconfig-if-aggregate:aggregate-id:
        type: "string"
  openconfig_vlan_interfaces_interface_ethernet_switched_vlan:
    type: "object"
    properties:
      openconfig-vlan:switched-vlan:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan"
  put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_ethernet_switched_vlan"
  patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_ethernet_switched_vlan"
  get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan:
    type: "object"
    properties:
      openconfig-vlan:switched-vlan:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan"
  openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config:
    type: "object"
    properties:
      openconfig-vlan:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan_config"
  post_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config"
  put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config"
  patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config"
  get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config:
    type: "object"
    properties:
      openconfig-vlan:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan_config"
  openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_interface_mode:
    type: "object"
    properties:
      openconfig-vlan:interface-mode:
        type: "string"
        enum:
        - "ACCESS"
        - "TRUNK"
  post_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_interface_mode:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_interface_mode"
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_native_vlan"
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_access_vlan"
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans"
  put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_interface_mode:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_interface_mode"
  patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_interface_mode:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_interface_mode"
  get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_interface_mode:
    type: "object"
    properties:
      openconfig-vlan:interface-mode:
        type: "string"
        enum:
        - "ACCESS"
        - "TRUNK"
  openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_native_vlan:
    type: "object"
    properties:
      openconfig-vlan:native-vlan:
        type: "integer"
        format: "int32"
  put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_native_vlan:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_native_vlan"
  patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_native_vlan:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_native_vlan"
  get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_native_vlan:
    type: "object"
    properties:
      openconfig-vlan:native-vlan:
        type: "integer"
        format: "int32"
  openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_access_vlan:
    type: "object"
    properties:
      openconfig-vlan:access-vlan:
        type: "integer"
        format: "int32"
  put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_access_vlan:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_access_vlan"
  patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_access_vlan:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_access_vlan"
  get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_access_vlan:
    type: "object"
    properties:
      openconfig-vlan:access-vlan:
        type: "integer"
        format: "int32"
  openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans:
    type: "object"
    properties:
      openconfig-vlan:trunk-vlans:
        type: "array"
        items:
          type: "string"
  put_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans"
  patch_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans"
  get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_config_trunk_vlans:
    type: "object"
    properties:
      openconfig-vlan:trunk-vlans:
        type: "array"
        items:
          type: "string"
  get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_state:
    type: "object"
    properties:
      openconfig-vlan:state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan_config"
  get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_state_interface_mode:
    type: "object"
    properties:
      openconfig-vlan:interface-mode:
        type: "string"
        enum:
        - "ACCESS"
        - "TRUNK"
  get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_state_native_vlan:
    type: "object"
    properties:
      openconfig-vlan:native-vlan:
        type: "integer"
        format: "int32"
  get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_state_access_vlan:
    type: "object"
    properties:
      openconfig-vlan:access-vlan:
        type: "integer"
        format: "int32"
  get_openconfig_vlan_interfaces_interface_ethernet_switched_vlan_state_trunk_vlans:
    type: "object"
    properties:
      openconfig-vlan:trunk-vlans:
        type: "array"
        items:
          type: "string"
  openconfig_if_aggregate_interfaces_interface_aggregation:
    type: "object"
    properties:
      openconfig-if-aggregate:aggregation:
        $ref: "#/definitions/openconfig_if_aggregate_interfaces_interface_aggregation_openconfigifaggregateaggregation"
  put_openconfig_if_aggregate_interfaces_interface_aggregation:
    allOf:
    - $ref: "#/definitions/openconfig_if_aggregate_interfaces_interface_aggregation"
  patch_openconfig_if_aggregate_interfaces_interface_aggregation:
    allOf:
    - $ref: "#/definitions/openconfig_if_aggregate_interfaces_interface_aggregation"
  get_openconfig_if_aggregate_interfaces_interface_aggregation:
    type: "object"
    properties:
      openconfig-if-aggregate:aggregation:
        $ref: "#/definitions/get_openconfig_if_aggregate_interfaces_interface_aggregation_openconfigifaggregateaggregation"
  openconfig_if_aggregate_interfaces_interface_aggregation_config:
    type: "object"
    properties:
      openconfig-if-aggregate:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifaggregateaggregation_config"
  post_openconfig_if_aggregate_interfaces_interface_aggregation_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_aggregate_interfaces_interface_aggregation_config"
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_aggregation_switched_vlan"
  put_openconfig_if_aggregate_interfaces_interface_aggregation_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_aggregate_interfaces_interface_aggregation_config"
  patch_openconfig_if_aggregate_interfaces_interface_aggregation_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_aggregate_interfaces_interface_aggregation_config"
  get_openconfig_if_aggregate_interfaces_interface_aggregation_config:
    type: "object"
    properties:
      openconfig-if-aggregate:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifaggregateaggregation_config"
  openconfig_if_aggregate_interfaces_interface_aggregation_config_lag_type:
    type: "object"
    properties:
      openconfig-if-aggregate:lag-type:
        type: "string"
        enum:
        - "LACP"
        - "STATIC"
  post_openconfig_if_aggregate_interfaces_interface_aggregation_config_lag_type:
    allOf:
    - $ref: "#/definitions/openconfig_if_aggregate_interfaces_interface_aggregation_config_lag_type"
    - $ref: "#/definitions/openconfig_if_aggregate_interfaces_interface_aggregation_config_min_links"
  put_openconfig_if_aggregate_interfaces_interface_aggregation_config_lag_type:
    allOf:
    - $ref: "#/definitions/openconfig_if_aggregate_interfaces_interface_aggregation_config_lag_type"
  patch_openconfig_if_aggregate_interfaces_interface_aggregation_config_lag_type:
    allOf:
    - $ref: "#/definitions/openconfig_if_aggregate_interfaces_interface_aggregation_config_lag_type"
  get_openconfig_if_aggregate_interfaces_interface_aggregation_config_lag_type:
    type: "object"
    properties:
      openconfig-if-aggregate:lag-type:
        type: "string"
        enum:
        - "LACP"
        - "STATIC"
  openconfig_if_aggregate_interfaces_interface_aggregation_config_min_links:
    type: "object"
    properties:
      openconfig-if-aggregate:min-links:
        type: "integer"
        format: "int32"
  put_openconfig_if_aggregate_interfaces_interface_aggregation_config_min_links:
    allOf:
    - $ref: "#/definitions/openconfig_if_aggregate_interfaces_interface_aggregation_config_min_links"
  patch_openconfig_if_aggregate_interfaces_interface_aggregation_config_min_links:
    allOf:
    - $ref: "#/definitions/openconfig_if_aggregate_interfaces_interface_aggregation_config_min_links"
  get_openconfig_if_aggregate_interfaces_interface_aggregation_config_min_links:
    type: "object"
    properties:
      openconfig-if-aggregate:min-links:
        type: "integer"
        format: "int32"
  get_openconfig_if_aggregate_interfaces_interface_aggregation_state:
    type: "object"
    properties:
      openconfig-if-aggregate:state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifaggregateaggregation_state"
  get_openconfig_if_aggregate_interfaces_interface_aggregation_state_lag_type:
    type: "object"
    properties:
      openconfig-if-aggregate:lag-type:
        type: "string"
        enum:
        - "LACP"
        - "STATIC"
  get_openconfig_if_aggregate_interfaces_interface_aggregation_state_min_links:
    type: "object"
    properties:
      openconfig-if-aggregate:min-links:
        type: "integer"
        format: "int32"
  get_openconfig_if_aggregate_interfaces_interface_aggregation_state_lag_speed:
    type: "object"
    properties:
      openconfig-if-aggregate:lag-speed:
        type: "integer"
        format: "int32"
  get_openconfig_if_aggregate_interfaces_interface_aggregation_state_member:
    type: "object"
    properties:
      openconfig-if-aggregate:member:
        type: "array"
        items:
          type: "string"
  openconfig_vlan_interfaces_interface_aggregation_switched_vlan:
    type: "object"
    properties:
      openconfig-vlan:switched-vlan:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan"
  put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_aggregation_switched_vlan"
  patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_aggregation_switched_vlan"
  get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan:
    type: "object"
    properties:
      openconfig-vlan:switched-vlan:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan"
  openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config:
    type: "object"
    properties:
      openconfig-vlan:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan_config"
  post_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config"
  put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config"
  patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config"
  get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config:
    type: "object"
    properties:
      openconfig-vlan:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan_config"
  openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_interface_mode:
    type: "object"
    properties:
      openconfig-vlan:interface-mode:
        type: "string"
        enum:
        - "ACCESS"
        - "TRUNK"
  post_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_interface_mode:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_interface_mode"
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_native_vlan"
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_access_vlan"
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans"
  put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_interface_mode:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_interface_mode"
  patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_interface_mode:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_interface_mode"
  get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_interface_mode:
    type: "object"
    properties:
      openconfig-vlan:interface-mode:
        type: "string"
        enum:
        - "ACCESS"
        - "TRUNK"
  openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_native_vlan:
    type: "object"
    properties:
      openconfig-vlan:native-vlan:
        type: "integer"
        format: "int32"
  put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_native_vlan:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_native_vlan"
  patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_native_vlan:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_native_vlan"
  get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_native_vlan:
    type: "object"
    properties:
      openconfig-vlan:native-vlan:
        type: "integer"
        format: "int32"
  openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_access_vlan:
    type: "object"
    properties:
      openconfig-vlan:access-vlan:
        type: "integer"
        format: "int32"
  put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_access_vlan:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_access_vlan"
  patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_access_vlan:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_access_vlan"
  get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_access_vlan:
    type: "object"
    properties:
      openconfig-vlan:access-vlan:
        type: "integer"
        format: "int32"
  openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans:
    type: "object"
    properties:
      openconfig-vlan:trunk-vlans:
        type: "array"
        items:
          type: "string"
  put_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans"
  patch_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans"
  get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_config_trunk_vlans:
    type: "object"
    properties:
      openconfig-vlan:trunk-vlans:
        type: "array"
        items:
          type: "string"
  get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_state:
    type: "object"
    properties:
      openconfig-vlan:state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan_config"
  get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_state_interface_mode:
    type: "object"
    properties:
      openconfig-vlan:interface-mode:
        type: "string"
        enum:
        - "ACCESS"
        - "TRUNK"
  get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_state_native_vlan:
    type: "object"
    properties:
      openconfig-vlan:native-vlan:
        type: "integer"
        format: "int32"
  get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_state_access_vlan:
    type: "object"
    properties:
      openconfig-vlan:access-vlan:
        type: "integer"
        format: "int32"
  get_openconfig_vlan_interfaces_interface_aggregation_switched_vlan_state_trunk_vlans:
    type: "object"
    properties:
      openconfig-vlan:trunk-vlans:
        type: "array"
        items:
          type: "string"
  openconfig_vlan_interfaces_interface_routed_vlan:
    type: "object"
    properties:
      openconfig-vlan:routed-vlan:
        $ref: "#/definitions/openconfig_vlan_interfaces_interface_routed_vlan_openconfigvlanroutedvlan"
  put_openconfig_vlan_interfaces_interface_routed_vlan:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_routed_vlan"
  patch_openconfig_vlan_interfaces_interface_routed_vlan:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_routed_vlan"
  get_openconfig_vlan_interfaces_interface_routed_vlan:
    type: "object"
    properties:
      openconfig-vlan:routed-vlan:
        $ref: "#/definitions/get_openconfig_vlan_interfaces_interface_routed_vlan_openconfigvlanroutedvlan"
  openconfig_vlan_interfaces_interface_routed_vlan_config:
    type: "object"
    properties:
      openconfig-vlan:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigvlanroutedvlan_config"
  post_openconfig_vlan_interfaces_interface_routed_vlan_config:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_routed_vlan_config"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6"
  put_openconfig_vlan_interfaces_interface_routed_vlan_config:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_routed_vlan_config"
  patch_openconfig_vlan_interfaces_interface_routed_vlan_config:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_routed_vlan_config"
  get_openconfig_vlan_interfaces_interface_routed_vlan_config:
    type: "object"
    properties:
      openconfig-vlan:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigvlanroutedvlan_config"
  openconfig_vlan_interfaces_interface_routed_vlan_config_vlan:
    type: "object"
    properties:
      openconfig-vlan:vlan:
        type: "string"
  post_openconfig_vlan_interfaces_interface_routed_vlan_config_vlan:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_routed_vlan_config_vlan"
  put_openconfig_vlan_interfaces_interface_routed_vlan_config_vlan:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_routed_vlan_config_vlan"
  patch_openconfig_vlan_interfaces_interface_routed_vlan_config_vlan:
    allOf:
    - $ref: "#/definitions/openconfig_vlan_interfaces_interface_routed_vlan_config_vlan"
  get_openconfig_vlan_interfaces_interface_routed_vlan_config_vlan:
    type: "object"
    properties:
      openconfig-vlan:vlan:
        type: "string"
  get_openconfig_vlan_interfaces_interface_routed_vlan_state:
    type: "object"
    properties:
      openconfig-vlan:state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigvlanroutedvlan_config"
  get_openconfig_vlan_interfaces_interface_routed_vlan_state_vlan:
    type: "object"
    properties:
      openconfig-vlan:vlan:
        type: "string"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4:
    type: "object"
    properties:
      openconfig-if-ip:ipv4:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4:
    type: "object"
    properties:
      openconfig-if-ip:ipv4:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses:
    type: "object"
    properties:
      openconfig-if-ip:addresses:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses:
    type: "object"
    properties:
      openconfig-if-ip:addresses:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address:
    type: "object"
    properties:
      openconfig-if-ip:address:
        type: "array"
        items:
          $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_address"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address:
    type: "object"
    properties:
      openconfig-if-ip:address:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_address"
  post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address"
  put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address"
  patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_config"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_config"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config_prefix_length:
    type: "object"
    properties:
      openconfig-if-ip:prefix-length:
        type: "integer"
        format: "int32"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config_prefix_length:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config_prefix_length"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config_prefix_length:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config_prefix_length"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config_prefix_length:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config_prefix_length"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_config_prefix_length:
    type: "object"
    properties:
      openconfig-if-ip:prefix-length:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_state"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_state_ip:
    type: "object"
    properties:
      openconfig-if-ip:ip:
        type: "string"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_state_prefix_length:
    type: "object"
    properties:
      openconfig-if-ip:prefix-length:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_state_origin:
    type: "object"
    properties:
      openconfig-if-ip:origin:
        type: "string"
        enum:
        - "OTHER"
        - "STATIC"
        - "DHCP"
        - "LINK_LAYER"
        - "RANDOM"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp:
    type: "object"
    properties:
      openconfig-if-ip:vrrp:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp:
    type: "object"
    properties:
      openconfig-if-ip:vrrp:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group:
    type: "object"
    properties:
      openconfig-if-ip:vrrp-group:
        type: "array"
        items:
          $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_vrrpgroup"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group:
    type: "object"
    properties:
      openconfig-if-ip:vrrp-group:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_vrrpgroup"
  post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group"
  put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group"
  patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_config"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_config"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address:
    type: "object"
    properties:
      openconfig-if-ip:virtual-address:
        type: "array"
        items:
          type: "string"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_priority"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_virtual_address:
    type: "object"
    properties:
      openconfig-if-ip:virtual-address:
        type: "array"
        items:
          type: "string"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_priority:
    type: "object"
    properties:
      openconfig-if-ip:priority:
        type: "integer"
        format: "int32"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_priority:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_priority"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_priority:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_priority"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_priority:
    type: "object"
    properties:
      openconfig-if-ip:priority:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt:
    type: "object"
    properties:
      openconfig-if-ip:preempt:
        type: "boolean"
        format: "boolean"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt:
    type: "object"
    properties:
      openconfig-if-ip:preempt:
        type: "boolean"
        format: "boolean"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay:
    type: "object"
    properties:
      openconfig-if-ip:preempt-delay:
        type: "integer"
        format: "int32"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_preempt_delay:
    type: "object"
    properties:
      openconfig-if-ip:preempt-delay:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode:
    type: "object"
    properties:
      openconfig-if-ip:accept-mode:
        type: "boolean"
        format: "boolean"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_accept_mode:
    type: "object"
    properties:
      openconfig-if-ip:accept-mode:
        type: "boolean"
        format: "boolean"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval:
    type: "object"
    properties:
      openconfig-if-ip:advertisement-interval:
        type: "integer"
        format: "int32"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_config_advertisement_interval:
    type: "object"
    properties:
      openconfig-if-ip:advertisement-interval:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_state"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_virtual_router_id:
    type: "object"
    properties:
      openconfig-if-ip:virtual-router-id:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_virtual_address:
    type: "object"
    properties:
      openconfig-if-ip:virtual-address:
        type: "array"
        items:
          type: "string"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_priority:
    type: "object"
    properties:
      openconfig-if-ip:priority:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_preempt:
    type: "object"
    properties:
      openconfig-if-ip:preempt:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_preempt_delay:
    type: "object"
    properties:
      openconfig-if-ip:preempt-delay:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_accept_mode:
    type: "object"
    properties:
      openconfig-if-ip:accept-mode:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_advertisement_interval:
    type: "object"
    properties:
      openconfig-if-ip:advertisement-interval:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_state_current_priority:
    type: "object"
    properties:
      openconfig-if-ip:current-priority:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking:
    type: "object"
    properties:
      openconfig-if-ip:interface-tracking:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking:
    type: "object"
    properties:
      openconfig-if-ip:interface-tracking:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking_config"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking_config"
  ? openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface
  : type: "object"
    properties:
      openconfig-if-ip:track-interface:
        type: "array"
        items:
          type: "string"
  ? post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
  ? put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
  ? patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
  ? get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface
  : type: "object"
    properties:
      openconfig-if-ip:track-interface:
        type: "array"
        items:
          type: "string"
  ? openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement
  : type: "object"
    properties:
      openconfig-if-ip:priority-decrement:
        type: "integer"
        format: "int32"
  ? put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
  ? patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
  ? get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement
  : type: "object"
    properties:
      openconfig-if-ip:priority-decrement:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking_config"
  ? get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state_track_interface
  : type: "object"
    properties:
      openconfig-if-ip:track-interface:
        type: "array"
        items:
          type: "string"
  ? get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_addresses_address_vrrp_vrrp_group_interface_tracking_state_priority_decrement
  : type: "object"
    properties:
      openconfig-if-ip:priority-decrement:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp:
    type: "object"
    properties:
      openconfig-if-ip:proxy-arp:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_proxyarp"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp:
    type: "object"
    properties:
      openconfig-if-ip:proxy-arp:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_proxyarp"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_proxyarp_config"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_proxyarp_config"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config_mode:
    type: "object"
    properties:
      openconfig-if-ip:mode:
        type: "string"
        enum:
        - "DISABLE"
        - "REMOTE_ONLY"
        - "ALL"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config_mode:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config_mode"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config_mode:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config_mode"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config_mode:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config_mode"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_config_mode:
    type: "object"
    properties:
      openconfig-if-ip:mode:
        type: "string"
        enum:
        - "DISABLE"
        - "REMOTE_ONLY"
        - "ALL"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_proxyarp_config"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_proxy_arp_state_mode:
    type: "object"
    properties:
      openconfig-if-ip:mode:
        type: "string"
        enum:
        - "DISABLE"
        - "REMOTE_ONLY"
        - "ALL"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors:
    type: "object"
    properties:
      openconfig-if-ip:neighbors:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors:
    type: "object"
    properties:
      openconfig-if-ip:neighbors:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor:
    type: "object"
    properties:
      openconfig-if-ip:neighbor:
        type: "array"
        items:
          $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_neighbor"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor:
    type: "object"
    properties:
      openconfig-if-ip:neighbor:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_neighbor"
  post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor"
  put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor"
  patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_config"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_config"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config_link_layer_address:
    type: "object"
    properties:
      openconfig-if-ip:link-layer-address:
        type: "string"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config_link_layer_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config_link_layer_address"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config_link_layer_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config_link_layer_address"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config_link_layer_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config_link_layer_address"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_config_link_layer_address:
    type: "object"
    properties:
      openconfig-if-ip:link-layer-address:
        type: "string"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_state"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_state_ip:
    type: "object"
    properties:
      openconfig-if-ip:ip:
        type: "string"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_state_link_layer_address:
    type: "object"
    properties:
      openconfig-if-ip:link-layer-address:
        type: "string"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_neighbors_neighbor_state_origin:
    type: "object"
    properties:
      openconfig-if-ip:origin:
        type: "string"
        enum:
        - "OTHER"
        - "STATIC"
        - "DYNAMIC"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered:
    type: "object"
    properties:
      openconfig-if-ip:unnumbered:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered:
    type: "object"
    properties:
      openconfig-if-ip:unnumbered:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_config"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_config"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config_enabled"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config_enabled"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config_enabled"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_config_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_config"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_state_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref:
    type: "object"
    properties:
      openconfig-if-ip:interface-ref:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref:
    type: "object"
    properties:
      openconfig-if-ip:interface-ref:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref_config"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref_config"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_interface:
    type: "object"
    properties:
      openconfig-if-ip:interface:
        type: "string"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_interface:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_interface"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_subinterface"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_interface:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_interface"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_interface:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_interface"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_interface:
    type: "object"
    properties:
      openconfig-if-ip:interface:
        type: "string"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_subinterface:
    type: "object"
    properties:
      openconfig-if-ip:subinterface:
        type: "integer"
        format: "int32"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_subinterface:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_subinterface"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_subinterface:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_subinterface"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_config_subinterface:
    type: "object"
    properties:
      openconfig-if-ip:subinterface:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref_config"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_state_interface:
    type: "object"
    properties:
      openconfig-if-ip:interface:
        type: "string"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_unnumbered_interface_ref_state_subinterface:
    type: "object"
    properties:
      openconfig-if-ip:subinterface:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_config"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_config"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_enabled"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_mtu"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_dhcp_client"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_enabled"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_enabled"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_mtu:
    type: "object"
    properties:
      openconfig-if-ip:mtu:
        type: "integer"
        format: "int32"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_mtu:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_mtu"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_mtu:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_mtu"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_mtu:
    type: "object"
    properties:
      openconfig-if-ip:mtu:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_dhcp_client:
    type: "object"
    properties:
      openconfig-if-ip:dhcp-client:
        type: "boolean"
        format: "boolean"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_dhcp_client:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_dhcp_client"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_dhcp_client:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_dhcp_client"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_config_dhcp_client:
    type: "object"
    properties:
      openconfig-if-ip:dhcp-client:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_state"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_mtu:
    type: "object"
    properties:
      openconfig-if-ip:mtu:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_dhcp_client:
    type: "object"
    properties:
      openconfig-if-ip:dhcp-client:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters:
    type: "object"
    properties:
      openconfig-if-ip:counters:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_state_counters"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_pkts:
    type: "object"
    properties:
      openconfig-if-ip:in-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_octets:
    type: "object"
    properties:
      openconfig-if-ip:in-octets:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_error_pkts:
    type: "object"
    properties:
      openconfig-if-ip:in-error-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_forwarded_pkts:
    type: "object"
    properties:
      openconfig-if-ip:in-forwarded-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_forwarded_octets:
    type: "object"
    properties:
      openconfig-if-ip:in-forwarded-octets:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_in_discarded_pkts:
    type: "object"
    properties:
      openconfig-if-ip:in-discarded-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_pkts:
    type: "object"
    properties:
      openconfig-if-ip:out-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_octets:
    type: "object"
    properties:
      openconfig-if-ip:out-octets:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_error_pkts:
    type: "object"
    properties:
      openconfig-if-ip:out-error-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_forwarded_pkts:
    type: "object"
    properties:
      openconfig-if-ip:out-forwarded-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_forwarded_octets:
    type: "object"
    properties:
      openconfig-if-ip:out-forwarded-octets:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv4_state_counters_out_discarded_pkts:
    type: "object"
    properties:
      openconfig-if-ip:out-discarded-pkts:
        type: "integer"
        format: "int64"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6:
    type: "object"
    properties:
      openconfig-if-ip:ipv6:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6:
    type: "object"
    properties:
      openconfig-if-ip:ipv6:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses:
    type: "object"
    properties:
      openconfig-if-ip:addresses:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses:
    type: "object"
    properties:
      openconfig-if-ip:addresses:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address:
    type: "object"
    properties:
      openconfig-if-ip:address:
        type: "array"
        items:
          $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_address"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address:
    type: "object"
    properties:
      openconfig-if-ip:address:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_address"
  post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address"
  put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address"
  patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_config"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_config"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config_prefix_length:
    type: "object"
    properties:
      openconfig-if-ip:prefix-length:
        type: "integer"
        format: "int32"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config_prefix_length:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config_prefix_length"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config_prefix_length:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config_prefix_length"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config_prefix_length:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config_prefix_length"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_config_prefix_length:
    type: "object"
    properties:
      openconfig-if-ip:prefix-length:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_state"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_state_ip:
    type: "object"
    properties:
      openconfig-if-ip:ip:
        type: "string"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_state_prefix_length:
    type: "object"
    properties:
      openconfig-if-ip:prefix-length:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_state_origin:
    type: "object"
    properties:
      openconfig-if-ip:origin:
        type: "string"
        enum:
        - "OTHER"
        - "STATIC"
        - "DHCP"
        - "LINK_LAYER"
        - "RANDOM"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_state_status:
    type: "object"
    properties:
      openconfig-if-ip:status:
        type: "string"
        enum:
        - "PREFERRED"
        - "DEPRECATED"
        - "INVALID"
        - "INACCESSIBLE"
        - "UNKNOWN"
        - "TENTATIVE"
        - "DUPLICATE"
        - "OPTIMISTIC"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp:
    type: "object"
    properties:
      openconfig-if-ip:vrrp:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp:
    type: "object"
    properties:
      openconfig-if-ip:vrrp:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group:
    type: "object"
    properties:
      openconfig-if-ip:vrrp-group:
        type: "array"
        items:
          $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp_vrrpgroup"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group:
    type: "object"
    properties:
      openconfig-if-ip:vrrp-group:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp_vrrpgroup"
  post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group"
  put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group"
  patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp_config"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp_config"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address:
    type: "object"
    properties:
      openconfig-if-ip:virtual-address:
        type: "array"
        items:
          type: "string"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_priority"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_address:
    type: "object"
    properties:
      openconfig-if-ip:virtual-address:
        type: "array"
        items:
          type: "string"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_priority:
    type: "object"
    properties:
      openconfig-if-ip:priority:
        type: "integer"
        format: "int32"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_priority:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_priority"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_priority:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_priority"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_priority:
    type: "object"
    properties:
      openconfig-if-ip:priority:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt:
    type: "object"
    properties:
      openconfig-if-ip:preempt:
        type: "boolean"
        format: "boolean"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt:
    type: "object"
    properties:
      openconfig-if-ip:preempt:
        type: "boolean"
        format: "boolean"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay:
    type: "object"
    properties:
      openconfig-if-ip:preempt-delay:
        type: "integer"
        format: "int32"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_preempt_delay:
    type: "object"
    properties:
      openconfig-if-ip:preempt-delay:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode:
    type: "object"
    properties:
      openconfig-if-ip:accept-mode:
        type: "boolean"
        format: "boolean"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_accept_mode:
    type: "object"
    properties:
      openconfig-if-ip:accept-mode:
        type: "boolean"
        format: "boolean"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval:
    type: "object"
    properties:
      openconfig-if-ip:advertisement-interval:
        type: "integer"
        format: "int32"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_advertisement_interval:
    type: "object"
    properties:
      openconfig-if-ip:advertisement-interval:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local:
    type: "object"
    properties:
      openconfig-if-ip:virtual-link-local:
        type: "string"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_config_virtual_link_local:
    type: "object"
    properties:
      openconfig-if-ip:virtual-link-local:
        type: "string"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp_state"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_router_id:
    type: "object"
    properties:
      openconfig-if-ip:virtual-router-id:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_address:
    type: "object"
    properties:
      openconfig-if-ip:virtual-address:
        type: "array"
        items:
          type: "string"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_priority:
    type: "object"
    properties:
      openconfig-if-ip:priority:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_preempt:
    type: "object"
    properties:
      openconfig-if-ip:preempt:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_preempt_delay:
    type: "object"
    properties:
      openconfig-if-ip:preempt-delay:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_accept_mode:
    type: "object"
    properties:
      openconfig-if-ip:accept-mode:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_advertisement_interval:
    type: "object"
    properties:
      openconfig-if-ip:advertisement-interval:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_current_priority:
    type: "object"
    properties:
      openconfig-if-ip:current-priority:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_state_virtual_link_local:
    type: "object"
    properties:
      openconfig-if-ip:virtual-link-local:
        type: "string"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking:
    type: "object"
    properties:
      openconfig-if-ip:interface-tracking:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking:
    type: "object"
    properties:
      openconfig-if-ip:interface-tracking:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking_config"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking_config"
  ? openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface
  : type: "object"
    properties:
      openconfig-if-ip:track-interface:
        type: "array"
        items:
          type: "string"
  ? post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
  ? put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
  ? patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface"
  ? get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_track_interface
  : type: "object"
    properties:
      openconfig-if-ip:track-interface:
        type: "array"
        items:
          type: "string"
  ? openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement
  : type: "object"
    properties:
      openconfig-if-ip:priority-decrement:
        type: "integer"
        format: "int32"
  ? put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
  ? patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement
  : allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement"
  ? get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_config_priority_decrement
  : type: "object"
    properties:
      openconfig-if-ip:priority-decrement:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking_config"
  ? get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state_track_interface
  : type: "object"
    properties:
      openconfig-if-ip:track-interface:
        type: "array"
        items:
          type: "string"
  ? get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_addresses_address_vrrp_vrrp_group_interface_tracking_state_priority_decrement
  : type: "object"
    properties:
      openconfig-if-ip:priority-decrement:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement:
    type: "object"
    properties:
      openconfig-if-ip:router-advertisement:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_routeradvertisement"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement:
    type: "object"
    properties:
      openconfig-if-ip:router-advertisement:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_routeradvertisement"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_routeradvertisement_config"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_routeradvertisement_config"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_interval:
    type: "object"
    properties:
      openconfig-if-ip:interval:
        type: "integer"
        format: "int32"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_interval:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_interval"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_lifetime"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_suppress"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_interval:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_interval"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_interval:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_interval"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_interval:
    type: "object"
    properties:
      openconfig-if-ip:interval:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_lifetime:
    type: "object"
    properties:
      openconfig-if-ip:lifetime:
        type: "integer"
        format: "int32"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_lifetime:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_lifetime"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_lifetime:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_lifetime"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_lifetime:
    type: "object"
    properties:
      openconfig-if-ip:lifetime:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_suppress:
    type: "object"
    properties:
      openconfig-if-ip:suppress:
        type: "boolean"
        format: "boolean"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_suppress:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_suppress"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_suppress:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_suppress"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_config_suppress:
    type: "object"
    properties:
      openconfig-if-ip:suppress:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_routeradvertisement_config"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_state_interval:
    type: "object"
    properties:
      openconfig-if-ip:interval:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_state_lifetime:
    type: "object"
    properties:
      openconfig-if-ip:lifetime:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_router_advertisement_state_suppress:
    type: "object"
    properties:
      openconfig-if-ip:suppress:
        type: "boolean"
        format: "boolean"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors:
    type: "object"
    properties:
      openconfig-if-ip:neighbors:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors:
    type: "object"
    properties:
      openconfig-if-ip:neighbors:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_neighbors"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor:
    type: "object"
    properties:
      openconfig-if-ip:neighbor:
        type: "array"
        items:
          $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_neighbor"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor:
    type: "object"
    properties:
      openconfig-if-ip:neighbor:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_neighbors_neighbor"
  post_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor"
  put_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor"
  patch_list_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_config"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_config"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config_link_layer_address:
    type: "object"
    properties:
      openconfig-if-ip:link-layer-address:
        type: "string"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config_link_layer_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config_link_layer_address"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config_link_layer_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config_link_layer_address"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config_link_layer_address:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config_link_layer_address"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_config_link_layer_address:
    type: "object"
    properties:
      openconfig-if-ip:link-layer-address:
        type: "string"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_neighbors_state"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state_ip:
    type: "object"
    properties:
      openconfig-if-ip:ip:
        type: "string"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state_link_layer_address:
    type: "object"
    properties:
      openconfig-if-ip:link-layer-address:
        type: "string"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state_origin:
    type: "object"
    properties:
      openconfig-if-ip:origin:
        type: "string"
        enum:
        - "OTHER"
        - "STATIC"
        - "DYNAMIC"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state_is_router:
    type: "object"
    properties:
      openconfig-if-ip:is-router:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_neighbors_neighbor_state_neighbor_state:
    type: "object"
    properties:
      openconfig-if-ip:neighbor-state:
        type: "string"
        enum:
        - "INCOMPLETE"
        - "REACHABLE"
        - "STALE"
        - "DELAY"
        - "PROBE"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered:
    type: "object"
    properties:
      openconfig-if-ip:unnumbered:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered:
    type: "object"
    properties:
      openconfig-if-ip:unnumbered:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_config"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_config"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config_enabled"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config_enabled"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config_enabled"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_config_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_config"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_state_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref:
    type: "object"
    properties:
      openconfig-if-ip:interface-ref:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref:
    type: "object"
    properties:
      openconfig-if-ip:interface-ref:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref_config"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref_config"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_interface:
    type: "object"
    properties:
      openconfig-if-ip:interface:
        type: "string"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_interface:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_interface"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_subinterface"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_interface:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_interface"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_interface:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_interface"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_interface:
    type: "object"
    properties:
      openconfig-if-ip:interface:
        type: "string"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_subinterface:
    type: "object"
    properties:
      openconfig-if-ip:subinterface:
        type: "integer"
        format: "int32"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_subinterface:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_subinterface"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_subinterface:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_subinterface"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_config_subinterface:
    type: "object"
    properties:
      openconfig-if-ip:subinterface:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref_config"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_state_interface:
    type: "object"
    properties:
      openconfig-if-ip:interface:
        type: "string"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_unnumbered_interface_ref_state_subinterface:
    type: "object"
    properties:
      openconfig-if-ip:subinterface:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_config"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config:
    type: "object"
    properties:
      openconfig-if-ip:config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_config"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  post_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_enabled"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_mtu"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dup_addr_detect_transmits"
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dhcp_client"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_enabled"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_enabled:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_enabled"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_mtu:
    type: "object"
    properties:
      openconfig-if-ip:mtu:
        type: "integer"
        format: "int32"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_mtu:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_mtu"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_mtu:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_mtu"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_mtu:
    type: "object"
    properties:
      openconfig-if-ip:mtu:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dup_addr_detect_transmits:
    type: "object"
    properties:
      openconfig-if-ip:dup-addr-detect-transmits:
        type: "integer"
        format: "int32"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dup_addr_detect_transmits:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dup_addr_detect_transmits"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dup_addr_detect_transmits:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dup_addr_detect_transmits"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dup_addr_detect_transmits:
    type: "object"
    properties:
      openconfig-if-ip:dup-addr-detect-transmits:
        type: "integer"
        format: "int32"
  openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dhcp_client:
    type: "object"
    properties:
      openconfig-if-ip:dhcp-client:
        type: "boolean"
        format: "boolean"
  put_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dhcp_client:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dhcp_client"
  patch_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dhcp_client:
    allOf:
    - $ref: "#/definitions/openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dhcp_client"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_config_dhcp_client:
    type: "object"
    properties:
      openconfig-if-ip:dhcp-client:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state:
    type: "object"
    properties:
      openconfig-if-ip:state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_state"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_enabled:
    type: "object"
    properties:
      openconfig-if-ip:enabled:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_mtu:
    type: "object"
    properties:
      openconfig-if-ip:mtu:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_dup_addr_detect_transmits:
    type: "object"
    properties:
      openconfig-if-ip:dup-addr-detect-transmits:
        type: "integer"
        format: "int32"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_dhcp_client:
    type: "object"
    properties:
      openconfig-if-ip:dhcp-client:
        type: "boolean"
        format: "boolean"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters:
    type: "object"
    properties:
      openconfig-if-ip:counters:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_state_counters"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_pkts:
    type: "object"
    properties:
      openconfig-if-ip:in-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_octets:
    type: "object"
    properties:
      openconfig-if-ip:in-octets:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_error_pkts:
    type: "object"
    properties:
      openconfig-if-ip:in-error-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_forwarded_pkts:
    type: "object"
    properties:
      openconfig-if-ip:in-forwarded-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_forwarded_octets:
    type: "object"
    properties:
      openconfig-if-ip:in-forwarded-octets:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_in_discarded_pkts:
    type: "object"
    properties:
      openconfig-if-ip:in-discarded-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_pkts:
    type: "object"
    properties:
      openconfig-if-ip:out-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_octets:
    type: "object"
    properties:
      openconfig-if-ip:out-octets:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_error_pkts:
    type: "object"
    properties:
      openconfig-if-ip:out-error-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_forwarded_pkts:
    type: "object"
    properties:
      openconfig-if-ip:out-forwarded-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_forwarded_octets:
    type: "object"
    properties:
      openconfig-if-ip:out-forwarded-octets:
        type: "integer"
        format: "int64"
  get_openconfig_if_ip_interfaces_interface_routed_vlan_ipv6_state_counters_out_discarded_pkts:
    type: "object"
    properties:
      openconfig-if-ip:out-discarded-pkts:
        type: "integer"
        format: "int64"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_config:
    properties:
      name:
        type: "string"
      type:
        type: "string"
      mtu:
        type: "integer"
        format: "int32"
      loopback-mode:
        type: "boolean"
        format: "boolean"
      description:
        type: "string"
      enabled:
        type: "boolean"
        format: "boolean"
      openconfig-vlan:tpid:
        type: "string"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_holdtime_config:
    properties:
      up:
        type: "integer"
        format: "int32"
      down:
        type: "integer"
        format: "int32"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_holdtime:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_holdtime_config"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_config:
    properties:
      index:
        type: "integer"
        format: "int32"
      description:
        type: "string"
      enabled:
        type: "boolean"
        format: "boolean"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigvlanvlan_config:
    properties:
      vlan-id:
        type: "string"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigvlanvlan:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigvlanvlan_config"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_config:
    properties:
      ip:
        type: "string"
      prefix-length:
        type: "integer"
        format: "int32"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_config:
    properties:
      virtual-router-id:
        type: "integer"
        format: "int32"
      virtual-address:
        type: "array"
        items:
          type: "string"
      priority:
        type: "integer"
        format: "int32"
      preempt:
        type: "boolean"
        format: "boolean"
      preempt-delay:
        type: "integer"
        format: "int32"
      accept-mode:
        type: "boolean"
        format: "boolean"
      advertisement-interval:
        type: "integer"
        format: "int32"
  ? openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking_config
  : properties:
      track-interface:
        type: "array"
        items:
          type: "string"
      priority-decrement:
        type: "integer"
        format: "int32"
  ? openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking
  : properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking_config"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_vrrpgroup:
    required:
    - "virtual-router-id"
    properties:
      virtual-router-id:
        type: "integer"
        format: "int32"
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_config"
      interface-tracking:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp:
    properties:
      vrrp-group:
        type: "array"
        items:
          $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_vrrpgroup"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_address:
    required:
    - "ip"
    properties:
      ip:
        type: "string"
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_config"
      vrrp:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses:
    properties:
      address:
        type: "array"
        items:
          $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_address"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_proxyarp_config:
    properties:
      mode:
        type: "string"
        enum:
        - "DISABLE"
        - "REMOTE_ONLY"
        - "ALL"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_proxyarp:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_proxyarp_config"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_config:
    properties:
      ip:
        type: "string"
      link-layer-address:
        type: "string"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_neighbor:
    required:
    - "ip"
    properties:
      ip:
        type: "string"
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_config"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors:
    properties:
      neighbor:
        type: "array"
        items:
          $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_neighbor"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_config:
    properties:
      enabled:
        type: "boolean"
        format: "boolean"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref_config:
    properties:
      interface:
        type: "string"
      subinterface:
        type: "integer"
        format: "int32"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref_config"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_config"
      interface-ref:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_config:
    properties:
      enabled:
        type: "boolean"
        format: "boolean"
      mtu:
        type: "integer"
        format: "int32"
      dhcp-client:
        type: "boolean"
        format: "boolean"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4:
    properties:
      addresses:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses"
      proxy-arp:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_proxyarp"
      neighbors:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors"
      unnumbered:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered"
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_config"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp_config:
    properties:
      virtual-router-id:
        type: "integer"
        format: "int32"
      virtual-address:
        type: "array"
        items:
          type: "string"
      priority:
        type: "integer"
        format: "int32"
      preempt:
        type: "boolean"
        format: "boolean"
      preempt-delay:
        type: "integer"
        format: "int32"
      accept-mode:
        type: "boolean"
        format: "boolean"
      advertisement-interval:
        type: "integer"
        format: "int32"
      virtual-link-local:
        type: "string"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp_vrrpgroup:
    required:
    - "virtual-router-id"
    properties:
      virtual-router-id:
        type: "integer"
        format: "int32"
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp_config"
      interface-tracking:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp:
    properties:
      vrrp-group:
        type: "array"
        items:
          $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp_vrrpgroup"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_address:
    required:
    - "ip"
    properties:
      ip:
        type: "string"
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_config"
      vrrp:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses:
    properties:
      address:
        type: "array"
        items:
          $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_address"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_routeradvertisement_config:
    properties:
      interval:
        type: "integer"
        format: "int32"
      lifetime:
        type: "integer"
        format: "int32"
      suppress:
        type: "boolean"
        format: "boolean"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_routeradvertisement:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_routeradvertisement_config"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_config:
    properties:
      enabled:
        type: "boolean"
        format: "boolean"
      mtu:
        type: "integer"
        format: "int32"
      dup-addr-detect-transmits:
        type: "integer"
        format: "int32"
      dhcp-client:
        type: "boolean"
        format: "boolean"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6:
    properties:
      addresses:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses"
      router-advertisement:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_routeradvertisement"
      neighbors:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors"
      unnumbered:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered"
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_config"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_subinterface:
    required:
    - "index"
    properties:
      index:
        type: "integer"
        format: "int32"
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_config"
      openconfig-vlan:vlan:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigvlanvlan"
      openconfig-if-ip:ipv4:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4"
      openconfig-if-ip:ipv6:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces:
    properties:
      subinterface:
        type: "array"
        items:
          $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_subinterface"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_config:
    properties:
      mac-address:
        type: "string"
      auto-negotiate:
        type: "boolean"
        format: "boolean"
      duplex-mode:
        type: "string"
        enum:
        - "FULL"
        - "HALF"
      port-speed:
        type: "string"
      enable-flow-control:
        type: "boolean"
        format: "boolean"
      openconfig-if-aggregate:aggregate-id:
        type: "string"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan_config:
    properties:
      interface-mode:
        type: "string"
        enum:
        - "ACCESS"
        - "TRUNK"
      native-vlan:
        type: "integer"
        format: "int32"
      access-vlan:
        type: "integer"
        format: "int32"
      trunk-vlans:
        type: "array"
        items:
          type: "string"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan_config"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_config"
      openconfig-vlan:switched-vlan:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifaggregateaggregation_config:
    properties:
      lag-type:
        type: "string"
        enum:
        - "LACP"
        - "STATIC"
      min-links:
        type: "integer"
        format: "int32"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifaggregateaggregation:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifaggregateaggregation_config"
      openconfig-vlan:switched-vlan:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigvlanroutedvlan_config:
    properties:
      vlan:
        type: "string"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigvlanroutedvlan:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigvlanroutedvlan_config"
      openconfig-if-ip:ipv4:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4"
      openconfig-if-ip:ipv6:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_interface:
    required:
    - "name"
    properties:
      name:
        type: "string"
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_config"
      hold-time:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_holdtime"
      subinterfaces:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces"
      openconfig-if-ethernet:ethernet:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet"
      openconfig-if-aggregate:aggregation:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifaggregateaggregation"
      openconfig-vlan:routed-vlan:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigvlanroutedvlan"
  openconfig_interfaces_interfaces_openconfiginterfacesinterfaces:
    properties:
      interface:
        type: "array"
        items:
          $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_interface"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_state_counters:
    properties:
      in-octets:
        type: "integer"
        format: "int64"
      in-pkts:
        type: "integer"
        format: "int64"
      in-unicast-pkts:
        type: "integer"
        format: "int64"
      in-broadcast-pkts:
        type: "integer"
        format: "int64"
      in-multicast-pkts:
        type: "integer"
        format: "int64"
      in-discards:
        type: "integer"
        format: "int64"
      in-errors:
        type: "integer"
        format: "int64"
      in-unknown-protos:
        type: "integer"
        format: "int64"
      in-fcs-errors:
        type: "integer"
        format: "int64"
      out-octets:
        type: "integer"
        format: "int64"
      out-pkts:
        type: "integer"
        format: "int64"
      out-unicast-pkts:
        type: "integer"
        format: "int64"
      out-broadcast-pkts:
        type: "integer"
        format: "int64"
      out-multicast-pkts:
        type: "integer"
        format: "int64"
      out-discards:
        type: "integer"
        format: "int64"
      out-errors:
        type: "integer"
        format: "int64"
      carrier-transitions:
        type: "integer"
        format: "int64"
      last-clear:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_state:
    properties:
      name:
        type: "string"
      type:
        type: "string"
      mtu:
        type: "integer"
        format: "int32"
      loopback-mode:
        type: "boolean"
        format: "boolean"
      description:
        type: "string"
      enabled:
        type: "boolean"
        format: "boolean"
      ifindex:
        type: "integer"
        format: "int32"
      admin-status:
        type: "string"
        enum:
        - "UP"
        - "DOWN"
        - "TESTING"
      oper-status:
        type: "string"
        enum:
        - "UP"
        - "DOWN"
        - "TESTING"
        - "UNKNOWN"
        - "DORMANT"
        - "NOT_PRESENT"
        - "LOWER_LAYER_DOWN"
      last-change:
        type: "integer"
        format: "int64"
      logical:
        type: "boolean"
        format: "boolean"
      counters:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_state_counters"
      openconfig-vlan:tpid:
        type: "string"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_holdtime:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_holdtime_config"
      state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_holdtime_config"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_state:
    properties:
      index:
        type: "integer"
        format: "int32"
      description:
        type: "string"
      enabled:
        type: "boolean"
        format: "boolean"
      name:
        type: "string"
      ifindex:
        type: "integer"
        format: "int32"
      admin-status:
        type: "string"
        enum:
        - "UP"
        - "DOWN"
        - "TESTING"
      oper-status:
        type: "string"
        enum:
        - "UP"
        - "DOWN"
        - "TESTING"
        - "UNKNOWN"
        - "DORMANT"
        - "NOT_PRESENT"
        - "LOWER_LAYER_DOWN"
      last-change:
        type: "integer"
        format: "int64"
      logical:
        type: "boolean"
        format: "boolean"
      counters:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_state_counters"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigvlanvlan:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigvlanvlan_config"
      state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigvlanvlan_config"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_state:
    properties:
      ip:
        type: "string"
      prefix-length:
        type: "integer"
        format: "int32"
      origin:
        type: "string"
        enum:
        - "OTHER"
        - "STATIC"
        - "DHCP"
        - "LINK_LAYER"
        - "RANDOM"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_state:
    properties:
      virtual-router-id:
        type: "integer"
        format: "int32"
      virtual-address:
        type: "array"
        items:
          type: "string"
      priority:
        type: "integer"
        format: "int32"
      preempt:
        type: "boolean"
        format: "boolean"
      preempt-delay:
        type: "integer"
        format: "int32"
      accept-mode:
        type: "boolean"
        format: "boolean"
      advertisement-interval:
        type: "integer"
        format: "int32"
      current-priority:
        type: "integer"
        format: "int32"
  ? get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking
  : properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking_config"
      state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking_config"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_vrrpgroup:
    required:
    - "virtual-router-id"
    properties:
      virtual-router-id:
        type: "integer"
        format: "int32"
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_config"
      state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_state"
      interface-tracking:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp:
    properties:
      vrrp-group:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_vrrpgroup"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_address:
    required:
    - "ip"
    properties:
      ip:
        type: "string"
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_config"
      state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_state"
      vrrp:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses:
    properties:
      address:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_address"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_proxyarp:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_proxyarp_config"
      state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_proxyarp_config"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_state:
    properties:
      ip:
        type: "string"
      link-layer-address:
        type: "string"
      origin:
        type: "string"
        enum:
        - "OTHER"
        - "STATIC"
        - "DYNAMIC"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_neighbor:
    required:
    - "ip"
    properties:
      ip:
        type: "string"
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_config"
      state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_state"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors:
    properties:
      neighbor:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_neighbor"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref_config"
      state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref_config"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_config"
      state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_config"
      interface-ref:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered_interfaceref"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_state_counters:
    properties:
      in-pkts:
        type: "integer"
        format: "int64"
      in-octets:
        type: "integer"
        format: "int64"
      in-error-pkts:
        type: "integer"
        format: "int64"
      in-forwarded-pkts:
        type: "integer"
        format: "int64"
      in-forwarded-octets:
        type: "integer"
        format: "int64"
      in-discarded-pkts:
        type: "integer"
        format: "int64"
      out-pkts:
        type: "integer"
        format: "int64"
      out-octets:
        type: "integer"
        format: "int64"
      out-error-pkts:
        type: "integer"
        format: "int64"
      out-forwarded-pkts:
        type: "integer"
        format: "int64"
      out-forwarded-octets:
        type: "integer"
        format: "int64"
      out-discarded-pkts:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_state:
    properties:
      enabled:
        type: "boolean"
        format: "boolean"
      mtu:
        type: "integer"
        format: "int32"
      dhcp-client:
        type: "boolean"
        format: "boolean"
      counters:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_state_counters"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4:
    properties:
      addresses:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses"
      proxy-arp:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_proxyarp"
      neighbors:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors"
      unnumbered:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered"
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_config"
      state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_state"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_state:
    properties:
      ip:
        type: "string"
      prefix-length:
        type: "integer"
        format: "int32"
      origin:
        type: "string"
        enum:
        - "OTHER"
        - "STATIC"
        - "DHCP"
        - "LINK_LAYER"
        - "RANDOM"
      status:
        type: "string"
        enum:
        - "PREFERRED"
        - "DEPRECATED"
        - "INVALID"
        - "INACCESSIBLE"
        - "UNKNOWN"
        - "TENTATIVE"
        - "DUPLICATE"
        - "OPTIMISTIC"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp_state:
    properties:
      virtual-router-id:
        type: "integer"
        format: "int32"
      virtual-address:
        type: "array"
        items:
          type: "string"
      priority:
        type: "integer"
        format: "int32"
      preempt:
        type: "boolean"
        format: "boolean"
      preempt-delay:
        type: "integer"
        format: "int32"
      accept-mode:
        type: "boolean"
        format: "boolean"
      advertisement-interval:
        type: "integer"
        format: "int32"
      current-priority:
        type: "integer"
        format: "int32"
      virtual-link-local:
        type: "string"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp_vrrpgroup:
    required:
    - "virtual-router-id"
    properties:
      virtual-router-id:
        type: "integer"
        format: "int32"
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp_config"
      state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp_state"
      interface-tracking:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_vrrp_interfacetracking"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp:
    properties:
      vrrp-group:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp_vrrpgroup"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_address:
    required:
    - "ip"
    properties:
      ip:
        type: "string"
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_addresses_config"
      state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_state"
      vrrp:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_vrrp"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses:
    properties:
      address:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses_address"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_routeradvertisement:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_routeradvertisement_config"
      state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_routeradvertisement_config"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_neighbors_state:
    properties:
      ip:
        type: "string"
      link-layer-address:
        type: "string"
      origin:
        type: "string"
        enum:
        - "OTHER"
        - "STATIC"
        - "DYNAMIC"
      is-router:
        type: "boolean"
        format: "boolean"
      neighbor-state:
        type: "string"
        enum:
        - "INCOMPLETE"
        - "REACHABLE"
        - "STALE"
        - "DELAY"
        - "PROBE"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_neighbors_neighbor:
    required:
    - "ip"
    properties:
      ip:
        type: "string"
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_neighbors_config"
      state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_neighbors_state"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_neighbors:
    properties:
      neighbor:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_neighbors_neighbor"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_state:
    properties:
      enabled:
        type: "boolean"
        format: "boolean"
      mtu:
        type: "integer"
        format: "int32"
      dup-addr-detect-transmits:
        type: "integer"
        format: "int32"
      dhcp-client:
        type: "boolean"
        format: "boolean"
      counters:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_state_counters"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6:
    properties:
      addresses:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_addresses"
      router-advertisement:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_routeradvertisement"
      neighbors:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_neighbors"
      unnumbered:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4_unnumbered"
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_config"
      state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6_state"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_subinterface:
    required:
    - "index"
    properties:
      index:
        type: "integer"
        format: "int32"
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_config"
      state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_state"
      openconfig-vlan:vlan:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigvlanvlan"
      openconfig-if-ip:ipv4:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4"
      openconfig-if-ip:ipv6:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces:
    properties:
      subinterface:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_subinterface"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_state_counters:
    properties:
      in-mac-control-frames:
        type: "integer"
        format: "int64"
      in-mac-pause-frames:
        type: "integer"
        format: "int64"
      in-oversize-frames:
        type: "integer"
        format: "int64"
      in-undersize-frames:
        type: "integer"
        format: "int64"
      in-jabber-frames:
        type: "integer"
        format: "int64"
      in-fragment-frames:
        type: "integer"
        format: "int64"
      in-8021q-frames:
        type: "integer"
        format: "int64"
      in-crc-errors:
        type: "integer"
        format: "int64"
      in-block-errors:
        type: "integer"
        format: "int64"
      out-mac-control-frames:
        type: "integer"
        format: "int64"
      out-mac-pause-frames:
        type: "integer"
        format: "int64"
      out-8021q-frames:
        type: "integer"
        format: "int64"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_state:
    properties:
      mac-address:
        type: "string"
      auto-negotiate:
        type: "boolean"
        format: "boolean"
      duplex-mode:
        type: "string"
        enum:
        - "FULL"
        - "HALF"
      port-speed:
        type: "string"
      enable-flow-control:
        type: "boolean"
        format: "boolean"
      hw-mac-address:
        type: "string"
      negotiated-duplex-mode:
        type: "string"
        enum:
        - "FULL"
        - "HALF"
      negotiated-port-speed:
        type: "string"
      counters:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_state_counters"
      openconfig-if-aggregate:aggregate-id:
        type: "string"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan_config"
      state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan_config"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_config"
      state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_state"
      openconfig-vlan:switched-vlan:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifaggregateaggregation_state:
    properties:
      lag-type:
        type: "string"
        enum:
        - "LACP"
        - "STATIC"
      min-links:
        type: "integer"
        format: "int32"
      lag-speed:
        type: "integer"
        format: "int32"
      member:
        type: "array"
        items:
          type: "string"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifaggregateaggregation:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifaggregateaggregation_config"
      state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifaggregateaggregation_state"
      openconfig-vlan:switched-vlan:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigvlanroutedvlan:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigvlanroutedvlan_config"
      state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigvlanroutedvlan_config"
      openconfig-if-ip:ipv4:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4"
      openconfig-if-ip:ipv6:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_interface:
    required:
    - "name"
    properties:
      name:
        type: "string"
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_config"
      state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_state"
      hold-time:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_holdtime"
      subinterfaces:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces"
      openconfig-if-ethernet:ethernet:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet"
      openconfig-if-aggregate:aggregation:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifaggregateaggregation"
      openconfig-vlan:routed-vlan:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigvlanroutedvlan"
  get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces:
    properties:
      interface:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_interface"
  get_openconfig_interfaces_interfaces_interface_state_openconfiginterfacesstate:
    properties:
      name:
        type: "string"
      type:
        type: "string"
      mtu:
        type: "integer"
        format: "int32"
      loopback-mode:
        type: "boolean"
        format: "boolean"
      description:
        type: "string"
      enabled:
        type: "boolean"
        format: "boolean"
      ifindex:
        type: "integer"
        format: "int32"
      admin-status:
        type: "string"
        enum:
        - "UP"
        - "DOWN"
        - "TESTING"
      oper-status:
        type: "string"
        enum:
        - "UP"
        - "DOWN"
        - "TESTING"
        - "UNKNOWN"
        - "DORMANT"
        - "NOT_PRESENT"
        - "LOWER_LAYER_DOWN"
      last-change:
        type: "integer"
        format: "int64"
      logical:
        type: "boolean"
        format: "boolean"
      counters:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_state_counters"
      tpid:
        type: "string"
  openconfig_interfaces_interfaces_interface_subinterfaces_openconfiginterfacessubinterfaces_subinterface:
    required:
    - "index"
    properties:
      index:
        type: "integer"
        format: "int32"
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_config"
      vlan:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigvlanvlan"
      openconfig-if-ip:ipv4:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4"
      openconfig-if-ip:ipv6:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6"
  openconfig_interfaces_interfaces_interface_subinterfaces_openconfiginterfacessubinterfaces:
    properties:
      subinterface:
        type: "array"
        items:
          $ref: "#/definitions/openconfig_interfaces_interfaces_interface_subinterfaces_openconfiginterfacessubinterfaces_subinterface"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_openconfiginterfacessubinterfaces_subinterface:
    required:
    - "index"
    properties:
      index:
        type: "integer"
        format: "int32"
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_config"
      state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_state"
      vlan:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigvlanvlan"
      openconfig-if-ip:ipv4:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4"
      openconfig-if-ip:ipv6:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6"
  get_openconfig_interfaces_interfaces_interface_subinterfaces_openconfiginterfacessubinterfaces:
    properties:
      subinterface:
        type: "array"
        items:
          $ref: "#/definitions/get_openconfig_interfaces_interfaces_interface_subinterfaces_openconfiginterfacessubinterfaces_subinterface"
  openconfig_if_ethernet_interfaces_interface_ethernet_openconfigifethernetethernet:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_config"
      switched-vlan:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_openconfigifethernetethernet:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_config"
      state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_state"
      switched-vlan:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan"
  get_openconfig_if_ethernet_interfaces_interface_ethernet_state_openconfigifethernetstate:
    properties:
      mac-address:
        type: "string"
      auto-negotiate:
        type: "boolean"
        format: "boolean"
      duplex-mode:
        type: "string"
        enum:
        - "FULL"
        - "HALF"
      port-speed:
        type: "string"
      enable-flow-control:
        type: "boolean"
        format: "boolean"
      hw-mac-address:
        type: "string"
      negotiated-duplex-mode:
        type: "string"
        enum:
        - "FULL"
        - "HALF"
      negotiated-port-speed:
        type: "string"
      counters:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_state_counters"
      aggregate-id:
        type: "string"
  openconfig_if_aggregate_interfaces_interface_aggregation_openconfigifaggregateaggregation:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifaggregateaggregation_config"
      switched-vlan:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan"
  get_openconfig_if_aggregate_interfaces_interface_aggregation_openconfigifaggregateaggregation:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifaggregateaggregation_config"
      state:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifaggregateaggregation_state"
      switched-vlan:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigifethernetethernet_openconfigvlanswitchedvlan"
  openconfig_vlan_interfaces_interface_routed_vlan_openconfigvlanroutedvlan:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigvlanroutedvlan_config"
      ipv4:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4"
      ipv6:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6"
  get_openconfig_vlan_interfaces_interface_routed_vlan_openconfigvlanroutedvlan:
    properties:
      config:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigvlanroutedvlan_config"
      state:
        $ref: "#/definitions/openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_openconfigvlanroutedvlan_config"
      ipv4:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv4"
      ipv6:
        $ref: "#/definitions/get_openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_subinterfaces_openconfigifipipv6"
