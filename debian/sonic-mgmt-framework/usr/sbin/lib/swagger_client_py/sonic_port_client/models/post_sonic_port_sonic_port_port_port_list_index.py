# coding: utf-8

"""
    Sonic Network Management APIs

    Network management Open APIs for Sonic.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from sonic_port_client.models.sonic_port_sonic_port_port_port_list_admin_status import SonicPortSonicPortPortPortListAdminStatus  # noqa: F401,E501
from sonic_port_client.models.sonic_port_sonic_port_port_port_list_alias import SonicPortSonicPortPortPortListAlias  # noqa: F401,E501
from sonic_port_client.models.sonic_port_sonic_port_port_port_list_description import SonicPortSonicPortPortPortListDescription  # noqa: F401,E501
from sonic_port_client.models.sonic_port_sonic_port_port_port_list_index import SonicPortSonicPortPortPortListIndex  # noqa: F401,E501
from sonic_port_client.models.sonic_port_sonic_port_port_port_list_lanes import SonicPortSonicPortPortPortListLanes  # noqa: F401,E501
from sonic_port_client.models.sonic_port_sonic_port_port_port_list_mtu import SonicPortSonicPortPortPortListMtu  # noqa: F401,E501
from sonic_port_client.models.sonic_port_sonic_port_port_port_list_speed import SonicPortSonicPortPortPortListSpeed  # noqa: F401,E501
from sonic_port_client.models.sonic_port_sonic_port_port_port_list_valid_speeds import SonicPortSonicPortPortPortListValidSpeeds  # noqa: F401,E501


class PostSonicPortSonicPortPortPortListIndex(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'sonic_portindex': 'int',
        'sonic_portspeed': 'int',
        'sonic_portvalid_speeds': 'str',
        'sonic_portalias': 'str',
        'sonic_portdescription': 'str',
        'sonic_portmtu': 'int',
        'sonic_portlanes': 'str',
        'sonic_portadmin_status': 'str'
    }

    attribute_map = {
        'sonic_portindex': 'sonic-port:index',
        'sonic_portspeed': 'sonic-port:speed',
        'sonic_portvalid_speeds': 'sonic-port:valid_speeds',
        'sonic_portalias': 'sonic-port:alias',
        'sonic_portdescription': 'sonic-port:description',
        'sonic_portmtu': 'sonic-port:mtu',
        'sonic_portlanes': 'sonic-port:lanes',
        'sonic_portadmin_status': 'sonic-port:admin_status'
    }

    def __init__(self, sonic_portindex=None, sonic_portspeed=None, sonic_portvalid_speeds=None, sonic_portalias=None, sonic_portdescription=None, sonic_portmtu=None, sonic_portlanes=None, sonic_portadmin_status=None):  # noqa: E501
        """PostSonicPortSonicPortPortPortListIndex - a model defined in Swagger"""  # noqa: E501

        self._sonic_portindex = None
        self._sonic_portspeed = None
        self._sonic_portvalid_speeds = None
        self._sonic_portalias = None
        self._sonic_portdescription = None
        self._sonic_portmtu = None
        self._sonic_portlanes = None
        self._sonic_portadmin_status = None
        self.discriminator = None

        if sonic_portindex is not None:
            self.sonic_portindex = sonic_portindex
        if sonic_portspeed is not None:
            self.sonic_portspeed = sonic_portspeed
        if sonic_portvalid_speeds is not None:
            self.sonic_portvalid_speeds = sonic_portvalid_speeds
        if sonic_portalias is not None:
            self.sonic_portalias = sonic_portalias
        if sonic_portdescription is not None:
            self.sonic_portdescription = sonic_portdescription
        if sonic_portmtu is not None:
            self.sonic_portmtu = sonic_portmtu
        if sonic_portlanes is not None:
            self.sonic_portlanes = sonic_portlanes
        if sonic_portadmin_status is not None:
            self.sonic_portadmin_status = sonic_portadmin_status

    @property
    def sonic_portindex(self):
        """Gets the sonic_portindex of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501


        :return: The sonic_portindex of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501
        :rtype: int
        """
        return self._sonic_portindex

    @sonic_portindex.setter
    def sonic_portindex(self, sonic_portindex):
        """Sets the sonic_portindex of this PostSonicPortSonicPortPortPortListIndex.


        :param sonic_portindex: The sonic_portindex of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501
        :type: int
        """

        self._sonic_portindex = sonic_portindex

    @property
    def sonic_portspeed(self):
        """Gets the sonic_portspeed of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501


        :return: The sonic_portspeed of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501
        :rtype: int
        """
        return self._sonic_portspeed

    @sonic_portspeed.setter
    def sonic_portspeed(self, sonic_portspeed):
        """Sets the sonic_portspeed of this PostSonicPortSonicPortPortPortListIndex.


        :param sonic_portspeed: The sonic_portspeed of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501
        :type: int
        """

        self._sonic_portspeed = sonic_portspeed

    @property
    def sonic_portvalid_speeds(self):
        """Gets the sonic_portvalid_speeds of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501


        :return: The sonic_portvalid_speeds of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501
        :rtype: str
        """
        return self._sonic_portvalid_speeds

    @sonic_portvalid_speeds.setter
    def sonic_portvalid_speeds(self, sonic_portvalid_speeds):
        """Sets the sonic_portvalid_speeds of this PostSonicPortSonicPortPortPortListIndex.


        :param sonic_portvalid_speeds: The sonic_portvalid_speeds of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501
        :type: str
        """

        self._sonic_portvalid_speeds = sonic_portvalid_speeds

    @property
    def sonic_portalias(self):
        """Gets the sonic_portalias of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501


        :return: The sonic_portalias of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501
        :rtype: str
        """
        return self._sonic_portalias

    @sonic_portalias.setter
    def sonic_portalias(self, sonic_portalias):
        """Sets the sonic_portalias of this PostSonicPortSonicPortPortPortListIndex.


        :param sonic_portalias: The sonic_portalias of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501
        :type: str
        """

        self._sonic_portalias = sonic_portalias

    @property
    def sonic_portdescription(self):
        """Gets the sonic_portdescription of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501


        :return: The sonic_portdescription of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501
        :rtype: str
        """
        return self._sonic_portdescription

    @sonic_portdescription.setter
    def sonic_portdescription(self, sonic_portdescription):
        """Sets the sonic_portdescription of this PostSonicPortSonicPortPortPortListIndex.


        :param sonic_portdescription: The sonic_portdescription of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501
        :type: str
        """

        self._sonic_portdescription = sonic_portdescription

    @property
    def sonic_portmtu(self):
        """Gets the sonic_portmtu of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501


        :return: The sonic_portmtu of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501
        :rtype: int
        """
        return self._sonic_portmtu

    @sonic_portmtu.setter
    def sonic_portmtu(self, sonic_portmtu):
        """Sets the sonic_portmtu of this PostSonicPortSonicPortPortPortListIndex.


        :param sonic_portmtu: The sonic_portmtu of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501
        :type: int
        """

        self._sonic_portmtu = sonic_portmtu

    @property
    def sonic_portlanes(self):
        """Gets the sonic_portlanes of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501


        :return: The sonic_portlanes of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501
        :rtype: str
        """
        return self._sonic_portlanes

    @sonic_portlanes.setter
    def sonic_portlanes(self, sonic_portlanes):
        """Sets the sonic_portlanes of this PostSonicPortSonicPortPortPortListIndex.


        :param sonic_portlanes: The sonic_portlanes of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501
        :type: str
        """

        self._sonic_portlanes = sonic_portlanes

    @property
    def sonic_portadmin_status(self):
        """Gets the sonic_portadmin_status of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501


        :return: The sonic_portadmin_status of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501
        :rtype: str
        """
        return self._sonic_portadmin_status

    @sonic_portadmin_status.setter
    def sonic_portadmin_status(self, sonic_portadmin_status):
        """Sets the sonic_portadmin_status of this PostSonicPortSonicPortPortPortListIndex.


        :param sonic_portadmin_status: The sonic_portadmin_status of this PostSonicPortSonicPortPortPortListIndex.  # noqa: E501
        :type: str
        """
        allowed_values = ["up", "down"]  # noqa: E501
        if sonic_portadmin_status not in allowed_values:
            raise ValueError(
                "Invalid value for `sonic_portadmin_status` ({0}), must be one of {1}"  # noqa: E501
                .format(sonic_portadmin_status, allowed_values)
            )

        self._sonic_portadmin_status = sonic_portadmin_status

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PostSonicPortSonicPortPortPortListIndex, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PostSonicPortSonicPortPortPortListIndex):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
