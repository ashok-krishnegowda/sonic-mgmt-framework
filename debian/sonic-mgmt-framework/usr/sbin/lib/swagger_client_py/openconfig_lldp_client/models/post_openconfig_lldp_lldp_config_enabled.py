# coding: utf-8

"""
    Sonic Network Management APIs

    Network management Open APIs for Sonic.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from openconfig_lldp_client.models.openconfig_lldp_lldp_config_chassis_id import OpenconfigLldpLldpConfigChassisId  # noqa: F401,E501
from openconfig_lldp_client.models.openconfig_lldp_lldp_config_chassis_id_type import OpenconfigLldpLldpConfigChassisIdType  # noqa: F401,E501
from openconfig_lldp_client.models.openconfig_lldp_lldp_config_enabled import OpenconfigLldpLldpConfigEnabled  # noqa: F401,E501
from openconfig_lldp_client.models.openconfig_lldp_lldp_config_hello_timer import OpenconfigLldpLldpConfigHelloTimer  # noqa: F401,E501
from openconfig_lldp_client.models.openconfig_lldp_lldp_config_suppress_tlv_advertisement import OpenconfigLldpLldpConfigSuppressTlvAdvertisement  # noqa: F401,E501
from openconfig_lldp_client.models.openconfig_lldp_lldp_config_system_description import OpenconfigLldpLldpConfigSystemDescription  # noqa: F401,E501
from openconfig_lldp_client.models.openconfig_lldp_lldp_config_system_name import OpenconfigLldpLldpConfigSystemName  # noqa: F401,E501


class PostOpenconfigLldpLldpConfigEnabled(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'openconfig_lldpenabled': 'bool',
        'openconfig_lldphello_timer': 'int',
        'openconfig_lldpsuppress_tlv_advertisement': 'list[str]',
        'openconfig_lldpsystem_name': 'str',
        'openconfig_lldpsystem_description': 'str',
        'openconfig_lldpchassis_id': 'str',
        'openconfig_lldpchassis_id_type': 'str'
    }

    attribute_map = {
        'openconfig_lldpenabled': 'openconfig-lldp:enabled',
        'openconfig_lldphello_timer': 'openconfig-lldp:hello-timer',
        'openconfig_lldpsuppress_tlv_advertisement': 'openconfig-lldp:suppress-tlv-advertisement',
        'openconfig_lldpsystem_name': 'openconfig-lldp:system-name',
        'openconfig_lldpsystem_description': 'openconfig-lldp:system-description',
        'openconfig_lldpchassis_id': 'openconfig-lldp:chassis-id',
        'openconfig_lldpchassis_id_type': 'openconfig-lldp:chassis-id-type'
    }

    def __init__(self, openconfig_lldpenabled=None, openconfig_lldphello_timer=None, openconfig_lldpsuppress_tlv_advertisement=None, openconfig_lldpsystem_name=None, openconfig_lldpsystem_description=None, openconfig_lldpchassis_id=None, openconfig_lldpchassis_id_type=None):  # noqa: E501
        """PostOpenconfigLldpLldpConfigEnabled - a model defined in Swagger"""  # noqa: E501

        self._openconfig_lldpenabled = None
        self._openconfig_lldphello_timer = None
        self._openconfig_lldpsuppress_tlv_advertisement = None
        self._openconfig_lldpsystem_name = None
        self._openconfig_lldpsystem_description = None
        self._openconfig_lldpchassis_id = None
        self._openconfig_lldpchassis_id_type = None
        self.discriminator = None

        if openconfig_lldpenabled is not None:
            self.openconfig_lldpenabled = openconfig_lldpenabled
        if openconfig_lldphello_timer is not None:
            self.openconfig_lldphello_timer = openconfig_lldphello_timer
        if openconfig_lldpsuppress_tlv_advertisement is not None:
            self.openconfig_lldpsuppress_tlv_advertisement = openconfig_lldpsuppress_tlv_advertisement
        if openconfig_lldpsystem_name is not None:
            self.openconfig_lldpsystem_name = openconfig_lldpsystem_name
        if openconfig_lldpsystem_description is not None:
            self.openconfig_lldpsystem_description = openconfig_lldpsystem_description
        if openconfig_lldpchassis_id is not None:
            self.openconfig_lldpchassis_id = openconfig_lldpchassis_id
        if openconfig_lldpchassis_id_type is not None:
            self.openconfig_lldpchassis_id_type = openconfig_lldpchassis_id_type

    @property
    def openconfig_lldpenabled(self):
        """Gets the openconfig_lldpenabled of this PostOpenconfigLldpLldpConfigEnabled.  # noqa: E501


        :return: The openconfig_lldpenabled of this PostOpenconfigLldpLldpConfigEnabled.  # noqa: E501
        :rtype: bool
        """
        return self._openconfig_lldpenabled

    @openconfig_lldpenabled.setter
    def openconfig_lldpenabled(self, openconfig_lldpenabled):
        """Sets the openconfig_lldpenabled of this PostOpenconfigLldpLldpConfigEnabled.


        :param openconfig_lldpenabled: The openconfig_lldpenabled of this PostOpenconfigLldpLldpConfigEnabled.  # noqa: E501
        :type: bool
        """

        self._openconfig_lldpenabled = openconfig_lldpenabled

    @property
    def openconfig_lldphello_timer(self):
        """Gets the openconfig_lldphello_timer of this PostOpenconfigLldpLldpConfigEnabled.  # noqa: E501


        :return: The openconfig_lldphello_timer of this PostOpenconfigLldpLldpConfigEnabled.  # noqa: E501
        :rtype: int
        """
        return self._openconfig_lldphello_timer

    @openconfig_lldphello_timer.setter
    def openconfig_lldphello_timer(self, openconfig_lldphello_timer):
        """Sets the openconfig_lldphello_timer of this PostOpenconfigLldpLldpConfigEnabled.


        :param openconfig_lldphello_timer: The openconfig_lldphello_timer of this PostOpenconfigLldpLldpConfigEnabled.  # noqa: E501
        :type: int
        """

        self._openconfig_lldphello_timer = openconfig_lldphello_timer

    @property
    def openconfig_lldpsuppress_tlv_advertisement(self):
        """Gets the openconfig_lldpsuppress_tlv_advertisement of this PostOpenconfigLldpLldpConfigEnabled.  # noqa: E501


        :return: The openconfig_lldpsuppress_tlv_advertisement of this PostOpenconfigLldpLldpConfigEnabled.  # noqa: E501
        :rtype: list[str]
        """
        return self._openconfig_lldpsuppress_tlv_advertisement

    @openconfig_lldpsuppress_tlv_advertisement.setter
    def openconfig_lldpsuppress_tlv_advertisement(self, openconfig_lldpsuppress_tlv_advertisement):
        """Sets the openconfig_lldpsuppress_tlv_advertisement of this PostOpenconfigLldpLldpConfigEnabled.


        :param openconfig_lldpsuppress_tlv_advertisement: The openconfig_lldpsuppress_tlv_advertisement of this PostOpenconfigLldpLldpConfigEnabled.  # noqa: E501
        :type: list[str]
        """

        self._openconfig_lldpsuppress_tlv_advertisement = openconfig_lldpsuppress_tlv_advertisement

    @property
    def openconfig_lldpsystem_name(self):
        """Gets the openconfig_lldpsystem_name of this PostOpenconfigLldpLldpConfigEnabled.  # noqa: E501


        :return: The openconfig_lldpsystem_name of this PostOpenconfigLldpLldpConfigEnabled.  # noqa: E501
        :rtype: str
        """
        return self._openconfig_lldpsystem_name

    @openconfig_lldpsystem_name.setter
    def openconfig_lldpsystem_name(self, openconfig_lldpsystem_name):
        """Sets the openconfig_lldpsystem_name of this PostOpenconfigLldpLldpConfigEnabled.


        :param openconfig_lldpsystem_name: The openconfig_lldpsystem_name of this PostOpenconfigLldpLldpConfigEnabled.  # noqa: E501
        :type: str
        """

        self._openconfig_lldpsystem_name = openconfig_lldpsystem_name

    @property
    def openconfig_lldpsystem_description(self):
        """Gets the openconfig_lldpsystem_description of this PostOpenconfigLldpLldpConfigEnabled.  # noqa: E501


        :return: The openconfig_lldpsystem_description of this PostOpenconfigLldpLldpConfigEnabled.  # noqa: E501
        :rtype: str
        """
        return self._openconfig_lldpsystem_description

    @openconfig_lldpsystem_description.setter
    def openconfig_lldpsystem_description(self, openconfig_lldpsystem_description):
        """Sets the openconfig_lldpsystem_description of this PostOpenconfigLldpLldpConfigEnabled.


        :param openconfig_lldpsystem_description: The openconfig_lldpsystem_description of this PostOpenconfigLldpLldpConfigEnabled.  # noqa: E501
        :type: str
        """

        self._openconfig_lldpsystem_description = openconfig_lldpsystem_description

    @property
    def openconfig_lldpchassis_id(self):
        """Gets the openconfig_lldpchassis_id of this PostOpenconfigLldpLldpConfigEnabled.  # noqa: E501


        :return: The openconfig_lldpchassis_id of this PostOpenconfigLldpLldpConfigEnabled.  # noqa: E501
        :rtype: str
        """
        return self._openconfig_lldpchassis_id

    @openconfig_lldpchassis_id.setter
    def openconfig_lldpchassis_id(self, openconfig_lldpchassis_id):
        """Sets the openconfig_lldpchassis_id of this PostOpenconfigLldpLldpConfigEnabled.


        :param openconfig_lldpchassis_id: The openconfig_lldpchassis_id of this PostOpenconfigLldpLldpConfigEnabled.  # noqa: E501
        :type: str
        """

        self._openconfig_lldpchassis_id = openconfig_lldpchassis_id

    @property
    def openconfig_lldpchassis_id_type(self):
        """Gets the openconfig_lldpchassis_id_type of this PostOpenconfigLldpLldpConfigEnabled.  # noqa: E501


        :return: The openconfig_lldpchassis_id_type of this PostOpenconfigLldpLldpConfigEnabled.  # noqa: E501
        :rtype: str
        """
        return self._openconfig_lldpchassis_id_type

    @openconfig_lldpchassis_id_type.setter
    def openconfig_lldpchassis_id_type(self, openconfig_lldpchassis_id_type):
        """Sets the openconfig_lldpchassis_id_type of this PostOpenconfigLldpLldpConfigEnabled.


        :param openconfig_lldpchassis_id_type: The openconfig_lldpchassis_id_type of this PostOpenconfigLldpLldpConfigEnabled.  # noqa: E501
        :type: str
        """
        allowed_values = ["CHASSIS_COMPONENT", "INTERFACE_ALIAS", "PORT_COMPONENT", "MAC_ADDRESS", "NETWORK_ADDRESS", "INTERFACE_NAME", "LOCAL"]  # noqa: E501
        if openconfig_lldpchassis_id_type not in allowed_values:
            raise ValueError(
                "Invalid value for `openconfig_lldpchassis_id_type` ({0}), must be one of {1}"  # noqa: E501
                .format(openconfig_lldpchassis_id_type, allowed_values)
            )

        self._openconfig_lldpchassis_id_type = openconfig_lldpchassis_id_type

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PostOpenconfigLldpLldpConfigEnabled, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PostOpenconfigLldpLldpConfigEnabled):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
