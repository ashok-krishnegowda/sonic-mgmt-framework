# coding: utf-8

"""
    Sonic Network Management APIs

    Network management Open APIs for Sonic.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class GetOpenconfigSystemSystemOpenconfigsystemsystemState(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'hostname': 'str',
        'domain_name': 'str',
        'login_banner': 'str',
        'motd_banner': 'str',
        'current_datetime': 'str',
        'boot_time': 'int'
    }

    attribute_map = {
        'hostname': 'hostname',
        'domain_name': 'domain-name',
        'login_banner': 'login-banner',
        'motd_banner': 'motd-banner',
        'current_datetime': 'current-datetime',
        'boot_time': 'boot-time'
    }

    def __init__(self, hostname=None, domain_name=None, login_banner=None, motd_banner=None, current_datetime=None, boot_time=None):  # noqa: E501
        """GetOpenconfigSystemSystemOpenconfigsystemsystemState - a model defined in Swagger"""  # noqa: E501

        self._hostname = None
        self._domain_name = None
        self._login_banner = None
        self._motd_banner = None
        self._current_datetime = None
        self._boot_time = None
        self.discriminator = None

        if hostname is not None:
            self.hostname = hostname
        if domain_name is not None:
            self.domain_name = domain_name
        if login_banner is not None:
            self.login_banner = login_banner
        if motd_banner is not None:
            self.motd_banner = motd_banner
        if current_datetime is not None:
            self.current_datetime = current_datetime
        if boot_time is not None:
            self.boot_time = boot_time

    @property
    def hostname(self):
        """Gets the hostname of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.  # noqa: E501


        :return: The hostname of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.  # noqa: E501
        :rtype: str
        """
        return self._hostname

    @hostname.setter
    def hostname(self, hostname):
        """Sets the hostname of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.


        :param hostname: The hostname of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.  # noqa: E501
        :type: str
        """

        self._hostname = hostname

    @property
    def domain_name(self):
        """Gets the domain_name of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.  # noqa: E501


        :return: The domain_name of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.  # noqa: E501
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name):
        """Sets the domain_name of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.


        :param domain_name: The domain_name of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.  # noqa: E501
        :type: str
        """

        self._domain_name = domain_name

    @property
    def login_banner(self):
        """Gets the login_banner of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.  # noqa: E501


        :return: The login_banner of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.  # noqa: E501
        :rtype: str
        """
        return self._login_banner

    @login_banner.setter
    def login_banner(self, login_banner):
        """Sets the login_banner of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.


        :param login_banner: The login_banner of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.  # noqa: E501
        :type: str
        """

        self._login_banner = login_banner

    @property
    def motd_banner(self):
        """Gets the motd_banner of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.  # noqa: E501


        :return: The motd_banner of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.  # noqa: E501
        :rtype: str
        """
        return self._motd_banner

    @motd_banner.setter
    def motd_banner(self, motd_banner):
        """Sets the motd_banner of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.


        :param motd_banner: The motd_banner of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.  # noqa: E501
        :type: str
        """

        self._motd_banner = motd_banner

    @property
    def current_datetime(self):
        """Gets the current_datetime of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.  # noqa: E501


        :return: The current_datetime of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.  # noqa: E501
        :rtype: str
        """
        return self._current_datetime

    @current_datetime.setter
    def current_datetime(self, current_datetime):
        """Sets the current_datetime of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.


        :param current_datetime: The current_datetime of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.  # noqa: E501
        :type: str
        """

        self._current_datetime = current_datetime

    @property
    def boot_time(self):
        """Gets the boot_time of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.  # noqa: E501


        :return: The boot_time of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.  # noqa: E501
        :rtype: int
        """
        return self._boot_time

    @boot_time.setter
    def boot_time(self, boot_time):
        """Sets the boot_time of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.


        :param boot_time: The boot_time of this GetOpenconfigSystemSystemOpenconfigsystemsystemState.  # noqa: E501
        :type: int
        """

        self._boot_time = boot_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetOpenconfigSystemSystemOpenconfigsystemsystemState, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetOpenconfigSystemSystemOpenconfigsystemsystemState):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
