# coding: utf-8

"""
    Sonic Network Management APIs

    Network management Open APIs for Sonic.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from openconfig_system_client.models.openconfig_system_system_ssh_server_config_enable import OpenconfigSystemSystemSshServerConfigEnable  # noqa: F401,E501
from openconfig_system_client.models.openconfig_system_system_ssh_server_config_protocol_version import OpenconfigSystemSystemSshServerConfigProtocolVersion  # noqa: F401,E501
from openconfig_system_client.models.openconfig_system_system_ssh_server_config_rate_limit import OpenconfigSystemSystemSshServerConfigRateLimit  # noqa: F401,E501
from openconfig_system_client.models.openconfig_system_system_ssh_server_config_session_limit import OpenconfigSystemSystemSshServerConfigSessionLimit  # noqa: F401,E501
from openconfig_system_client.models.openconfig_system_system_ssh_server_config_timeout import OpenconfigSystemSystemSshServerConfigTimeout  # noqa: F401,E501


class PostOpenconfigSystemSystemSshServerConfigEnable(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'openconfig_systemenable': 'bool',
        'openconfig_systemprotocol_version': 'str',
        'openconfig_systemtimeout': 'int',
        'openconfig_systemrate_limit': 'int',
        'openconfig_systemsession_limit': 'int'
    }

    attribute_map = {
        'openconfig_systemenable': 'openconfig-system:enable',
        'openconfig_systemprotocol_version': 'openconfig-system:protocol-version',
        'openconfig_systemtimeout': 'openconfig-system:timeout',
        'openconfig_systemrate_limit': 'openconfig-system:rate-limit',
        'openconfig_systemsession_limit': 'openconfig-system:session-limit'
    }

    def __init__(self, openconfig_systemenable=None, openconfig_systemprotocol_version=None, openconfig_systemtimeout=None, openconfig_systemrate_limit=None, openconfig_systemsession_limit=None):  # noqa: E501
        """PostOpenconfigSystemSystemSshServerConfigEnable - a model defined in Swagger"""  # noqa: E501

        self._openconfig_systemenable = None
        self._openconfig_systemprotocol_version = None
        self._openconfig_systemtimeout = None
        self._openconfig_systemrate_limit = None
        self._openconfig_systemsession_limit = None
        self.discriminator = None

        if openconfig_systemenable is not None:
            self.openconfig_systemenable = openconfig_systemenable
        if openconfig_systemprotocol_version is not None:
            self.openconfig_systemprotocol_version = openconfig_systemprotocol_version
        if openconfig_systemtimeout is not None:
            self.openconfig_systemtimeout = openconfig_systemtimeout
        if openconfig_systemrate_limit is not None:
            self.openconfig_systemrate_limit = openconfig_systemrate_limit
        if openconfig_systemsession_limit is not None:
            self.openconfig_systemsession_limit = openconfig_systemsession_limit

    @property
    def openconfig_systemenable(self):
        """Gets the openconfig_systemenable of this PostOpenconfigSystemSystemSshServerConfigEnable.  # noqa: E501


        :return: The openconfig_systemenable of this PostOpenconfigSystemSystemSshServerConfigEnable.  # noqa: E501
        :rtype: bool
        """
        return self._openconfig_systemenable

    @openconfig_systemenable.setter
    def openconfig_systemenable(self, openconfig_systemenable):
        """Sets the openconfig_systemenable of this PostOpenconfigSystemSystemSshServerConfigEnable.


        :param openconfig_systemenable: The openconfig_systemenable of this PostOpenconfigSystemSystemSshServerConfigEnable.  # noqa: E501
        :type: bool
        """

        self._openconfig_systemenable = openconfig_systemenable

    @property
    def openconfig_systemprotocol_version(self):
        """Gets the openconfig_systemprotocol_version of this PostOpenconfigSystemSystemSshServerConfigEnable.  # noqa: E501


        :return: The openconfig_systemprotocol_version of this PostOpenconfigSystemSystemSshServerConfigEnable.  # noqa: E501
        :rtype: str
        """
        return self._openconfig_systemprotocol_version

    @openconfig_systemprotocol_version.setter
    def openconfig_systemprotocol_version(self, openconfig_systemprotocol_version):
        """Sets the openconfig_systemprotocol_version of this PostOpenconfigSystemSystemSshServerConfigEnable.


        :param openconfig_systemprotocol_version: The openconfig_systemprotocol_version of this PostOpenconfigSystemSystemSshServerConfigEnable.  # noqa: E501
        :type: str
        """
        allowed_values = ["V2", "V1", "V1_V2"]  # noqa: E501
        if openconfig_systemprotocol_version not in allowed_values:
            raise ValueError(
                "Invalid value for `openconfig_systemprotocol_version` ({0}), must be one of {1}"  # noqa: E501
                .format(openconfig_systemprotocol_version, allowed_values)
            )

        self._openconfig_systemprotocol_version = openconfig_systemprotocol_version

    @property
    def openconfig_systemtimeout(self):
        """Gets the openconfig_systemtimeout of this PostOpenconfigSystemSystemSshServerConfigEnable.  # noqa: E501


        :return: The openconfig_systemtimeout of this PostOpenconfigSystemSystemSshServerConfigEnable.  # noqa: E501
        :rtype: int
        """
        return self._openconfig_systemtimeout

    @openconfig_systemtimeout.setter
    def openconfig_systemtimeout(self, openconfig_systemtimeout):
        """Sets the openconfig_systemtimeout of this PostOpenconfigSystemSystemSshServerConfigEnable.


        :param openconfig_systemtimeout: The openconfig_systemtimeout of this PostOpenconfigSystemSystemSshServerConfigEnable.  # noqa: E501
        :type: int
        """

        self._openconfig_systemtimeout = openconfig_systemtimeout

    @property
    def openconfig_systemrate_limit(self):
        """Gets the openconfig_systemrate_limit of this PostOpenconfigSystemSystemSshServerConfigEnable.  # noqa: E501


        :return: The openconfig_systemrate_limit of this PostOpenconfigSystemSystemSshServerConfigEnable.  # noqa: E501
        :rtype: int
        """
        return self._openconfig_systemrate_limit

    @openconfig_systemrate_limit.setter
    def openconfig_systemrate_limit(self, openconfig_systemrate_limit):
        """Sets the openconfig_systemrate_limit of this PostOpenconfigSystemSystemSshServerConfigEnable.


        :param openconfig_systemrate_limit: The openconfig_systemrate_limit of this PostOpenconfigSystemSystemSshServerConfigEnable.  # noqa: E501
        :type: int
        """

        self._openconfig_systemrate_limit = openconfig_systemrate_limit

    @property
    def openconfig_systemsession_limit(self):
        """Gets the openconfig_systemsession_limit of this PostOpenconfigSystemSystemSshServerConfigEnable.  # noqa: E501


        :return: The openconfig_systemsession_limit of this PostOpenconfigSystemSystemSshServerConfigEnable.  # noqa: E501
        :rtype: int
        """
        return self._openconfig_systemsession_limit

    @openconfig_systemsession_limit.setter
    def openconfig_systemsession_limit(self, openconfig_systemsession_limit):
        """Sets the openconfig_systemsession_limit of this PostOpenconfigSystemSystemSshServerConfigEnable.


        :param openconfig_systemsession_limit: The openconfig_systemsession_limit of this PostOpenconfigSystemSystemSshServerConfigEnable.  # noqa: E501
        :type: int
        """

        self._openconfig_systemsession_limit = openconfig_systemsession_limit

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PostOpenconfigSystemSystemSshServerConfigEnable, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PostOpenconfigSystemSystemSshServerConfigEnable):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
