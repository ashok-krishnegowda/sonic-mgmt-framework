# coding: utf-8

"""
    Sonic Network Management APIs

    Network management Open APIs for Sonic.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'name': 'str',
        'address': 'str',
        'timeout': 'int',
        'connection_opens': 'int',
        'connection_closes': 'int',
        'connection_aborts': 'int',
        'connection_failures': 'int',
        'connection_timeouts': 'int',
        'messages_sent': 'int',
        'messages_received': 'int',
        'errors_received': 'int'
    }

    attribute_map = {
        'name': 'name',
        'address': 'address',
        'timeout': 'timeout',
        'connection_opens': 'connection-opens',
        'connection_closes': 'connection-closes',
        'connection_aborts': 'connection-aborts',
        'connection_failures': 'connection-failures',
        'connection_timeouts': 'connection-timeouts',
        'messages_sent': 'messages-sent',
        'messages_received': 'messages-received',
        'errors_received': 'errors-received'
    }

    def __init__(self, name=None, address=None, timeout=None, connection_opens=None, connection_closes=None, connection_aborts=None, connection_failures=None, connection_timeouts=None, messages_sent=None, messages_received=None, errors_received=None):  # noqa: E501
        """GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState - a model defined in Swagger"""  # noqa: E501

        self._name = None
        self._address = None
        self._timeout = None
        self._connection_opens = None
        self._connection_closes = None
        self._connection_aborts = None
        self._connection_failures = None
        self._connection_timeouts = None
        self._messages_sent = None
        self._messages_received = None
        self._errors_received = None
        self.discriminator = None

        if name is not None:
            self.name = name
        if address is not None:
            self.address = address
        if timeout is not None:
            self.timeout = timeout
        if connection_opens is not None:
            self.connection_opens = connection_opens
        if connection_closes is not None:
            self.connection_closes = connection_closes
        if connection_aborts is not None:
            self.connection_aborts = connection_aborts
        if connection_failures is not None:
            self.connection_failures = connection_failures
        if connection_timeouts is not None:
            self.connection_timeouts = connection_timeouts
        if messages_sent is not None:
            self.messages_sent = messages_sent
        if messages_received is not None:
            self.messages_received = messages_received
        if errors_received is not None:
            self.errors_received = errors_received

    @property
    def name(self):
        """Gets the name of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501


        :return: The name of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.


        :param name: The name of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def address(self):
        """Gets the address of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501


        :return: The address of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.


        :param address: The address of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501
        :type: str
        """

        self._address = address

    @property
    def timeout(self):
        """Gets the timeout of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501


        :return: The timeout of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501
        :rtype: int
        """
        return self._timeout

    @timeout.setter
    def timeout(self, timeout):
        """Sets the timeout of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.


        :param timeout: The timeout of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501
        :type: int
        """

        self._timeout = timeout

    @property
    def connection_opens(self):
        """Gets the connection_opens of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501


        :return: The connection_opens of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501
        :rtype: int
        """
        return self._connection_opens

    @connection_opens.setter
    def connection_opens(self, connection_opens):
        """Sets the connection_opens of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.


        :param connection_opens: The connection_opens of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501
        :type: int
        """

        self._connection_opens = connection_opens

    @property
    def connection_closes(self):
        """Gets the connection_closes of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501


        :return: The connection_closes of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501
        :rtype: int
        """
        return self._connection_closes

    @connection_closes.setter
    def connection_closes(self, connection_closes):
        """Sets the connection_closes of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.


        :param connection_closes: The connection_closes of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501
        :type: int
        """

        self._connection_closes = connection_closes

    @property
    def connection_aborts(self):
        """Gets the connection_aborts of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501


        :return: The connection_aborts of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501
        :rtype: int
        """
        return self._connection_aborts

    @connection_aborts.setter
    def connection_aborts(self, connection_aborts):
        """Sets the connection_aborts of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.


        :param connection_aborts: The connection_aborts of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501
        :type: int
        """

        self._connection_aborts = connection_aborts

    @property
    def connection_failures(self):
        """Gets the connection_failures of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501


        :return: The connection_failures of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501
        :rtype: int
        """
        return self._connection_failures

    @connection_failures.setter
    def connection_failures(self, connection_failures):
        """Sets the connection_failures of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.


        :param connection_failures: The connection_failures of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501
        :type: int
        """

        self._connection_failures = connection_failures

    @property
    def connection_timeouts(self):
        """Gets the connection_timeouts of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501


        :return: The connection_timeouts of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501
        :rtype: int
        """
        return self._connection_timeouts

    @connection_timeouts.setter
    def connection_timeouts(self, connection_timeouts):
        """Sets the connection_timeouts of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.


        :param connection_timeouts: The connection_timeouts of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501
        :type: int
        """

        self._connection_timeouts = connection_timeouts

    @property
    def messages_sent(self):
        """Gets the messages_sent of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501


        :return: The messages_sent of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501
        :rtype: int
        """
        return self._messages_sent

    @messages_sent.setter
    def messages_sent(self, messages_sent):
        """Sets the messages_sent of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.


        :param messages_sent: The messages_sent of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501
        :type: int
        """

        self._messages_sent = messages_sent

    @property
    def messages_received(self):
        """Gets the messages_received of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501


        :return: The messages_received of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501
        :rtype: int
        """
        return self._messages_received

    @messages_received.setter
    def messages_received(self, messages_received):
        """Sets the messages_received of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.


        :param messages_received: The messages_received of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501
        :type: int
        """

        self._messages_received = messages_received

    @property
    def errors_received(self):
        """Gets the errors_received of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501


        :return: The errors_received of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501
        :rtype: int
        """
        return self._errors_received

    @errors_received.setter
    def errors_received(self, errors_received):
        """Sets the errors_received of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.


        :param errors_received: The errors_received of this GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState.  # noqa: E501
        :type: int
        """

        self._errors_received = errors_received

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetOpenconfigSystemSystemOpenconfigsystemsystemAaaServergroupsServersState):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
