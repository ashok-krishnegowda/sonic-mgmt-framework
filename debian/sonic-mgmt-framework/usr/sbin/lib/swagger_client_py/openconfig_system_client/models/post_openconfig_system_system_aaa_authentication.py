# coding: utf-8

"""
    Sonic Network Management APIs

    Network management Open APIs for Sonic.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from openconfig_system_client.models.openconfig_system_system_aaa_accounting import OpenconfigSystemSystemAaaAccounting  # noqa: F401,E501
from openconfig_system_client.models.openconfig_system_system_aaa_authentication import OpenconfigSystemSystemAaaAuthentication  # noqa: F401,E501
from openconfig_system_client.models.openconfig_system_system_aaa_authorization import OpenconfigSystemSystemAaaAuthorization  # noqa: F401,E501
from openconfig_system_client.models.openconfig_system_system_aaa_server_groups import OpenconfigSystemSystemAaaServerGroups  # noqa: F401,E501
from openconfig_system_client.models.openconfig_system_system_openconfigsystemsystem_aaa_accounting import OpenconfigSystemSystemOpenconfigsystemsystemAaaAccounting  # noqa: F401,E501
from openconfig_system_client.models.openconfig_system_system_openconfigsystemsystem_aaa_authentication import OpenconfigSystemSystemOpenconfigsystemsystemAaaAuthentication  # noqa: F401,E501
from openconfig_system_client.models.openconfig_system_system_openconfigsystemsystem_aaa_authorization import OpenconfigSystemSystemOpenconfigsystemsystemAaaAuthorization  # noqa: F401,E501
from openconfig_system_client.models.openconfig_system_system_openconfigsystemsystem_aaa_servergroups import OpenconfigSystemSystemOpenconfigsystemsystemAaaServergroups  # noqa: F401,E501


class PostOpenconfigSystemSystemAaaAuthentication(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'openconfig_systemauthentication': 'OpenconfigSystemSystemOpenconfigsystemsystemAaaAuthentication',
        'openconfig_systemauthorization': 'OpenconfigSystemSystemOpenconfigsystemsystemAaaAuthorization',
        'openconfig_systemaccounting': 'OpenconfigSystemSystemOpenconfigsystemsystemAaaAccounting',
        'openconfig_systemserver_groups': 'OpenconfigSystemSystemOpenconfigsystemsystemAaaServergroups'
    }

    attribute_map = {
        'openconfig_systemauthentication': 'openconfig-system:authentication',
        'openconfig_systemauthorization': 'openconfig-system:authorization',
        'openconfig_systemaccounting': 'openconfig-system:accounting',
        'openconfig_systemserver_groups': 'openconfig-system:server-groups'
    }

    def __init__(self, openconfig_systemauthentication=None, openconfig_systemauthorization=None, openconfig_systemaccounting=None, openconfig_systemserver_groups=None):  # noqa: E501
        """PostOpenconfigSystemSystemAaaAuthentication - a model defined in Swagger"""  # noqa: E501

        self._openconfig_systemauthentication = None
        self._openconfig_systemauthorization = None
        self._openconfig_systemaccounting = None
        self._openconfig_systemserver_groups = None
        self.discriminator = None

        if openconfig_systemauthentication is not None:
            self.openconfig_systemauthentication = openconfig_systemauthentication
        if openconfig_systemauthorization is not None:
            self.openconfig_systemauthorization = openconfig_systemauthorization
        if openconfig_systemaccounting is not None:
            self.openconfig_systemaccounting = openconfig_systemaccounting
        if openconfig_systemserver_groups is not None:
            self.openconfig_systemserver_groups = openconfig_systemserver_groups

    @property
    def openconfig_systemauthentication(self):
        """Gets the openconfig_systemauthentication of this PostOpenconfigSystemSystemAaaAuthentication.  # noqa: E501


        :return: The openconfig_systemauthentication of this PostOpenconfigSystemSystemAaaAuthentication.  # noqa: E501
        :rtype: OpenconfigSystemSystemOpenconfigsystemsystemAaaAuthentication
        """
        return self._openconfig_systemauthentication

    @openconfig_systemauthentication.setter
    def openconfig_systemauthentication(self, openconfig_systemauthentication):
        """Sets the openconfig_systemauthentication of this PostOpenconfigSystemSystemAaaAuthentication.


        :param openconfig_systemauthentication: The openconfig_systemauthentication of this PostOpenconfigSystemSystemAaaAuthentication.  # noqa: E501
        :type: OpenconfigSystemSystemOpenconfigsystemsystemAaaAuthentication
        """

        self._openconfig_systemauthentication = openconfig_systemauthentication

    @property
    def openconfig_systemauthorization(self):
        """Gets the openconfig_systemauthorization of this PostOpenconfigSystemSystemAaaAuthentication.  # noqa: E501


        :return: The openconfig_systemauthorization of this PostOpenconfigSystemSystemAaaAuthentication.  # noqa: E501
        :rtype: OpenconfigSystemSystemOpenconfigsystemsystemAaaAuthorization
        """
        return self._openconfig_systemauthorization

    @openconfig_systemauthorization.setter
    def openconfig_systemauthorization(self, openconfig_systemauthorization):
        """Sets the openconfig_systemauthorization of this PostOpenconfigSystemSystemAaaAuthentication.


        :param openconfig_systemauthorization: The openconfig_systemauthorization of this PostOpenconfigSystemSystemAaaAuthentication.  # noqa: E501
        :type: OpenconfigSystemSystemOpenconfigsystemsystemAaaAuthorization
        """

        self._openconfig_systemauthorization = openconfig_systemauthorization

    @property
    def openconfig_systemaccounting(self):
        """Gets the openconfig_systemaccounting of this PostOpenconfigSystemSystemAaaAuthentication.  # noqa: E501


        :return: The openconfig_systemaccounting of this PostOpenconfigSystemSystemAaaAuthentication.  # noqa: E501
        :rtype: OpenconfigSystemSystemOpenconfigsystemsystemAaaAccounting
        """
        return self._openconfig_systemaccounting

    @openconfig_systemaccounting.setter
    def openconfig_systemaccounting(self, openconfig_systemaccounting):
        """Sets the openconfig_systemaccounting of this PostOpenconfigSystemSystemAaaAuthentication.


        :param openconfig_systemaccounting: The openconfig_systemaccounting of this PostOpenconfigSystemSystemAaaAuthentication.  # noqa: E501
        :type: OpenconfigSystemSystemOpenconfigsystemsystemAaaAccounting
        """

        self._openconfig_systemaccounting = openconfig_systemaccounting

    @property
    def openconfig_systemserver_groups(self):
        """Gets the openconfig_systemserver_groups of this PostOpenconfigSystemSystemAaaAuthentication.  # noqa: E501


        :return: The openconfig_systemserver_groups of this PostOpenconfigSystemSystemAaaAuthentication.  # noqa: E501
        :rtype: OpenconfigSystemSystemOpenconfigsystemsystemAaaServergroups
        """
        return self._openconfig_systemserver_groups

    @openconfig_systemserver_groups.setter
    def openconfig_systemserver_groups(self, openconfig_systemserver_groups):
        """Sets the openconfig_systemserver_groups of this PostOpenconfigSystemSystemAaaAuthentication.


        :param openconfig_systemserver_groups: The openconfig_systemserver_groups of this PostOpenconfigSystemSystemAaaAuthentication.  # noqa: E501
        :type: OpenconfigSystemSystemOpenconfigsystemsystemAaaServergroups
        """

        self._openconfig_systemserver_groups = openconfig_systemserver_groups

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PostOpenconfigSystemSystemAaaAuthentication, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PostOpenconfigSystemSystemAaaAuthentication):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
