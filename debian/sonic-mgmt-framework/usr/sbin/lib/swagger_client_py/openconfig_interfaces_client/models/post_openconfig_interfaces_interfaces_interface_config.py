# coding: utf-8

"""
    Sonic Network Management APIs

    Network management Open APIs for Sonic.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from openconfig_interfaces_client.models.openconfig_if_aggregate_interfaces_interface_aggregation import OpenconfigIfAggregateInterfacesInterfaceAggregation  # noqa: F401,E501
from openconfig_interfaces_client.models.openconfig_if_aggregate_interfaces_interface_aggregation_openconfigifaggregateaggregation import OpenconfigIfAggregateInterfacesInterfaceAggregationOpenconfigifaggregateaggregation  # noqa: F401,E501
from openconfig_interfaces_client.models.openconfig_if_ethernet_interfaces_interface_ethernet import OpenconfigIfEthernetInterfacesInterfaceEthernet  # noqa: F401,E501
from openconfig_interfaces_client.models.openconfig_if_ethernet_interfaces_interface_ethernet_openconfigifethernetethernet import OpenconfigIfEthernetInterfacesInterfaceEthernetOpenconfigifethernetethernet  # noqa: F401,E501
from openconfig_interfaces_client.models.openconfig_interfaces_interfaces_interface_config import OpenconfigInterfacesInterfacesInterfaceConfig  # noqa: F401,E501
from openconfig_interfaces_client.models.openconfig_interfaces_interfaces_interface_hold_time import OpenconfigInterfacesInterfacesInterfaceHoldTime  # noqa: F401,E501
from openconfig_interfaces_client.models.openconfig_interfaces_interfaces_interface_subinterfaces import OpenconfigInterfacesInterfacesInterfaceSubinterfaces  # noqa: F401,E501
from openconfig_interfaces_client.models.openconfig_interfaces_interfaces_interface_subinterfaces_openconfiginterfacessubinterfaces import OpenconfigInterfacesInterfacesInterfaceSubinterfacesOpenconfiginterfacessubinterfaces  # noqa: F401,E501
from openconfig_interfaces_client.models.openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_config import OpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesConfig  # noqa: F401,E501
from openconfig_interfaces_client.models.openconfig_interfaces_interfaces_openconfiginterfacesinterfaces_holdtime import OpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesHoldtime  # noqa: F401,E501
from openconfig_interfaces_client.models.openconfig_vlan_interfaces_interface_routed_vlan import OpenconfigVlanInterfacesInterfaceRoutedVlan  # noqa: F401,E501
from openconfig_interfaces_client.models.openconfig_vlan_interfaces_interface_routed_vlan_openconfigvlanroutedvlan import OpenconfigVlanInterfacesInterfaceRoutedVlanOpenconfigvlanroutedvlan  # noqa: F401,E501


class PostOpenconfigInterfacesInterfacesInterfaceConfig(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'openconfig_interfacesconfig': 'OpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesConfig',
        'openconfig_interfaceshold_time': 'OpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesHoldtime',
        'openconfig_interfacessubinterfaces': 'OpenconfigInterfacesInterfacesInterfaceSubinterfacesOpenconfiginterfacessubinterfaces',
        'openconfig_if_ethernetethernet': 'OpenconfigIfEthernetInterfacesInterfaceEthernetOpenconfigifethernetethernet',
        'openconfig_if_aggregateaggregation': 'OpenconfigIfAggregateInterfacesInterfaceAggregationOpenconfigifaggregateaggregation',
        'openconfig_vlanrouted_vlan': 'OpenconfigVlanInterfacesInterfaceRoutedVlanOpenconfigvlanroutedvlan'
    }

    attribute_map = {
        'openconfig_interfacesconfig': 'openconfig-interfaces:config',
        'openconfig_interfaceshold_time': 'openconfig-interfaces:hold-time',
        'openconfig_interfacessubinterfaces': 'openconfig-interfaces:subinterfaces',
        'openconfig_if_ethernetethernet': 'openconfig-if-ethernet:ethernet',
        'openconfig_if_aggregateaggregation': 'openconfig-if-aggregate:aggregation',
        'openconfig_vlanrouted_vlan': 'openconfig-vlan:routed-vlan'
    }

    def __init__(self, openconfig_interfacesconfig=None, openconfig_interfaceshold_time=None, openconfig_interfacessubinterfaces=None, openconfig_if_ethernetethernet=None, openconfig_if_aggregateaggregation=None, openconfig_vlanrouted_vlan=None):  # noqa: E501
        """PostOpenconfigInterfacesInterfacesInterfaceConfig - a model defined in Swagger"""  # noqa: E501

        self._openconfig_interfacesconfig = None
        self._openconfig_interfaceshold_time = None
        self._openconfig_interfacessubinterfaces = None
        self._openconfig_if_ethernetethernet = None
        self._openconfig_if_aggregateaggregation = None
        self._openconfig_vlanrouted_vlan = None
        self.discriminator = None

        if openconfig_interfacesconfig is not None:
            self.openconfig_interfacesconfig = openconfig_interfacesconfig
        if openconfig_interfaceshold_time is not None:
            self.openconfig_interfaceshold_time = openconfig_interfaceshold_time
        if openconfig_interfacessubinterfaces is not None:
            self.openconfig_interfacessubinterfaces = openconfig_interfacessubinterfaces
        if openconfig_if_ethernetethernet is not None:
            self.openconfig_if_ethernetethernet = openconfig_if_ethernetethernet
        if openconfig_if_aggregateaggregation is not None:
            self.openconfig_if_aggregateaggregation = openconfig_if_aggregateaggregation
        if openconfig_vlanrouted_vlan is not None:
            self.openconfig_vlanrouted_vlan = openconfig_vlanrouted_vlan

    @property
    def openconfig_interfacesconfig(self):
        """Gets the openconfig_interfacesconfig of this PostOpenconfigInterfacesInterfacesInterfaceConfig.  # noqa: E501


        :return: The openconfig_interfacesconfig of this PostOpenconfigInterfacesInterfacesInterfaceConfig.  # noqa: E501
        :rtype: OpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesConfig
        """
        return self._openconfig_interfacesconfig

    @openconfig_interfacesconfig.setter
    def openconfig_interfacesconfig(self, openconfig_interfacesconfig):
        """Sets the openconfig_interfacesconfig of this PostOpenconfigInterfacesInterfacesInterfaceConfig.


        :param openconfig_interfacesconfig: The openconfig_interfacesconfig of this PostOpenconfigInterfacesInterfacesInterfaceConfig.  # noqa: E501
        :type: OpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesConfig
        """

        self._openconfig_interfacesconfig = openconfig_interfacesconfig

    @property
    def openconfig_interfaceshold_time(self):
        """Gets the openconfig_interfaceshold_time of this PostOpenconfigInterfacesInterfacesInterfaceConfig.  # noqa: E501


        :return: The openconfig_interfaceshold_time of this PostOpenconfigInterfacesInterfacesInterfaceConfig.  # noqa: E501
        :rtype: OpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesHoldtime
        """
        return self._openconfig_interfaceshold_time

    @openconfig_interfaceshold_time.setter
    def openconfig_interfaceshold_time(self, openconfig_interfaceshold_time):
        """Sets the openconfig_interfaceshold_time of this PostOpenconfigInterfacesInterfacesInterfaceConfig.


        :param openconfig_interfaceshold_time: The openconfig_interfaceshold_time of this PostOpenconfigInterfacesInterfacesInterfaceConfig.  # noqa: E501
        :type: OpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesHoldtime
        """

        self._openconfig_interfaceshold_time = openconfig_interfaceshold_time

    @property
    def openconfig_interfacessubinterfaces(self):
        """Gets the openconfig_interfacessubinterfaces of this PostOpenconfigInterfacesInterfacesInterfaceConfig.  # noqa: E501


        :return: The openconfig_interfacessubinterfaces of this PostOpenconfigInterfacesInterfacesInterfaceConfig.  # noqa: E501
        :rtype: OpenconfigInterfacesInterfacesInterfaceSubinterfacesOpenconfiginterfacessubinterfaces
        """
        return self._openconfig_interfacessubinterfaces

    @openconfig_interfacessubinterfaces.setter
    def openconfig_interfacessubinterfaces(self, openconfig_interfacessubinterfaces):
        """Sets the openconfig_interfacessubinterfaces of this PostOpenconfigInterfacesInterfacesInterfaceConfig.


        :param openconfig_interfacessubinterfaces: The openconfig_interfacessubinterfaces of this PostOpenconfigInterfacesInterfacesInterfaceConfig.  # noqa: E501
        :type: OpenconfigInterfacesInterfacesInterfaceSubinterfacesOpenconfiginterfacessubinterfaces
        """

        self._openconfig_interfacessubinterfaces = openconfig_interfacessubinterfaces

    @property
    def openconfig_if_ethernetethernet(self):
        """Gets the openconfig_if_ethernetethernet of this PostOpenconfigInterfacesInterfacesInterfaceConfig.  # noqa: E501


        :return: The openconfig_if_ethernetethernet of this PostOpenconfigInterfacesInterfacesInterfaceConfig.  # noqa: E501
        :rtype: OpenconfigIfEthernetInterfacesInterfaceEthernetOpenconfigifethernetethernet
        """
        return self._openconfig_if_ethernetethernet

    @openconfig_if_ethernetethernet.setter
    def openconfig_if_ethernetethernet(self, openconfig_if_ethernetethernet):
        """Sets the openconfig_if_ethernetethernet of this PostOpenconfigInterfacesInterfacesInterfaceConfig.


        :param openconfig_if_ethernetethernet: The openconfig_if_ethernetethernet of this PostOpenconfigInterfacesInterfacesInterfaceConfig.  # noqa: E501
        :type: OpenconfigIfEthernetInterfacesInterfaceEthernetOpenconfigifethernetethernet
        """

        self._openconfig_if_ethernetethernet = openconfig_if_ethernetethernet

    @property
    def openconfig_if_aggregateaggregation(self):
        """Gets the openconfig_if_aggregateaggregation of this PostOpenconfigInterfacesInterfacesInterfaceConfig.  # noqa: E501


        :return: The openconfig_if_aggregateaggregation of this PostOpenconfigInterfacesInterfacesInterfaceConfig.  # noqa: E501
        :rtype: OpenconfigIfAggregateInterfacesInterfaceAggregationOpenconfigifaggregateaggregation
        """
        return self._openconfig_if_aggregateaggregation

    @openconfig_if_aggregateaggregation.setter
    def openconfig_if_aggregateaggregation(self, openconfig_if_aggregateaggregation):
        """Sets the openconfig_if_aggregateaggregation of this PostOpenconfigInterfacesInterfacesInterfaceConfig.


        :param openconfig_if_aggregateaggregation: The openconfig_if_aggregateaggregation of this PostOpenconfigInterfacesInterfacesInterfaceConfig.  # noqa: E501
        :type: OpenconfigIfAggregateInterfacesInterfaceAggregationOpenconfigifaggregateaggregation
        """

        self._openconfig_if_aggregateaggregation = openconfig_if_aggregateaggregation

    @property
    def openconfig_vlanrouted_vlan(self):
        """Gets the openconfig_vlanrouted_vlan of this PostOpenconfigInterfacesInterfacesInterfaceConfig.  # noqa: E501


        :return: The openconfig_vlanrouted_vlan of this PostOpenconfigInterfacesInterfacesInterfaceConfig.  # noqa: E501
        :rtype: OpenconfigVlanInterfacesInterfaceRoutedVlanOpenconfigvlanroutedvlan
        """
        return self._openconfig_vlanrouted_vlan

    @openconfig_vlanrouted_vlan.setter
    def openconfig_vlanrouted_vlan(self, openconfig_vlanrouted_vlan):
        """Sets the openconfig_vlanrouted_vlan of this PostOpenconfigInterfacesInterfacesInterfaceConfig.


        :param openconfig_vlanrouted_vlan: The openconfig_vlanrouted_vlan of this PostOpenconfigInterfacesInterfacesInterfaceConfig.  # noqa: E501
        :type: OpenconfigVlanInterfacesInterfaceRoutedVlanOpenconfigvlanroutedvlan
        """

        self._openconfig_vlanrouted_vlan = openconfig_vlanrouted_vlan

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PostOpenconfigInterfacesInterfacesInterfaceConfig, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PostOpenconfigInterfacesInterfacesInterfaceConfig):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
