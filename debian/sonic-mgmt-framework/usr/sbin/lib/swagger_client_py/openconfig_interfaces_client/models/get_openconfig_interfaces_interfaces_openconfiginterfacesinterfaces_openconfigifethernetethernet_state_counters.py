# coding: utf-8

"""
    Sonic Network Management APIs

    Network management Open APIs for Sonic.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'in_mac_control_frames': 'int',
        'in_mac_pause_frames': 'int',
        'in_oversize_frames': 'int',
        'in_undersize_frames': 'int',
        'in_jabber_frames': 'int',
        'in_fragment_frames': 'int',
        'in_8021q_frames': 'int',
        'in_crc_errors': 'int',
        'in_block_errors': 'int',
        'out_mac_control_frames': 'int',
        'out_mac_pause_frames': 'int',
        'out_8021q_frames': 'int'
    }

    attribute_map = {
        'in_mac_control_frames': 'in-mac-control-frames',
        'in_mac_pause_frames': 'in-mac-pause-frames',
        'in_oversize_frames': 'in-oversize-frames',
        'in_undersize_frames': 'in-undersize-frames',
        'in_jabber_frames': 'in-jabber-frames',
        'in_fragment_frames': 'in-fragment-frames',
        'in_8021q_frames': 'in-8021q-frames',
        'in_crc_errors': 'in-crc-errors',
        'in_block_errors': 'in-block-errors',
        'out_mac_control_frames': 'out-mac-control-frames',
        'out_mac_pause_frames': 'out-mac-pause-frames',
        'out_8021q_frames': 'out-8021q-frames'
    }

    def __init__(self, in_mac_control_frames=None, in_mac_pause_frames=None, in_oversize_frames=None, in_undersize_frames=None, in_jabber_frames=None, in_fragment_frames=None, in_8021q_frames=None, in_crc_errors=None, in_block_errors=None, out_mac_control_frames=None, out_mac_pause_frames=None, out_8021q_frames=None):  # noqa: E501
        """GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters - a model defined in Swagger"""  # noqa: E501

        self._in_mac_control_frames = None
        self._in_mac_pause_frames = None
        self._in_oversize_frames = None
        self._in_undersize_frames = None
        self._in_jabber_frames = None
        self._in_fragment_frames = None
        self._in_8021q_frames = None
        self._in_crc_errors = None
        self._in_block_errors = None
        self._out_mac_control_frames = None
        self._out_mac_pause_frames = None
        self._out_8021q_frames = None
        self.discriminator = None

        if in_mac_control_frames is not None:
            self.in_mac_control_frames = in_mac_control_frames
        if in_mac_pause_frames is not None:
            self.in_mac_pause_frames = in_mac_pause_frames
        if in_oversize_frames is not None:
            self.in_oversize_frames = in_oversize_frames
        if in_undersize_frames is not None:
            self.in_undersize_frames = in_undersize_frames
        if in_jabber_frames is not None:
            self.in_jabber_frames = in_jabber_frames
        if in_fragment_frames is not None:
            self.in_fragment_frames = in_fragment_frames
        if in_8021q_frames is not None:
            self.in_8021q_frames = in_8021q_frames
        if in_crc_errors is not None:
            self.in_crc_errors = in_crc_errors
        if in_block_errors is not None:
            self.in_block_errors = in_block_errors
        if out_mac_control_frames is not None:
            self.out_mac_control_frames = out_mac_control_frames
        if out_mac_pause_frames is not None:
            self.out_mac_pause_frames = out_mac_pause_frames
        if out_8021q_frames is not None:
            self.out_8021q_frames = out_8021q_frames

    @property
    def in_mac_control_frames(self):
        """Gets the in_mac_control_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501


        :return: The in_mac_control_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :rtype: int
        """
        return self._in_mac_control_frames

    @in_mac_control_frames.setter
    def in_mac_control_frames(self, in_mac_control_frames):
        """Sets the in_mac_control_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.


        :param in_mac_control_frames: The in_mac_control_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :type: int
        """

        self._in_mac_control_frames = in_mac_control_frames

    @property
    def in_mac_pause_frames(self):
        """Gets the in_mac_pause_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501


        :return: The in_mac_pause_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :rtype: int
        """
        return self._in_mac_pause_frames

    @in_mac_pause_frames.setter
    def in_mac_pause_frames(self, in_mac_pause_frames):
        """Sets the in_mac_pause_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.


        :param in_mac_pause_frames: The in_mac_pause_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :type: int
        """

        self._in_mac_pause_frames = in_mac_pause_frames

    @property
    def in_oversize_frames(self):
        """Gets the in_oversize_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501


        :return: The in_oversize_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :rtype: int
        """
        return self._in_oversize_frames

    @in_oversize_frames.setter
    def in_oversize_frames(self, in_oversize_frames):
        """Sets the in_oversize_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.


        :param in_oversize_frames: The in_oversize_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :type: int
        """

        self._in_oversize_frames = in_oversize_frames

    @property
    def in_undersize_frames(self):
        """Gets the in_undersize_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501


        :return: The in_undersize_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :rtype: int
        """
        return self._in_undersize_frames

    @in_undersize_frames.setter
    def in_undersize_frames(self, in_undersize_frames):
        """Sets the in_undersize_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.


        :param in_undersize_frames: The in_undersize_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :type: int
        """

        self._in_undersize_frames = in_undersize_frames

    @property
    def in_jabber_frames(self):
        """Gets the in_jabber_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501


        :return: The in_jabber_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :rtype: int
        """
        return self._in_jabber_frames

    @in_jabber_frames.setter
    def in_jabber_frames(self, in_jabber_frames):
        """Sets the in_jabber_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.


        :param in_jabber_frames: The in_jabber_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :type: int
        """

        self._in_jabber_frames = in_jabber_frames

    @property
    def in_fragment_frames(self):
        """Gets the in_fragment_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501


        :return: The in_fragment_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :rtype: int
        """
        return self._in_fragment_frames

    @in_fragment_frames.setter
    def in_fragment_frames(self, in_fragment_frames):
        """Sets the in_fragment_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.


        :param in_fragment_frames: The in_fragment_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :type: int
        """

        self._in_fragment_frames = in_fragment_frames

    @property
    def in_8021q_frames(self):
        """Gets the in_8021q_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501


        :return: The in_8021q_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :rtype: int
        """
        return self._in_8021q_frames

    @in_8021q_frames.setter
    def in_8021q_frames(self, in_8021q_frames):
        """Sets the in_8021q_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.


        :param in_8021q_frames: The in_8021q_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :type: int
        """

        self._in_8021q_frames = in_8021q_frames

    @property
    def in_crc_errors(self):
        """Gets the in_crc_errors of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501


        :return: The in_crc_errors of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :rtype: int
        """
        return self._in_crc_errors

    @in_crc_errors.setter
    def in_crc_errors(self, in_crc_errors):
        """Sets the in_crc_errors of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.


        :param in_crc_errors: The in_crc_errors of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :type: int
        """

        self._in_crc_errors = in_crc_errors

    @property
    def in_block_errors(self):
        """Gets the in_block_errors of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501


        :return: The in_block_errors of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :rtype: int
        """
        return self._in_block_errors

    @in_block_errors.setter
    def in_block_errors(self, in_block_errors):
        """Sets the in_block_errors of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.


        :param in_block_errors: The in_block_errors of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :type: int
        """

        self._in_block_errors = in_block_errors

    @property
    def out_mac_control_frames(self):
        """Gets the out_mac_control_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501


        :return: The out_mac_control_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :rtype: int
        """
        return self._out_mac_control_frames

    @out_mac_control_frames.setter
    def out_mac_control_frames(self, out_mac_control_frames):
        """Sets the out_mac_control_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.


        :param out_mac_control_frames: The out_mac_control_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :type: int
        """

        self._out_mac_control_frames = out_mac_control_frames

    @property
    def out_mac_pause_frames(self):
        """Gets the out_mac_pause_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501


        :return: The out_mac_pause_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :rtype: int
        """
        return self._out_mac_pause_frames

    @out_mac_pause_frames.setter
    def out_mac_pause_frames(self, out_mac_pause_frames):
        """Sets the out_mac_pause_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.


        :param out_mac_pause_frames: The out_mac_pause_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :type: int
        """

        self._out_mac_pause_frames = out_mac_pause_frames

    @property
    def out_8021q_frames(self):
        """Gets the out_8021q_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501


        :return: The out_8021q_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :rtype: int
        """
        return self._out_8021q_frames

    @out_8021q_frames.setter
    def out_8021q_frames(self, out_8021q_frames):
        """Sets the out_8021q_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.


        :param out_8021q_frames: The out_8021q_frames of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters.  # noqa: E501
        :type: int
        """

        self._out_8021q_frames = out_8021q_frames

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesOpenconfigifethernetethernetStateCounters):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
