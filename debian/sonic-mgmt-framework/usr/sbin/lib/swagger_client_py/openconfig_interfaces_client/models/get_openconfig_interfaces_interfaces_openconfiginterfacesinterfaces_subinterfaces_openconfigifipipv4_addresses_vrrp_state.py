# coding: utf-8

"""
    Sonic Network Management APIs

    Network management Open APIs for Sonic.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'virtual_router_id': 'int',
        'virtual_address': 'list[str]',
        'priority': 'int',
        'preempt': 'bool',
        'preempt_delay': 'int',
        'accept_mode': 'bool',
        'advertisement_interval': 'int',
        'current_priority': 'int'
    }

    attribute_map = {
        'virtual_router_id': 'virtual-router-id',
        'virtual_address': 'virtual-address',
        'priority': 'priority',
        'preempt': 'preempt',
        'preempt_delay': 'preempt-delay',
        'accept_mode': 'accept-mode',
        'advertisement_interval': 'advertisement-interval',
        'current_priority': 'current-priority'
    }

    def __init__(self, virtual_router_id=None, virtual_address=None, priority=None, preempt=None, preempt_delay=None, accept_mode=None, advertisement_interval=None, current_priority=None):  # noqa: E501
        """GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState - a model defined in Swagger"""  # noqa: E501

        self._virtual_router_id = None
        self._virtual_address = None
        self._priority = None
        self._preempt = None
        self._preempt_delay = None
        self._accept_mode = None
        self._advertisement_interval = None
        self._current_priority = None
        self.discriminator = None

        if virtual_router_id is not None:
            self.virtual_router_id = virtual_router_id
        if virtual_address is not None:
            self.virtual_address = virtual_address
        if priority is not None:
            self.priority = priority
        if preempt is not None:
            self.preempt = preempt
        if preempt_delay is not None:
            self.preempt_delay = preempt_delay
        if accept_mode is not None:
            self.accept_mode = accept_mode
        if advertisement_interval is not None:
            self.advertisement_interval = advertisement_interval
        if current_priority is not None:
            self.current_priority = current_priority

    @property
    def virtual_router_id(self):
        """Gets the virtual_router_id of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501


        :return: The virtual_router_id of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501
        :rtype: int
        """
        return self._virtual_router_id

    @virtual_router_id.setter
    def virtual_router_id(self, virtual_router_id):
        """Sets the virtual_router_id of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.


        :param virtual_router_id: The virtual_router_id of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501
        :type: int
        """

        self._virtual_router_id = virtual_router_id

    @property
    def virtual_address(self):
        """Gets the virtual_address of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501


        :return: The virtual_address of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501
        :rtype: list[str]
        """
        return self._virtual_address

    @virtual_address.setter
    def virtual_address(self, virtual_address):
        """Sets the virtual_address of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.


        :param virtual_address: The virtual_address of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501
        :type: list[str]
        """

        self._virtual_address = virtual_address

    @property
    def priority(self):
        """Gets the priority of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501


        :return: The priority of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.


        :param priority: The priority of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501
        :type: int
        """

        self._priority = priority

    @property
    def preempt(self):
        """Gets the preempt of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501


        :return: The preempt of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501
        :rtype: bool
        """
        return self._preempt

    @preempt.setter
    def preempt(self, preempt):
        """Sets the preempt of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.


        :param preempt: The preempt of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501
        :type: bool
        """

        self._preempt = preempt

    @property
    def preempt_delay(self):
        """Gets the preempt_delay of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501


        :return: The preempt_delay of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501
        :rtype: int
        """
        return self._preempt_delay

    @preempt_delay.setter
    def preempt_delay(self, preempt_delay):
        """Sets the preempt_delay of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.


        :param preempt_delay: The preempt_delay of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501
        :type: int
        """

        self._preempt_delay = preempt_delay

    @property
    def accept_mode(self):
        """Gets the accept_mode of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501


        :return: The accept_mode of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501
        :rtype: bool
        """
        return self._accept_mode

    @accept_mode.setter
    def accept_mode(self, accept_mode):
        """Sets the accept_mode of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.


        :param accept_mode: The accept_mode of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501
        :type: bool
        """

        self._accept_mode = accept_mode

    @property
    def advertisement_interval(self):
        """Gets the advertisement_interval of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501


        :return: The advertisement_interval of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501
        :rtype: int
        """
        return self._advertisement_interval

    @advertisement_interval.setter
    def advertisement_interval(self, advertisement_interval):
        """Sets the advertisement_interval of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.


        :param advertisement_interval: The advertisement_interval of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501
        :type: int
        """

        self._advertisement_interval = advertisement_interval

    @property
    def current_priority(self):
        """Gets the current_priority of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501


        :return: The current_priority of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501
        :rtype: int
        """
        return self._current_priority

    @current_priority.setter
    def current_priority(self, current_priority):
        """Sets the current_priority of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.


        :param current_priority: The current_priority of this GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState.  # noqa: E501
        :type: int
        """

        self._current_priority = current_priority

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetOpenconfigInterfacesInterfacesOpenconfiginterfacesinterfacesSubinterfacesOpenconfigifipipv4AddressesVrrpState):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
