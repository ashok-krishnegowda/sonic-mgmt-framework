# coding: utf-8

"""
    Sonic Network Management APIs

    Network management Open APIs for Sonic.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from openconfig_acl_client.models.openconfig_acl_acl_acl_sets_acl_set_acl_entries_acl_entry_ipv4_config_destination_address import OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigDestinationAddress  # noqa: F401,E501
from openconfig_acl_client.models.openconfig_acl_acl_acl_sets_acl_set_acl_entries_acl_entry_ipv4_config_dscp import OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigDscp  # noqa: F401,E501
from openconfig_acl_client.models.openconfig_acl_acl_acl_sets_acl_set_acl_entries_acl_entry_ipv4_config_hop_limit import OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigHopLimit  # noqa: F401,E501
from openconfig_acl_client.models.openconfig_acl_acl_acl_sets_acl_set_acl_entries_acl_entry_ipv4_config_protocol import OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigProtocol  # noqa: F401,E501
from openconfig_acl_client.models.openconfig_acl_acl_acl_sets_acl_set_acl_entries_acl_entry_ipv4_config_source_address import OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress  # noqa: F401,E501


class PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'openconfig_aclsource_address': 'str',
        'openconfig_acldestination_address': 'str',
        'openconfig_acldscp': 'int',
        'openconfig_aclprotocol': 'str',
        'openconfig_aclhop_limit': 'int'
    }

    attribute_map = {
        'openconfig_aclsource_address': 'openconfig-acl:source-address',
        'openconfig_acldestination_address': 'openconfig-acl:destination-address',
        'openconfig_acldscp': 'openconfig-acl:dscp',
        'openconfig_aclprotocol': 'openconfig-acl:protocol',
        'openconfig_aclhop_limit': 'openconfig-acl:hop-limit'
    }

    def __init__(self, openconfig_aclsource_address=None, openconfig_acldestination_address=None, openconfig_acldscp=None, openconfig_aclprotocol=None, openconfig_aclhop_limit=None):  # noqa: E501
        """PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress - a model defined in Swagger"""  # noqa: E501

        self._openconfig_aclsource_address = None
        self._openconfig_acldestination_address = None
        self._openconfig_acldscp = None
        self._openconfig_aclprotocol = None
        self._openconfig_aclhop_limit = None
        self.discriminator = None

        if openconfig_aclsource_address is not None:
            self.openconfig_aclsource_address = openconfig_aclsource_address
        if openconfig_acldestination_address is not None:
            self.openconfig_acldestination_address = openconfig_acldestination_address
        if openconfig_acldscp is not None:
            self.openconfig_acldscp = openconfig_acldscp
        if openconfig_aclprotocol is not None:
            self.openconfig_aclprotocol = openconfig_aclprotocol
        if openconfig_aclhop_limit is not None:
            self.openconfig_aclhop_limit = openconfig_aclhop_limit

    @property
    def openconfig_aclsource_address(self):
        """Gets the openconfig_aclsource_address of this PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress.  # noqa: E501


        :return: The openconfig_aclsource_address of this PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress.  # noqa: E501
        :rtype: str
        """
        return self._openconfig_aclsource_address

    @openconfig_aclsource_address.setter
    def openconfig_aclsource_address(self, openconfig_aclsource_address):
        """Sets the openconfig_aclsource_address of this PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress.


        :param openconfig_aclsource_address: The openconfig_aclsource_address of this PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress.  # noqa: E501
        :type: str
        """

        self._openconfig_aclsource_address = openconfig_aclsource_address

    @property
    def openconfig_acldestination_address(self):
        """Gets the openconfig_acldestination_address of this PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress.  # noqa: E501


        :return: The openconfig_acldestination_address of this PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress.  # noqa: E501
        :rtype: str
        """
        return self._openconfig_acldestination_address

    @openconfig_acldestination_address.setter
    def openconfig_acldestination_address(self, openconfig_acldestination_address):
        """Sets the openconfig_acldestination_address of this PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress.


        :param openconfig_acldestination_address: The openconfig_acldestination_address of this PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress.  # noqa: E501
        :type: str
        """

        self._openconfig_acldestination_address = openconfig_acldestination_address

    @property
    def openconfig_acldscp(self):
        """Gets the openconfig_acldscp of this PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress.  # noqa: E501


        :return: The openconfig_acldscp of this PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress.  # noqa: E501
        :rtype: int
        """
        return self._openconfig_acldscp

    @openconfig_acldscp.setter
    def openconfig_acldscp(self, openconfig_acldscp):
        """Sets the openconfig_acldscp of this PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress.


        :param openconfig_acldscp: The openconfig_acldscp of this PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress.  # noqa: E501
        :type: int
        """

        self._openconfig_acldscp = openconfig_acldscp

    @property
    def openconfig_aclprotocol(self):
        """Gets the openconfig_aclprotocol of this PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress.  # noqa: E501


        :return: The openconfig_aclprotocol of this PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress.  # noqa: E501
        :rtype: str
        """
        return self._openconfig_aclprotocol

    @openconfig_aclprotocol.setter
    def openconfig_aclprotocol(self, openconfig_aclprotocol):
        """Sets the openconfig_aclprotocol of this PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress.


        :param openconfig_aclprotocol: The openconfig_aclprotocol of this PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress.  # noqa: E501
        :type: str
        """

        self._openconfig_aclprotocol = openconfig_aclprotocol

    @property
    def openconfig_aclhop_limit(self):
        """Gets the openconfig_aclhop_limit of this PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress.  # noqa: E501


        :return: The openconfig_aclhop_limit of this PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress.  # noqa: E501
        :rtype: int
        """
        return self._openconfig_aclhop_limit

    @openconfig_aclhop_limit.setter
    def openconfig_aclhop_limit(self, openconfig_aclhop_limit):
        """Sets the openconfig_aclhop_limit of this PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress.


        :param openconfig_aclhop_limit: The openconfig_aclhop_limit of this PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress.  # noqa: E501
        :type: int
        """

        self._openconfig_aclhop_limit = openconfig_aclhop_limit

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PostOpenconfigAclAclAclSetsAclSetAclEntriesAclEntryIpv4ConfigSourceAddress):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
